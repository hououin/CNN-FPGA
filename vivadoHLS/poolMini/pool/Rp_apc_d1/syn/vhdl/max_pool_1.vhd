-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity max_pool_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    conv_1_out_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    conv_1_out_0_ce0 : OUT STD_LOGIC;
    conv_1_out_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_1_out_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    conv_1_out_0_ce1 : OUT STD_LOGIC;
    conv_1_out_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_1_out_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    conv_1_out_1_ce0 : OUT STD_LOGIC;
    conv_1_out_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_1_out_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    conv_1_out_1_ce1 : OUT STD_LOGIC;
    conv_1_out_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_1_out_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    conv_1_out_2_ce0 : OUT STD_LOGIC;
    conv_1_out_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_1_out_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    conv_1_out_2_ce1 : OUT STD_LOGIC;
    conv_1_out_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_1_out_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    conv_1_out_3_ce0 : OUT STD_LOGIC;
    conv_1_out_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_1_out_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    conv_1_out_3_ce1 : OUT STD_LOGIC;
    conv_1_out_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    max_pool_1_out_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    max_pool_1_out_0_ce0 : OUT STD_LOGIC;
    max_pool_1_out_0_we0 : OUT STD_LOGIC;
    max_pool_1_out_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    max_pool_1_out_0_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    max_pool_1_out_0_ce1 : OUT STD_LOGIC;
    max_pool_1_out_0_we1 : OUT STD_LOGIC;
    max_pool_1_out_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    max_pool_1_out_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    max_pool_1_out_1_ce0 : OUT STD_LOGIC;
    max_pool_1_out_1_we0 : OUT STD_LOGIC;
    max_pool_1_out_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    max_pool_1_out_1_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    max_pool_1_out_1_ce1 : OUT STD_LOGIC;
    max_pool_1_out_1_we1 : OUT STD_LOGIC;
    max_pool_1_out_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of max_pool_1 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "max_pool_1,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx485t-ffg1157-1,HLS_INPUT_CLOCK=40.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=34.817000,HLS_SYN_LAT=11,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=298,HLS_SYN_LUT=1584,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_800000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000100000000000000000000000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv62_1 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_286 : STD_LOGIC_VECTOR (2 downto 0);
    signal f_0_reg_297 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_0_reg_308 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln10_fu_368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln10_reg_1144 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln10_reg_1144_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln10_fu_374_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln10_reg_1148 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln28_16_fu_392_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln28_16_reg_1153 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln28_17_fu_400_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln28_17_reg_1159 : STD_LOGIC_VECTOR (1 downto 0);
    signal max_pool_1_out_0_ad_reg_1206 : STD_LOGIC_VECTOR (1 downto 0);
    signal max_pool_1_out_0_ad_reg_1206_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal max_pool_1_out_1_ad_reg_1211 : STD_LOGIC_VECTOR (1 downto 0);
    signal max_pool_1_out_1_ad_reg_1211_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln28_fu_430_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln28_reg_1216 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln28_reg_1216_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal max_pool_1_out_0_ad_1_reg_1260 : STD_LOGIC_VECTOR (1 downto 0);
    signal max_pool_1_out_1_ad_1_reg_1265 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln28_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_reg_1270 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln28_fu_525_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_reg_1276 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln28_1_fu_539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_1_reg_1283 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_345_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_10_reg_1289 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_4_fu_589_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_4_reg_1296 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_361_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_14_reg_1303 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_fu_597_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_reg_1310 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln28_1_fu_685_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_1_reg_1315 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1321 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal select_ln28_11_reg_1326 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_5_fu_776_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_5_reg_1333 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_1339 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln28_15_reg_1344 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_phi_mux_indvar_flatten_phi_fu_290_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_f_0_phi_fu_301_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_r_0_phi_fu_312_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln28_fu_408_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_418_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln28_3_fu_446_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln28_4_fu_462_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln28_3_fu_955_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_7_fu_1135_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_337_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_319_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_324_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_352_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_324_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_329_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_329_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_2_fu_865_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_333_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_333_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_6_fu_1045_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_337_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_345_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_352_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_361_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln13_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_fu_380_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln28_2_fu_437_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln28_fu_440_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln28_1_fu_434_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln28_1_fu_456_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln28_fu_470_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal bitcast_ln28_fu_483_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_487_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_1_fu_497_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_3_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_2_fu_501_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_1_fu_513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_fu_519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_fu_533_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal bitcast_ln28_7_fu_547_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_551_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_8_fu_561_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_17_fu_571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_16_fu_565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_8_fu_577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_7_fu_583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_1_fu_602_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_2_fu_620_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_606_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_2_fu_616_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_5_fu_643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_4_fu_637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_623_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_3_fu_633_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_7_fu_661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_6_fu_655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_2_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_3_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_1_fu_673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_2_fu_679_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_8_fu_693_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_9_fu_711_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_697_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_9_fu_707_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_19_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_18_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_714_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_10_fu_724_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_21_fu_752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_20_fu_746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_9_fu_740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_10_fu_758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_8_fu_764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_9_fu_770_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_3_fu_784_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_4_fu_801_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_787_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_4_fu_797_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_9_fu_824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_8_fu_818_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_804_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_5_fu_814_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_11_fu_842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_10_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_4_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_5_fu_848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_3_fu_854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_4_fu_860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_5_fu_872_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_6_fu_889_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_875_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_6_fu_885_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_13_fu_913_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_12_fu_907_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_893_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_7_fu_903_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_15_fu_931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_14_fu_925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_6_fu_919_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_7_fu_937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_5_fu_943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_6_fu_949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_10_fu_964_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_11_fu_981_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_967_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_11_fu_977_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_23_fu_1004_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_22_fu_998_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_984_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_12_fu_994_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_25_fu_1022_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_24_fu_1016_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_11_fu_1010_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_12_fu_1028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_10_fu_1034_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_11_fu_1040_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_12_fu_1052_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_13_fu_1069_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_1055_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_13_fu_1065_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_27_fu_1093_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_26_fu_1087_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_1073_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_14_fu_1083_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_29_fu_1111_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_28_fu_1105_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_13_fu_1099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_14_fu_1117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_12_fu_1123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_13_fu_1129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component max_pool_1_fcmp_3bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    max_pool_1_fcmp_3bkb_U1 : component max_pool_1_fcmp_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_337_p3,
        din1 => grp_fu_319_p1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_319_p2);

    max_pool_1_fcmp_3bkb_U2 : component max_pool_1_fcmp_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_324_p0,
        din1 => grp_fu_324_p1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_324_p2);

    max_pool_1_fcmp_3bkb_U3 : component max_pool_1_fcmp_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_329_p0,
        din1 => grp_fu_329_p1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_329_p2);

    max_pool_1_fcmp_3bkb_U4 : component max_pool_1_fcmp_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_333_p0,
        din1 => grp_fu_333_p1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_333_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    f_0_reg_297_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_reg_1144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                f_0_reg_297 <= select_ln28_17_reg_1159;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                f_0_reg_297 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_reg_1144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                indvar_flatten_reg_286 <= add_ln10_reg_1148;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_286 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    r_0_reg_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_reg_1144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                r_0_reg_308 <= r_reg_1310;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                r_0_reg_308 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                add_ln10_reg_1148 <= add_ln10_fu_374_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln10_reg_1144 <= icmp_ln10_fu_368_p2;
                icmp_ln10_reg_1144_pp0_iter1_reg <= icmp_ln10_reg_1144;
                max_pool_1_out_0_ad_reg_1206_pp0_iter1_reg <= max_pool_1_out_0_ad_reg_1206;
                max_pool_1_out_1_ad_reg_1211_pp0_iter1_reg <= max_pool_1_out_1_ad_reg_1211;
                select_ln28_5_reg_1333 <= select_ln28_5_fu_776_p3;
                trunc_ln28_reg_1216_pp0_iter1_reg <= trunc_ln28_reg_1216;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_reg_1144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                icmp_ln28_1_reg_1283 <= icmp_ln28_1_fu_539_p2;
                icmp_ln28_reg_1270 <= icmp_ln28_fu_475_p2;
                max_pool_1_out_0_ad_1_reg_1260 <= zext_ln28_3_fu_446_p1(2 - 1 downto 0);
                max_pool_1_out_1_ad_1_reg_1265 <= zext_ln28_3_fu_446_p1(2 - 1 downto 0);
                select_ln28_4_reg_1296 <= select_ln28_4_fu_589_p3;
                select_ln28_reg_1276 <= select_ln28_fu_525_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_fu_368_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                max_pool_1_out_0_ad_reg_1206 <= zext_ln28_fu_408_p1(2 - 1 downto 0);
                max_pool_1_out_1_ad_reg_1211 <= zext_ln28_fu_408_p1(2 - 1 downto 0);
                select_ln28_16_reg_1153 <= select_ln28_16_fu_392_p3;
                trunc_ln28_reg_1216 <= trunc_ln28_fu_430_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_reg_1144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                r_reg_1310 <= r_fu_597_p2;
                select_ln28_10_reg_1289 <= grp_fu_345_p3;
                select_ln28_14_reg_1303 <= grp_fu_361_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_reg_1144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                select_ln28_11_reg_1326 <= grp_fu_345_p3;
                tmp_9_reg_1321 <= grp_fu_324_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                select_ln28_15_reg_1344 <= grp_fu_361_p3;
                tmp_19_reg_1339 <= grp_fu_333_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_fu_368_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                select_ln28_17_reg_1159 <= select_ln28_17_fu_400_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_reg_1144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln28_1_reg_1315 <= select_ln28_1_fu_685_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln10_fu_368_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln10_fu_368_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((icmp_ln10_fu_368_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln10_fu_374_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_290_p4) + unsigned(ap_const_lv3_1));
    add_ln28_1_fu_456_p2 <= std_logic_vector(unsigned(ap_const_lv4_6) + unsigned(zext_ln28_1_fu_434_p1));
    add_ln28_fu_440_p2 <= std_logic_vector(unsigned(ap_const_lv3_2) + unsigned(zext_ln28_2_fu_437_p1));
    and_ln28_10_fu_1034_p2 <= (or_ln28_12_fu_1028_p2 and or_ln28_11_fu_1010_p2);
    and_ln28_11_fu_1040_p2 <= (tmp_19_reg_1339 and and_ln28_10_fu_1034_p2);
    and_ln28_12_fu_1123_p2 <= (or_ln28_14_fu_1117_p2 and or_ln28_13_fu_1099_p2);
    and_ln28_13_fu_1129_p2 <= (grp_fu_333_p2 and and_ln28_12_fu_1123_p2);
    and_ln28_1_fu_673_p2 <= (or_ln28_3_fu_667_p2 and or_ln28_2_fu_649_p2);
    and_ln28_2_fu_679_p2 <= (grp_fu_319_p2 and and_ln28_1_fu_673_p2);
    and_ln28_3_fu_854_p2 <= (or_ln28_5_fu_848_p2 and or_ln28_4_fu_830_p2);
    and_ln28_4_fu_860_p2 <= (tmp_9_reg_1321 and and_ln28_3_fu_854_p2);
    and_ln28_5_fu_943_p2 <= (or_ln28_7_fu_937_p2 and or_ln28_6_fu_919_p2);
    and_ln28_6_fu_949_p2 <= (grp_fu_329_p2 and and_ln28_5_fu_943_p2);
    and_ln28_7_fu_583_p2 <= (or_ln28_8_fu_577_p2 and grp_fu_324_p2);
    and_ln28_8_fu_764_p2 <= (or_ln28_9_fu_740_p2 and or_ln28_10_fu_758_p2);
    and_ln28_9_fu_770_p2 <= (grp_fu_329_p2 and and_ln28_8_fu_764_p2);
    and_ln28_fu_519_p2 <= (or_ln28_1_fu_513_p2 and grp_fu_319_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state6 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln10_fu_368_p2)
    begin
        if ((icmp_ln10_fu_368_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_f_0_phi_fu_301_p4_assign_proc : process(f_0_reg_297, icmp_ln10_reg_1144, ap_CS_fsm_pp0_stage0, select_ln28_17_reg_1159, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln10_reg_1144 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_f_0_phi_fu_301_p4 <= select_ln28_17_reg_1159;
        else 
            ap_phi_mux_f_0_phi_fu_301_p4 <= f_0_reg_297;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_290_p4_assign_proc : process(indvar_flatten_reg_286, icmp_ln10_reg_1144, ap_CS_fsm_pp0_stage0, add_ln10_reg_1148, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln10_reg_1144 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_indvar_flatten_phi_fu_290_p4 <= add_ln10_reg_1148;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_290_p4 <= indvar_flatten_reg_286;
        end if; 
    end process;


    ap_phi_mux_r_0_phi_fu_312_p4_assign_proc : process(r_0_reg_308, icmp_ln10_reg_1144, ap_CS_fsm_pp0_stage0, r_reg_1310, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln10_reg_1144 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_r_0_phi_fu_312_p4 <= r_reg_1310;
        else 
            ap_phi_mux_r_0_phi_fu_312_p4 <= r_0_reg_308;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln28_10_fu_964_p1 <= select_ln28_14_reg_1303;
    bitcast_ln28_11_fu_981_p1 <= select_ln28_5_reg_1333;
    bitcast_ln28_12_fu_1052_p1 <= select_ln28_15_reg_1344;
    bitcast_ln28_13_fu_1069_p1 <= select_ln28_6_fu_1045_p3;
    bitcast_ln28_1_fu_602_p1 <= grp_fu_337_p3;
    bitcast_ln28_2_fu_620_p1 <= select_ln28_reg_1276;
    bitcast_ln28_3_fu_784_p1 <= select_ln28_10_reg_1289;
    bitcast_ln28_4_fu_801_p1 <= select_ln28_1_reg_1315;
    bitcast_ln28_5_fu_872_p1 <= select_ln28_11_reg_1326;
    bitcast_ln28_6_fu_889_p1 <= select_ln28_2_fu_865_p3;
    bitcast_ln28_7_fu_547_p1 <= grp_fu_352_p3;
    bitcast_ln28_8_fu_693_p1 <= grp_fu_352_p3;
    bitcast_ln28_9_fu_711_p1 <= select_ln28_4_reg_1296;
    bitcast_ln28_fu_483_p1 <= grp_fu_337_p3;

    conv_1_out_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, zext_ln28_fu_408_p1, zext_ln28_3_fu_446_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_out_0_address0 <= zext_ln28_3_fu_446_p1(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_out_0_address0 <= zext_ln28_fu_408_p1(3 - 1 downto 0);
            else 
                conv_1_out_0_address0 <= "XXX";
            end if;
        else 
            conv_1_out_0_address0 <= "XXX";
        end if; 
    end process;


    conv_1_out_0_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, tmp_fu_418_p3, ap_block_pp0_stage1, zext_ln28_4_fu_462_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_out_0_address1 <= zext_ln28_4_fu_462_p1(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_out_0_address1 <= tmp_fu_418_p3(3 - 1 downto 0);
            else 
                conv_1_out_0_address1 <= "XXX";
            end if;
        else 
            conv_1_out_0_address1 <= "XXX";
        end if; 
    end process;


    conv_1_out_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            conv_1_out_0_ce0 <= ap_const_logic_1;
        else 
            conv_1_out_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            conv_1_out_0_ce1 <= ap_const_logic_1;
        else 
            conv_1_out_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, zext_ln28_fu_408_p1, zext_ln28_3_fu_446_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_out_1_address0 <= zext_ln28_3_fu_446_p1(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_out_1_address0 <= zext_ln28_fu_408_p1(3 - 1 downto 0);
            else 
                conv_1_out_1_address0 <= "XXX";
            end if;
        else 
            conv_1_out_1_address0 <= "XXX";
        end if; 
    end process;


    conv_1_out_1_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, tmp_fu_418_p3, ap_block_pp0_stage1, zext_ln28_4_fu_462_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_out_1_address1 <= zext_ln28_4_fu_462_p1(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_out_1_address1 <= tmp_fu_418_p3(3 - 1 downto 0);
            else 
                conv_1_out_1_address1 <= "XXX";
            end if;
        else 
            conv_1_out_1_address1 <= "XXX";
        end if; 
    end process;


    conv_1_out_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            conv_1_out_1_ce0 <= ap_const_logic_1;
        else 
            conv_1_out_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            conv_1_out_1_ce1 <= ap_const_logic_1;
        else 
            conv_1_out_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, zext_ln28_fu_408_p1, zext_ln28_3_fu_446_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_out_2_address0 <= zext_ln28_3_fu_446_p1(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_out_2_address0 <= zext_ln28_fu_408_p1(3 - 1 downto 0);
            else 
                conv_1_out_2_address0 <= "XXX";
            end if;
        else 
            conv_1_out_2_address0 <= "XXX";
        end if; 
    end process;


    conv_1_out_2_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, tmp_fu_418_p3, ap_block_pp0_stage1, zext_ln28_4_fu_462_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_out_2_address1 <= zext_ln28_4_fu_462_p1(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_out_2_address1 <= tmp_fu_418_p3(3 - 1 downto 0);
            else 
                conv_1_out_2_address1 <= "XXX";
            end if;
        else 
            conv_1_out_2_address1 <= "XXX";
        end if; 
    end process;


    conv_1_out_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            conv_1_out_2_ce0 <= ap_const_logic_1;
        else 
            conv_1_out_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            conv_1_out_2_ce1 <= ap_const_logic_1;
        else 
            conv_1_out_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, zext_ln28_fu_408_p1, zext_ln28_3_fu_446_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_out_3_address0 <= zext_ln28_3_fu_446_p1(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_out_3_address0 <= zext_ln28_fu_408_p1(3 - 1 downto 0);
            else 
                conv_1_out_3_address0 <= "XXX";
            end if;
        else 
            conv_1_out_3_address0 <= "XXX";
        end if; 
    end process;


    conv_1_out_3_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, tmp_fu_418_p3, ap_block_pp0_stage1, zext_ln28_4_fu_462_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_out_3_address1 <= zext_ln28_4_fu_462_p1(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_out_3_address1 <= tmp_fu_418_p3(3 - 1 downto 0);
            else 
                conv_1_out_3_address1 <= "XXX";
            end if;
        else 
            conv_1_out_3_address1 <= "XXX";
        end if; 
    end process;


    conv_1_out_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            conv_1_out_3_ce0 <= ap_const_logic_1;
        else 
            conv_1_out_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            conv_1_out_3_ce1 <= ap_const_logic_1;
        else 
            conv_1_out_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    f_fu_380_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(ap_phi_mux_f_0_phi_fu_301_p4));

    grp_fu_319_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, select_ln28_reg_1276, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_319_p1 <= select_ln28_reg_1276;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_319_p1 <= ap_const_lv32_800000;
        else 
            grp_fu_319_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_324_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, select_ln28_10_reg_1289, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, grp_fu_352_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_324_p0 <= select_ln28_10_reg_1289;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_324_p0 <= grp_fu_352_p3;
        else 
            grp_fu_324_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_324_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, select_ln28_1_fu_685_p3, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_324_p1 <= select_ln28_1_fu_685_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_324_p1 <= ap_const_lv32_800000;
        else 
            grp_fu_324_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_329_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, select_ln28_11_reg_1326, ap_block_pp0_stage0, ap_block_pp0_stage1, grp_fu_352_p3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_329_p0 <= select_ln28_11_reg_1326;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_329_p0 <= grp_fu_352_p3;
            else 
                grp_fu_329_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_329_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_329_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, select_ln28_4_reg_1296, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, select_ln28_2_fu_865_p3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_329_p1 <= select_ln28_2_fu_865_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_329_p1 <= select_ln28_4_reg_1296;
            else 
                grp_fu_329_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_329_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_333_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, select_ln28_14_reg_1303, ap_enable_reg_pp0_iter1, select_ln28_15_reg_1344, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_333_p0 <= select_ln28_15_reg_1344;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_333_p0 <= select_ln28_14_reg_1303;
            else 
                grp_fu_333_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_333_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_333_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, select_ln28_5_fu_776_p3, ap_block_pp0_stage0, ap_block_pp0_stage1, select_ln28_6_fu_1045_p3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_333_p1 <= select_ln28_6_fu_1045_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_333_p1 <= select_ln28_5_fu_776_p3;
            else 
                grp_fu_333_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_333_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_337_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, icmp_ln28_fu_475_p2, icmp_ln28_reg_1270, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_337_p0 <= icmp_ln28_reg_1270;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_337_p0 <= icmp_ln28_fu_475_p2;
        else 
            grp_fu_337_p0 <= "X";
        end if; 
    end process;

    grp_fu_337_p3 <= 
        conv_1_out_0_q0 when (grp_fu_337_p0(0) = '1') else 
        conv_1_out_2_q0;

    grp_fu_345_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, icmp_ln28_1_fu_539_p2, icmp_ln28_1_reg_1283, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_345_p0 <= icmp_ln28_1_reg_1283;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_345_p0 <= icmp_ln28_1_fu_539_p2;
        else 
            grp_fu_345_p0 <= "X";
        end if; 
    end process;

    grp_fu_345_p3 <= 
        conv_1_out_1_q0 when (grp_fu_345_p0(0) = '1') else 
        conv_1_out_3_q0;

    grp_fu_352_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, icmp_ln28_fu_475_p2, icmp_ln28_reg_1270, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_352_p0 <= icmp_ln28_reg_1270;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_352_p0 <= icmp_ln28_fu_475_p2;
        else 
            grp_fu_352_p0 <= "X";
        end if; 
    end process;

    grp_fu_352_p3 <= 
        conv_1_out_0_q1 when (grp_fu_352_p0(0) = '1') else 
        conv_1_out_2_q1;

    grp_fu_361_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, icmp_ln28_1_fu_539_p2, icmp_ln28_1_reg_1283, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_361_p0 <= icmp_ln28_1_reg_1283;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_361_p0 <= icmp_ln28_1_fu_539_p2;
        else 
            grp_fu_361_p0 <= "X";
        end if; 
    end process;

    grp_fu_361_p3 <= 
        conv_1_out_1_q1 when (grp_fu_361_p0(0) = '1') else 
        conv_1_out_3_q1;
    icmp_ln10_fu_368_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_290_p4 = ap_const_lv3_4) else "0";
    icmp_ln13_fu_386_p2 <= "1" when (ap_phi_mux_r_0_phi_fu_312_p4 = ap_const_lv2_2) else "0";
    icmp_ln28_10_fu_836_p2 <= "0" when (tmp_8_fu_804_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_11_fu_842_p2 <= "1" when (trunc_ln28_5_fu_814_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_12_fu_907_p2 <= "0" when (tmp_s_fu_875_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_13_fu_913_p2 <= "1" when (trunc_ln28_6_fu_885_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_14_fu_925_p2 <= "0" when (tmp_10_fu_893_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_15_fu_931_p2 <= "1" when (trunc_ln28_7_fu_903_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_16_fu_565_p2 <= "0" when (tmp_12_fu_551_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_17_fu_571_p2 <= "1" when (trunc_ln28_8_fu_561_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_18_fu_728_p2 <= "0" when (tmp_14_fu_697_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_19_fu_734_p2 <= "1" when (trunc_ln28_9_fu_707_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_1_fu_539_p2 <= "1" when (or_ln28_fu_533_p2 = ap_const_lv2_1) else "0";
    icmp_ln28_20_fu_746_p2 <= "0" when (tmp_15_fu_714_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_21_fu_752_p2 <= "1" when (trunc_ln28_10_fu_724_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_22_fu_998_p2 <= "0" when (tmp_17_fu_967_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_23_fu_1004_p2 <= "1" when (trunc_ln28_11_fu_977_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_24_fu_1016_p2 <= "0" when (tmp_18_fu_984_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_25_fu_1022_p2 <= "1" when (trunc_ln28_12_fu_994_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_26_fu_1087_p2 <= "0" when (tmp_20_fu_1055_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_27_fu_1093_p2 <= "1" when (trunc_ln28_13_fu_1065_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_28_fu_1105_p2 <= "0" when (tmp_21_fu_1073_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_29_fu_1111_p2 <= "1" when (trunc_ln28_14_fu_1083_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_2_fu_501_p2 <= "0" when (tmp_2_fu_487_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_3_fu_507_p2 <= "1" when (trunc_ln28_1_fu_497_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_4_fu_637_p2 <= "0" when (tmp_4_fu_606_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_5_fu_643_p2 <= "1" when (trunc_ln28_2_fu_616_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_6_fu_655_p2 <= "0" when (tmp_5_fu_623_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_7_fu_661_p2 <= "1" when (trunc_ln28_3_fu_633_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_8_fu_818_p2 <= "0" when (tmp_7_fu_787_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_9_fu_824_p2 <= "1" when (trunc_ln28_4_fu_797_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_fu_475_p2 <= "1" when (shl_ln28_fu_470_p2 = ap_const_lv2_0) else "0";
    max_pool_1_out_0_address0 <= max_pool_1_out_0_ad_reg_1206_pp0_iter1_reg;
    max_pool_1_out_0_address1 <= max_pool_1_out_0_ad_1_reg_1260;

    max_pool_1_out_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            max_pool_1_out_0_ce0 <= ap_const_logic_1;
        else 
            max_pool_1_out_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            max_pool_1_out_0_ce1 <= ap_const_logic_1;
        else 
            max_pool_1_out_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_1_out_0_d0 <= select_ln28_3_fu_955_p3;
    max_pool_1_out_0_d1 <= select_ln28_7_fu_1135_p3;

    max_pool_1_out_0_we0_assign_proc : process(trunc_ln28_reg_1216_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (trunc_ln28_reg_1216_pp0_iter1_reg = ap_const_lv1_0))) then 
            max_pool_1_out_0_we0 <= ap_const_logic_1;
        else 
            max_pool_1_out_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_0_we1_assign_proc : process(trunc_ln28_reg_1216_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (trunc_ln28_reg_1216_pp0_iter1_reg = ap_const_lv1_0))) then 
            max_pool_1_out_0_we1 <= ap_const_logic_1;
        else 
            max_pool_1_out_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_1_out_1_address0 <= max_pool_1_out_1_ad_reg_1211_pp0_iter1_reg;
    max_pool_1_out_1_address1 <= max_pool_1_out_1_ad_1_reg_1265;

    max_pool_1_out_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            max_pool_1_out_1_ce0 <= ap_const_logic_1;
        else 
            max_pool_1_out_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            max_pool_1_out_1_ce1 <= ap_const_logic_1;
        else 
            max_pool_1_out_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_1_out_1_d0 <= select_ln28_3_fu_955_p3;
    max_pool_1_out_1_d1 <= select_ln28_7_fu_1135_p3;

    max_pool_1_out_1_we0_assign_proc : process(trunc_ln28_reg_1216_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (trunc_ln28_reg_1216_pp0_iter1_reg = ap_const_lv1_1))) then 
            max_pool_1_out_1_we0 <= ap_const_logic_1;
        else 
            max_pool_1_out_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_1_we1_assign_proc : process(trunc_ln28_reg_1216_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (trunc_ln28_reg_1216_pp0_iter1_reg = ap_const_lv1_1))) then 
            max_pool_1_out_1_we1 <= ap_const_logic_1;
        else 
            max_pool_1_out_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln28_10_fu_758_p2 <= (icmp_ln28_21_fu_752_p2 or icmp_ln28_20_fu_746_p2);
    or_ln28_11_fu_1010_p2 <= (icmp_ln28_23_fu_1004_p2 or icmp_ln28_22_fu_998_p2);
    or_ln28_12_fu_1028_p2 <= (icmp_ln28_25_fu_1022_p2 or icmp_ln28_24_fu_1016_p2);
    or_ln28_13_fu_1099_p2 <= (icmp_ln28_27_fu_1093_p2 or icmp_ln28_26_fu_1087_p2);
    or_ln28_14_fu_1117_p2 <= (icmp_ln28_29_fu_1111_p2 or icmp_ln28_28_fu_1105_p2);
    or_ln28_1_fu_513_p2 <= (icmp_ln28_3_fu_507_p2 or icmp_ln28_2_fu_501_p2);
    or_ln28_2_fu_649_p2 <= (icmp_ln28_5_fu_643_p2 or icmp_ln28_4_fu_637_p2);
    or_ln28_3_fu_667_p2 <= (icmp_ln28_7_fu_661_p2 or icmp_ln28_6_fu_655_p2);
    or_ln28_4_fu_830_p2 <= (icmp_ln28_9_fu_824_p2 or icmp_ln28_8_fu_818_p2);
    or_ln28_5_fu_848_p2 <= (icmp_ln28_11_fu_842_p2 or icmp_ln28_10_fu_836_p2);
    or_ln28_6_fu_919_p2 <= (icmp_ln28_13_fu_913_p2 or icmp_ln28_12_fu_907_p2);
    or_ln28_7_fu_937_p2 <= (icmp_ln28_15_fu_931_p2 or icmp_ln28_14_fu_925_p2);
    or_ln28_8_fu_577_p2 <= (icmp_ln28_17_fu_571_p2 or icmp_ln28_16_fu_565_p2);
    or_ln28_9_fu_740_p2 <= (icmp_ln28_19_fu_734_p2 or icmp_ln28_18_fu_728_p2);
    or_ln28_fu_533_p2 <= (shl_ln28_fu_470_p2 or ap_const_lv2_1);
    r_fu_597_p2 <= std_logic_vector(unsigned(select_ln28_16_reg_1153) + unsigned(ap_const_lv2_1));
    select_ln28_16_fu_392_p3 <= 
        ap_const_lv2_0 when (icmp_ln13_fu_386_p2(0) = '1') else 
        ap_phi_mux_r_0_phi_fu_312_p4;
    select_ln28_17_fu_400_p3 <= 
        f_fu_380_p2 when (icmp_ln13_fu_386_p2(0) = '1') else 
        ap_phi_mux_f_0_phi_fu_301_p4;
    select_ln28_1_fu_685_p3 <= 
        grp_fu_337_p3 when (and_ln28_2_fu_679_p2(0) = '1') else 
        select_ln28_reg_1276;
    select_ln28_2_fu_865_p3 <= 
        select_ln28_10_reg_1289 when (and_ln28_4_fu_860_p2(0) = '1') else 
        select_ln28_1_reg_1315;
    select_ln28_3_fu_955_p3 <= 
        select_ln28_11_reg_1326 when (and_ln28_6_fu_949_p2(0) = '1') else 
        select_ln28_2_fu_865_p3;
    select_ln28_4_fu_589_p3 <= 
        grp_fu_352_p3 when (and_ln28_7_fu_583_p2(0) = '1') else 
        ap_const_lv32_800000;
    select_ln28_5_fu_776_p3 <= 
        grp_fu_352_p3 when (and_ln28_9_fu_770_p2(0) = '1') else 
        select_ln28_4_reg_1296;
    select_ln28_6_fu_1045_p3 <= 
        select_ln28_14_reg_1303 when (and_ln28_11_fu_1040_p2(0) = '1') else 
        select_ln28_5_reg_1333;
    select_ln28_7_fu_1135_p3 <= 
        select_ln28_15_reg_1344 when (and_ln28_13_fu_1129_p2(0) = '1') else 
        select_ln28_6_fu_1045_p3;
    select_ln28_fu_525_p3 <= 
        grp_fu_337_p3 when (and_ln28_fu_519_p2(0) = '1') else 
        ap_const_lv32_800000;
    shl_ln28_fu_470_p2 <= std_logic_vector(shift_left(unsigned(select_ln28_16_reg_1153),to_integer(unsigned('0' & ap_const_lv2_1(2-1 downto 0)))));
    tmp_10_fu_893_p4 <= bitcast_ln28_6_fu_889_p1(30 downto 23);
    tmp_12_fu_551_p4 <= bitcast_ln28_7_fu_547_p1(30 downto 23);
    tmp_14_fu_697_p4 <= bitcast_ln28_8_fu_693_p1(30 downto 23);
    tmp_15_fu_714_p4 <= bitcast_ln28_9_fu_711_p1(30 downto 23);
    tmp_17_fu_967_p4 <= bitcast_ln28_10_fu_964_p1(30 downto 23);
    tmp_18_fu_984_p4 <= bitcast_ln28_11_fu_981_p1(30 downto 23);
    tmp_20_fu_1055_p4 <= bitcast_ln28_12_fu_1052_p1(30 downto 23);
    tmp_21_fu_1073_p4 <= bitcast_ln28_13_fu_1069_p1(30 downto 23);
    tmp_2_fu_487_p4 <= bitcast_ln28_fu_483_p1(30 downto 23);
    tmp_4_fu_606_p4 <= bitcast_ln28_1_fu_602_p1(30 downto 23);
    tmp_5_fu_623_p4 <= bitcast_ln28_2_fu_620_p1(30 downto 23);
    tmp_7_fu_787_p4 <= bitcast_ln28_3_fu_784_p1(30 downto 23);
    tmp_8_fu_804_p4 <= bitcast_ln28_4_fu_801_p1(30 downto 23);
    tmp_fu_418_p3 <= (ap_const_lv62_1 & select_ln28_17_fu_400_p3);
    tmp_s_fu_875_p4 <= bitcast_ln28_5_fu_872_p1(30 downto 23);
    trunc_ln28_10_fu_724_p1 <= bitcast_ln28_9_fu_711_p1(23 - 1 downto 0);
    trunc_ln28_11_fu_977_p1 <= bitcast_ln28_10_fu_964_p1(23 - 1 downto 0);
    trunc_ln28_12_fu_994_p1 <= bitcast_ln28_11_fu_981_p1(23 - 1 downto 0);
    trunc_ln28_13_fu_1065_p1 <= bitcast_ln28_12_fu_1052_p1(23 - 1 downto 0);
    trunc_ln28_14_fu_1083_p1 <= bitcast_ln28_13_fu_1069_p1(23 - 1 downto 0);
    trunc_ln28_1_fu_497_p1 <= bitcast_ln28_fu_483_p1(23 - 1 downto 0);
    trunc_ln28_2_fu_616_p1 <= bitcast_ln28_1_fu_602_p1(23 - 1 downto 0);
    trunc_ln28_3_fu_633_p1 <= bitcast_ln28_2_fu_620_p1(23 - 1 downto 0);
    trunc_ln28_4_fu_797_p1 <= bitcast_ln28_3_fu_784_p1(23 - 1 downto 0);
    trunc_ln28_5_fu_814_p1 <= bitcast_ln28_4_fu_801_p1(23 - 1 downto 0);
    trunc_ln28_6_fu_885_p1 <= bitcast_ln28_5_fu_872_p1(23 - 1 downto 0);
    trunc_ln28_7_fu_903_p1 <= bitcast_ln28_6_fu_889_p1(23 - 1 downto 0);
    trunc_ln28_8_fu_561_p1 <= bitcast_ln28_7_fu_547_p1(23 - 1 downto 0);
    trunc_ln28_9_fu_707_p1 <= bitcast_ln28_8_fu_693_p1(23 - 1 downto 0);
    trunc_ln28_fu_430_p1 <= select_ln28_16_fu_392_p3(1 - 1 downto 0);
    zext_ln28_1_fu_434_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln28_17_reg_1159),4));
    zext_ln28_2_fu_437_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln28_17_reg_1159),3));
    zext_ln28_3_fu_446_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln28_fu_440_p2),64));
    zext_ln28_4_fu_462_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln28_1_fu_456_p2),64));
    zext_ln28_fu_408_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln28_17_fu_400_p3),64));
end behav;
