// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="max_pool_1,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx485t-ffg1157-1,HLS_INPUT_CLOCK=40.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=34.817000,HLS_SYN_LAT=11,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=298,HLS_SYN_LUT=1584,HLS_VERSION=2020_1}" *)

module max_pool_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv_1_out_0_address0,
        conv_1_out_0_ce0,
        conv_1_out_0_q0,
        conv_1_out_0_address1,
        conv_1_out_0_ce1,
        conv_1_out_0_q1,
        conv_1_out_1_address0,
        conv_1_out_1_ce0,
        conv_1_out_1_q0,
        conv_1_out_1_address1,
        conv_1_out_1_ce1,
        conv_1_out_1_q1,
        conv_1_out_2_address0,
        conv_1_out_2_ce0,
        conv_1_out_2_q0,
        conv_1_out_2_address1,
        conv_1_out_2_ce1,
        conv_1_out_2_q1,
        conv_1_out_3_address0,
        conv_1_out_3_ce0,
        conv_1_out_3_q0,
        conv_1_out_3_address1,
        conv_1_out_3_ce1,
        conv_1_out_3_q1,
        max_pool_1_out_0_address0,
        max_pool_1_out_0_ce0,
        max_pool_1_out_0_we0,
        max_pool_1_out_0_d0,
        max_pool_1_out_0_address1,
        max_pool_1_out_0_ce1,
        max_pool_1_out_0_we1,
        max_pool_1_out_0_d1,
        max_pool_1_out_1_address0,
        max_pool_1_out_1_ce0,
        max_pool_1_out_1_we0,
        max_pool_1_out_1_d0,
        max_pool_1_out_1_address1,
        max_pool_1_out_1_ce1,
        max_pool_1_out_1_we1,
        max_pool_1_out_1_d1
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_pp0_stage1 = 4'd4;
parameter    ap_ST_fsm_state6 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] conv_1_out_0_address0;
output   conv_1_out_0_ce0;
input  [31:0] conv_1_out_0_q0;
output  [2:0] conv_1_out_0_address1;
output   conv_1_out_0_ce1;
input  [31:0] conv_1_out_0_q1;
output  [2:0] conv_1_out_1_address0;
output   conv_1_out_1_ce0;
input  [31:0] conv_1_out_1_q0;
output  [2:0] conv_1_out_1_address1;
output   conv_1_out_1_ce1;
input  [31:0] conv_1_out_1_q1;
output  [2:0] conv_1_out_2_address0;
output   conv_1_out_2_ce0;
input  [31:0] conv_1_out_2_q0;
output  [2:0] conv_1_out_2_address1;
output   conv_1_out_2_ce1;
input  [31:0] conv_1_out_2_q1;
output  [2:0] conv_1_out_3_address0;
output   conv_1_out_3_ce0;
input  [31:0] conv_1_out_3_q0;
output  [2:0] conv_1_out_3_address1;
output   conv_1_out_3_ce1;
input  [31:0] conv_1_out_3_q1;
output  [1:0] max_pool_1_out_0_address0;
output   max_pool_1_out_0_ce0;
output   max_pool_1_out_0_we0;
output  [31:0] max_pool_1_out_0_d0;
output  [1:0] max_pool_1_out_0_address1;
output   max_pool_1_out_0_ce1;
output   max_pool_1_out_0_we1;
output  [31:0] max_pool_1_out_0_d1;
output  [1:0] max_pool_1_out_1_address0;
output   max_pool_1_out_1_ce0;
output   max_pool_1_out_1_we0;
output  [31:0] max_pool_1_out_1_d0;
output  [1:0] max_pool_1_out_1_address1;
output   max_pool_1_out_1_ce1;
output   max_pool_1_out_1_we1;
output  [31:0] max_pool_1_out_1_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] conv_1_out_0_address0;
reg conv_1_out_0_ce0;
reg[2:0] conv_1_out_0_address1;
reg conv_1_out_0_ce1;
reg[2:0] conv_1_out_1_address0;
reg conv_1_out_1_ce0;
reg[2:0] conv_1_out_1_address1;
reg conv_1_out_1_ce1;
reg[2:0] conv_1_out_2_address0;
reg conv_1_out_2_ce0;
reg[2:0] conv_1_out_2_address1;
reg conv_1_out_2_ce1;
reg[2:0] conv_1_out_3_address0;
reg conv_1_out_3_ce0;
reg[2:0] conv_1_out_3_address1;
reg conv_1_out_3_ce1;
reg max_pool_1_out_0_ce0;
reg max_pool_1_out_0_we0;
reg max_pool_1_out_0_ce1;
reg max_pool_1_out_0_we1;
reg max_pool_1_out_1_ce0;
reg max_pool_1_out_1_we0;
reg max_pool_1_out_1_ce1;
reg max_pool_1_out_1_we1;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] indvar_flatten_reg_286;
reg   [1:0] f_0_reg_297;
reg   [1:0] r_0_reg_308;
wire   [0:0] icmp_ln10_fu_368_p2;
reg   [0:0] icmp_ln10_reg_1144;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln10_reg_1144_pp0_iter1_reg;
wire   [2:0] add_ln10_fu_374_p2;
reg   [2:0] add_ln10_reg_1148;
reg    ap_enable_reg_pp0_iter0;
wire   [1:0] select_ln28_16_fu_392_p3;
reg   [1:0] select_ln28_16_reg_1153;
wire   [1:0] select_ln28_17_fu_400_p3;
reg   [1:0] select_ln28_17_reg_1159;
reg   [1:0] max_pool_1_out_0_ad_reg_1206;
reg   [1:0] max_pool_1_out_0_ad_reg_1206_pp0_iter1_reg;
reg   [1:0] max_pool_1_out_1_ad_reg_1211;
reg   [1:0] max_pool_1_out_1_ad_reg_1211_pp0_iter1_reg;
wire   [0:0] trunc_ln28_fu_430_p1;
reg   [0:0] trunc_ln28_reg_1216;
reg   [0:0] trunc_ln28_reg_1216_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [1:0] max_pool_1_out_0_ad_1_reg_1260;
reg   [1:0] max_pool_1_out_1_ad_1_reg_1265;
wire   [0:0] icmp_ln28_fu_475_p2;
reg   [0:0] icmp_ln28_reg_1270;
wire   [31:0] select_ln28_fu_525_p3;
reg   [31:0] select_ln28_reg_1276;
wire   [0:0] icmp_ln28_1_fu_539_p2;
reg   [0:0] icmp_ln28_1_reg_1283;
wire   [31:0] grp_fu_345_p3;
reg   [31:0] select_ln28_10_reg_1289;
wire   [31:0] select_ln28_4_fu_589_p3;
reg   [31:0] select_ln28_4_reg_1296;
wire   [31:0] grp_fu_361_p3;
reg   [31:0] select_ln28_14_reg_1303;
wire   [1:0] r_fu_597_p2;
reg   [1:0] r_reg_1310;
wire   [31:0] select_ln28_1_fu_685_p3;
reg   [31:0] select_ln28_1_reg_1315;
wire   [0:0] grp_fu_324_p2;
reg   [0:0] tmp_9_reg_1321;
reg    ap_enable_reg_pp0_iter1;
reg   [31:0] select_ln28_11_reg_1326;
wire   [31:0] select_ln28_5_fu_776_p3;
reg   [31:0] select_ln28_5_reg_1333;
wire   [0:0] grp_fu_333_p2;
reg   [0:0] tmp_19_reg_1339;
reg   [31:0] select_ln28_15_reg_1344;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage1_subdone;
reg   [2:0] ap_phi_mux_indvar_flatten_phi_fu_290_p4;
wire    ap_block_pp0_stage0;
reg   [1:0] ap_phi_mux_f_0_phi_fu_301_p4;
reg   [1:0] ap_phi_mux_r_0_phi_fu_312_p4;
wire   [63:0] zext_ln28_fu_408_p1;
wire   [63:0] tmp_fu_418_p3;
wire   [63:0] zext_ln28_3_fu_446_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln28_4_fu_462_p1;
wire   [31:0] select_ln28_3_fu_955_p3;
wire   [31:0] select_ln28_7_fu_1135_p3;
wire   [31:0] grp_fu_337_p3;
reg   [31:0] grp_fu_319_p1;
reg   [31:0] grp_fu_324_p0;
wire   [31:0] grp_fu_352_p3;
reg   [31:0] grp_fu_324_p1;
reg   [31:0] grp_fu_329_p0;
reg   [31:0] grp_fu_329_p1;
wire   [31:0] select_ln28_2_fu_865_p3;
reg   [31:0] grp_fu_333_p0;
reg   [31:0] grp_fu_333_p1;
wire   [31:0] select_ln28_6_fu_1045_p3;
reg   [0:0] grp_fu_337_p0;
reg   [0:0] grp_fu_345_p0;
reg   [0:0] grp_fu_352_p0;
reg   [0:0] grp_fu_361_p0;
wire   [0:0] icmp_ln13_fu_386_p2;
wire   [1:0] f_fu_380_p2;
wire   [2:0] zext_ln28_2_fu_437_p1;
wire   [2:0] add_ln28_fu_440_p2;
wire   [3:0] zext_ln28_1_fu_434_p1;
wire   [3:0] add_ln28_1_fu_456_p2;
wire   [1:0] shl_ln28_fu_470_p2;
wire   [31:0] bitcast_ln28_fu_483_p1;
wire   [7:0] tmp_2_fu_487_p4;
wire   [22:0] trunc_ln28_1_fu_497_p1;
wire   [0:0] icmp_ln28_3_fu_507_p2;
wire   [0:0] icmp_ln28_2_fu_501_p2;
wire   [0:0] or_ln28_1_fu_513_p2;
wire   [0:0] grp_fu_319_p2;
wire   [0:0] and_ln28_fu_519_p2;
wire   [1:0] or_ln28_fu_533_p2;
wire   [31:0] bitcast_ln28_7_fu_547_p1;
wire   [7:0] tmp_12_fu_551_p4;
wire   [22:0] trunc_ln28_8_fu_561_p1;
wire   [0:0] icmp_ln28_17_fu_571_p2;
wire   [0:0] icmp_ln28_16_fu_565_p2;
wire   [0:0] or_ln28_8_fu_577_p2;
wire   [0:0] and_ln28_7_fu_583_p2;
wire   [31:0] bitcast_ln28_1_fu_602_p1;
wire   [31:0] bitcast_ln28_2_fu_620_p1;
wire   [7:0] tmp_4_fu_606_p4;
wire   [22:0] trunc_ln28_2_fu_616_p1;
wire   [0:0] icmp_ln28_5_fu_643_p2;
wire   [0:0] icmp_ln28_4_fu_637_p2;
wire   [7:0] tmp_5_fu_623_p4;
wire   [22:0] trunc_ln28_3_fu_633_p1;
wire   [0:0] icmp_ln28_7_fu_661_p2;
wire   [0:0] icmp_ln28_6_fu_655_p2;
wire   [0:0] or_ln28_2_fu_649_p2;
wire   [0:0] or_ln28_3_fu_667_p2;
wire   [0:0] and_ln28_1_fu_673_p2;
wire   [0:0] and_ln28_2_fu_679_p2;
wire   [31:0] bitcast_ln28_8_fu_693_p1;
wire   [31:0] bitcast_ln28_9_fu_711_p1;
wire   [7:0] tmp_14_fu_697_p4;
wire   [22:0] trunc_ln28_9_fu_707_p1;
wire   [0:0] icmp_ln28_19_fu_734_p2;
wire   [0:0] icmp_ln28_18_fu_728_p2;
wire   [7:0] tmp_15_fu_714_p4;
wire   [22:0] trunc_ln28_10_fu_724_p1;
wire   [0:0] icmp_ln28_21_fu_752_p2;
wire   [0:0] icmp_ln28_20_fu_746_p2;
wire   [0:0] or_ln28_9_fu_740_p2;
wire   [0:0] or_ln28_10_fu_758_p2;
wire   [0:0] and_ln28_8_fu_764_p2;
wire   [0:0] grp_fu_329_p2;
wire   [0:0] and_ln28_9_fu_770_p2;
wire   [31:0] bitcast_ln28_3_fu_784_p1;
wire   [31:0] bitcast_ln28_4_fu_801_p1;
wire   [7:0] tmp_7_fu_787_p4;
wire   [22:0] trunc_ln28_4_fu_797_p1;
wire   [0:0] icmp_ln28_9_fu_824_p2;
wire   [0:0] icmp_ln28_8_fu_818_p2;
wire   [7:0] tmp_8_fu_804_p4;
wire   [22:0] trunc_ln28_5_fu_814_p1;
wire   [0:0] icmp_ln28_11_fu_842_p2;
wire   [0:0] icmp_ln28_10_fu_836_p2;
wire   [0:0] or_ln28_4_fu_830_p2;
wire   [0:0] or_ln28_5_fu_848_p2;
wire   [0:0] and_ln28_3_fu_854_p2;
wire   [0:0] and_ln28_4_fu_860_p2;
wire   [31:0] bitcast_ln28_5_fu_872_p1;
wire   [31:0] bitcast_ln28_6_fu_889_p1;
wire   [7:0] tmp_s_fu_875_p4;
wire   [22:0] trunc_ln28_6_fu_885_p1;
wire   [0:0] icmp_ln28_13_fu_913_p2;
wire   [0:0] icmp_ln28_12_fu_907_p2;
wire   [7:0] tmp_10_fu_893_p4;
wire   [22:0] trunc_ln28_7_fu_903_p1;
wire   [0:0] icmp_ln28_15_fu_931_p2;
wire   [0:0] icmp_ln28_14_fu_925_p2;
wire   [0:0] or_ln28_6_fu_919_p2;
wire   [0:0] or_ln28_7_fu_937_p2;
wire   [0:0] and_ln28_5_fu_943_p2;
wire   [0:0] and_ln28_6_fu_949_p2;
wire   [31:0] bitcast_ln28_10_fu_964_p1;
wire   [31:0] bitcast_ln28_11_fu_981_p1;
wire   [7:0] tmp_17_fu_967_p4;
wire   [22:0] trunc_ln28_11_fu_977_p1;
wire   [0:0] icmp_ln28_23_fu_1004_p2;
wire   [0:0] icmp_ln28_22_fu_998_p2;
wire   [7:0] tmp_18_fu_984_p4;
wire   [22:0] trunc_ln28_12_fu_994_p1;
wire   [0:0] icmp_ln28_25_fu_1022_p2;
wire   [0:0] icmp_ln28_24_fu_1016_p2;
wire   [0:0] or_ln28_11_fu_1010_p2;
wire   [0:0] or_ln28_12_fu_1028_p2;
wire   [0:0] and_ln28_10_fu_1034_p2;
wire   [0:0] and_ln28_11_fu_1040_p2;
wire   [31:0] bitcast_ln28_12_fu_1052_p1;
wire   [31:0] bitcast_ln28_13_fu_1069_p1;
wire   [7:0] tmp_20_fu_1055_p4;
wire   [22:0] trunc_ln28_13_fu_1065_p1;
wire   [0:0] icmp_ln28_27_fu_1093_p2;
wire   [0:0] icmp_ln28_26_fu_1087_p2;
wire   [7:0] tmp_21_fu_1073_p4;
wire   [22:0] trunc_ln28_14_fu_1083_p1;
wire   [0:0] icmp_ln28_29_fu_1111_p2;
wire   [0:0] icmp_ln28_28_fu_1105_p2;
wire   [0:0] or_ln28_13_fu_1099_p2;
wire   [0:0] or_ln28_14_fu_1117_p2;
wire   [0:0] and_ln28_12_fu_1123_p2;
wire   [0:0] and_ln28_13_fu_1129_p2;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_CS_fsm_state6;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U1(
    .din0(grp_fu_337_p3),
    .din1(grp_fu_319_p1),
    .opcode(5'd2),
    .dout(grp_fu_319_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U2(
    .din0(grp_fu_324_p0),
    .din1(grp_fu_324_p1),
    .opcode(5'd2),
    .dout(grp_fu_324_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U3(
    .din0(grp_fu_329_p0),
    .din1(grp_fu_329_p1),
    .opcode(5'd2),
    .dout(grp_fu_329_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U4(
    .din0(grp_fu_333_p0),
    .din1(grp_fu_333_p1),
    .opcode(5'd2),
    .dout(grp_fu_333_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_reg_1144 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        f_0_reg_297 <= select_ln28_17_reg_1159;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        f_0_reg_297 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_reg_1144 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten_reg_286 <= add_ln10_reg_1148;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_286 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_reg_1144 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        r_0_reg_308 <= r_reg_1310;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        r_0_reg_308 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln10_reg_1148 <= add_ln10_fu_374_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln10_reg_1144 <= icmp_ln10_fu_368_p2;
        icmp_ln10_reg_1144_pp0_iter1_reg <= icmp_ln10_reg_1144;
        max_pool_1_out_0_ad_reg_1206_pp0_iter1_reg <= max_pool_1_out_0_ad_reg_1206;
        max_pool_1_out_1_ad_reg_1211_pp0_iter1_reg <= max_pool_1_out_1_ad_reg_1211;
        select_ln28_5_reg_1333 <= select_ln28_5_fu_776_p3;
        trunc_ln28_reg_1216_pp0_iter1_reg <= trunc_ln28_reg_1216;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_1144 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        icmp_ln28_1_reg_1283 <= icmp_ln28_1_fu_539_p2;
        icmp_ln28_reg_1270 <= icmp_ln28_fu_475_p2;
        max_pool_1_out_0_ad_1_reg_1260 <= zext_ln28_3_fu_446_p1;
        max_pool_1_out_1_ad_1_reg_1265 <= zext_ln28_3_fu_446_p1;
        select_ln28_4_reg_1296 <= select_ln28_4_fu_589_p3;
        select_ln28_reg_1276 <= select_ln28_fu_525_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_fu_368_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        max_pool_1_out_0_ad_reg_1206 <= zext_ln28_fu_408_p1;
        max_pool_1_out_1_ad_reg_1211 <= zext_ln28_fu_408_p1;
        select_ln28_16_reg_1153 <= select_ln28_16_fu_392_p3;
        trunc_ln28_reg_1216 <= trunc_ln28_fu_430_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_1144 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        r_reg_1310 <= r_fu_597_p2;
        select_ln28_10_reg_1289 <= grp_fu_345_p3;
        select_ln28_14_reg_1303 <= grp_fu_361_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_reg_1144 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        select_ln28_11_reg_1326 <= grp_fu_345_p3;
        tmp_9_reg_1321 <= grp_fu_324_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        select_ln28_15_reg_1344 <= grp_fu_361_p3;
        tmp_19_reg_1339 <= grp_fu_333_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_fu_368_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln28_17_reg_1159 <= select_ln28_17_fu_400_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_reg_1144 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln28_1_reg_1315 <= select_ln28_1_fu_685_p3;
    end
end

always @ (*) begin
    if ((icmp_ln10_fu_368_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln10_reg_1144 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_f_0_phi_fu_301_p4 = select_ln28_17_reg_1159;
    end else begin
        ap_phi_mux_f_0_phi_fu_301_p4 = f_0_reg_297;
    end
end

always @ (*) begin
    if (((icmp_ln10_reg_1144 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten_phi_fu_290_p4 = add_ln10_reg_1148;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_290_p4 = indvar_flatten_reg_286;
    end
end

always @ (*) begin
    if (((icmp_ln10_reg_1144 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_r_0_phi_fu_312_p4 = r_reg_1310;
    end else begin
        ap_phi_mux_r_0_phi_fu_312_p4 = r_0_reg_308;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_1_out_0_address0 = zext_ln28_3_fu_446_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_1_out_0_address0 = zext_ln28_fu_408_p1;
        end else begin
            conv_1_out_0_address0 = 'bx;
        end
    end else begin
        conv_1_out_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_1_out_0_address1 = zext_ln28_4_fu_462_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_1_out_0_address1 = tmp_fu_418_p3;
        end else begin
            conv_1_out_0_address1 = 'bx;
        end
    end else begin
        conv_1_out_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        conv_1_out_0_ce0 = 1'b1;
    end else begin
        conv_1_out_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        conv_1_out_0_ce1 = 1'b1;
    end else begin
        conv_1_out_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_1_out_1_address0 = zext_ln28_3_fu_446_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_1_out_1_address0 = zext_ln28_fu_408_p1;
        end else begin
            conv_1_out_1_address0 = 'bx;
        end
    end else begin
        conv_1_out_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_1_out_1_address1 = zext_ln28_4_fu_462_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_1_out_1_address1 = tmp_fu_418_p3;
        end else begin
            conv_1_out_1_address1 = 'bx;
        end
    end else begin
        conv_1_out_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        conv_1_out_1_ce0 = 1'b1;
    end else begin
        conv_1_out_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        conv_1_out_1_ce1 = 1'b1;
    end else begin
        conv_1_out_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_1_out_2_address0 = zext_ln28_3_fu_446_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_1_out_2_address0 = zext_ln28_fu_408_p1;
        end else begin
            conv_1_out_2_address0 = 'bx;
        end
    end else begin
        conv_1_out_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_1_out_2_address1 = zext_ln28_4_fu_462_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_1_out_2_address1 = tmp_fu_418_p3;
        end else begin
            conv_1_out_2_address1 = 'bx;
        end
    end else begin
        conv_1_out_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        conv_1_out_2_ce0 = 1'b1;
    end else begin
        conv_1_out_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        conv_1_out_2_ce1 = 1'b1;
    end else begin
        conv_1_out_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_1_out_3_address0 = zext_ln28_3_fu_446_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_1_out_3_address0 = zext_ln28_fu_408_p1;
        end else begin
            conv_1_out_3_address0 = 'bx;
        end
    end else begin
        conv_1_out_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_1_out_3_address1 = zext_ln28_4_fu_462_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_1_out_3_address1 = tmp_fu_418_p3;
        end else begin
            conv_1_out_3_address1 = 'bx;
        end
    end else begin
        conv_1_out_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        conv_1_out_3_ce0 = 1'b1;
    end else begin
        conv_1_out_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        conv_1_out_3_ce1 = 1'b1;
    end else begin
        conv_1_out_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_319_p1 = select_ln28_reg_1276;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_319_p1 = 32'd8388608;
    end else begin
        grp_fu_319_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_324_p0 = select_ln28_10_reg_1289;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_324_p0 = grp_fu_352_p3;
    end else begin
        grp_fu_324_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_324_p1 = select_ln28_1_fu_685_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_324_p1 = 32'd8388608;
    end else begin
        grp_fu_324_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_329_p0 = select_ln28_11_reg_1326;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_329_p0 = grp_fu_352_p3;
        end else begin
            grp_fu_329_p0 = 'bx;
        end
    end else begin
        grp_fu_329_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_329_p1 = select_ln28_2_fu_865_p3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_329_p1 = select_ln28_4_reg_1296;
        end else begin
            grp_fu_329_p1 = 'bx;
        end
    end else begin
        grp_fu_329_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_333_p0 = select_ln28_15_reg_1344;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_333_p0 = select_ln28_14_reg_1303;
        end else begin
            grp_fu_333_p0 = 'bx;
        end
    end else begin
        grp_fu_333_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_333_p1 = select_ln28_6_fu_1045_p3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_333_p1 = select_ln28_5_fu_776_p3;
        end else begin
            grp_fu_333_p1 = 'bx;
        end
    end else begin
        grp_fu_333_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_337_p0 = icmp_ln28_reg_1270;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_337_p0 = icmp_ln28_fu_475_p2;
    end else begin
        grp_fu_337_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_345_p0 = icmp_ln28_1_reg_1283;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_345_p0 = icmp_ln28_1_fu_539_p2;
    end else begin
        grp_fu_345_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_352_p0 = icmp_ln28_reg_1270;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_352_p0 = icmp_ln28_fu_475_p2;
    end else begin
        grp_fu_352_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_361_p0 = icmp_ln28_1_reg_1283;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_361_p0 = icmp_ln28_1_fu_539_p2;
    end else begin
        grp_fu_361_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        max_pool_1_out_0_ce0 = 1'b1;
    end else begin
        max_pool_1_out_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        max_pool_1_out_0_ce1 = 1'b1;
    end else begin
        max_pool_1_out_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (trunc_ln28_reg_1216_pp0_iter1_reg == 1'd0))) begin
        max_pool_1_out_0_we0 = 1'b1;
    end else begin
        max_pool_1_out_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (trunc_ln28_reg_1216_pp0_iter1_reg == 1'd0))) begin
        max_pool_1_out_0_we1 = 1'b1;
    end else begin
        max_pool_1_out_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        max_pool_1_out_1_ce0 = 1'b1;
    end else begin
        max_pool_1_out_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        max_pool_1_out_1_ce1 = 1'b1;
    end else begin
        max_pool_1_out_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (trunc_ln28_reg_1216_pp0_iter1_reg == 1'd1))) begin
        max_pool_1_out_1_we0 = 1'b1;
    end else begin
        max_pool_1_out_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (trunc_ln28_reg_1216_pp0_iter1_reg == 1'd1))) begin
        max_pool_1_out_1_we1 = 1'b1;
    end else begin
        max_pool_1_out_1_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln10_fu_368_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln10_fu_368_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln10_fu_374_p2 = (ap_phi_mux_indvar_flatten_phi_fu_290_p4 + 3'd1);

assign add_ln28_1_fu_456_p2 = (4'd6 + zext_ln28_1_fu_434_p1);

assign add_ln28_fu_440_p2 = (3'd2 + zext_ln28_2_fu_437_p1);

assign and_ln28_10_fu_1034_p2 = (or_ln28_12_fu_1028_p2 & or_ln28_11_fu_1010_p2);

assign and_ln28_11_fu_1040_p2 = (tmp_19_reg_1339 & and_ln28_10_fu_1034_p2);

assign and_ln28_12_fu_1123_p2 = (or_ln28_14_fu_1117_p2 & or_ln28_13_fu_1099_p2);

assign and_ln28_13_fu_1129_p2 = (grp_fu_333_p2 & and_ln28_12_fu_1123_p2);

assign and_ln28_1_fu_673_p2 = (or_ln28_3_fu_667_p2 & or_ln28_2_fu_649_p2);

assign and_ln28_2_fu_679_p2 = (grp_fu_319_p2 & and_ln28_1_fu_673_p2);

assign and_ln28_3_fu_854_p2 = (or_ln28_5_fu_848_p2 & or_ln28_4_fu_830_p2);

assign and_ln28_4_fu_860_p2 = (tmp_9_reg_1321 & and_ln28_3_fu_854_p2);

assign and_ln28_5_fu_943_p2 = (or_ln28_7_fu_937_p2 & or_ln28_6_fu_919_p2);

assign and_ln28_6_fu_949_p2 = (grp_fu_329_p2 & and_ln28_5_fu_943_p2);

assign and_ln28_7_fu_583_p2 = (or_ln28_8_fu_577_p2 & grp_fu_324_p2);

assign and_ln28_8_fu_764_p2 = (or_ln28_9_fu_740_p2 & or_ln28_10_fu_758_p2);

assign and_ln28_9_fu_770_p2 = (grp_fu_329_p2 & and_ln28_8_fu_764_p2);

assign and_ln28_fu_519_p2 = (or_ln28_1_fu_513_p2 & grp_fu_319_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln28_10_fu_964_p1 = select_ln28_14_reg_1303;

assign bitcast_ln28_11_fu_981_p1 = select_ln28_5_reg_1333;

assign bitcast_ln28_12_fu_1052_p1 = select_ln28_15_reg_1344;

assign bitcast_ln28_13_fu_1069_p1 = select_ln28_6_fu_1045_p3;

assign bitcast_ln28_1_fu_602_p1 = grp_fu_337_p3;

assign bitcast_ln28_2_fu_620_p1 = select_ln28_reg_1276;

assign bitcast_ln28_3_fu_784_p1 = select_ln28_10_reg_1289;

assign bitcast_ln28_4_fu_801_p1 = select_ln28_1_reg_1315;

assign bitcast_ln28_5_fu_872_p1 = select_ln28_11_reg_1326;

assign bitcast_ln28_6_fu_889_p1 = select_ln28_2_fu_865_p3;

assign bitcast_ln28_7_fu_547_p1 = grp_fu_352_p3;

assign bitcast_ln28_8_fu_693_p1 = grp_fu_352_p3;

assign bitcast_ln28_9_fu_711_p1 = select_ln28_4_reg_1296;

assign bitcast_ln28_fu_483_p1 = grp_fu_337_p3;

assign f_fu_380_p2 = (2'd1 + ap_phi_mux_f_0_phi_fu_301_p4);

assign grp_fu_337_p3 = ((grp_fu_337_p0[0:0] === 1'b1) ? conv_1_out_0_q0 : conv_1_out_2_q0);

assign grp_fu_345_p3 = ((grp_fu_345_p0[0:0] === 1'b1) ? conv_1_out_1_q0 : conv_1_out_3_q0);

assign grp_fu_352_p3 = ((grp_fu_352_p0[0:0] === 1'b1) ? conv_1_out_0_q1 : conv_1_out_2_q1);

assign grp_fu_361_p3 = ((grp_fu_361_p0[0:0] === 1'b1) ? conv_1_out_1_q1 : conv_1_out_3_q1);

assign icmp_ln10_fu_368_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_290_p4 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_386_p2 = ((ap_phi_mux_r_0_phi_fu_312_p4 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln28_10_fu_836_p2 = ((tmp_8_fu_804_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_11_fu_842_p2 = ((trunc_ln28_5_fu_814_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_12_fu_907_p2 = ((tmp_s_fu_875_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_13_fu_913_p2 = ((trunc_ln28_6_fu_885_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_14_fu_925_p2 = ((tmp_10_fu_893_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_15_fu_931_p2 = ((trunc_ln28_7_fu_903_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_16_fu_565_p2 = ((tmp_12_fu_551_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_17_fu_571_p2 = ((trunc_ln28_8_fu_561_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_18_fu_728_p2 = ((tmp_14_fu_697_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_19_fu_734_p2 = ((trunc_ln28_9_fu_707_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_1_fu_539_p2 = ((or_ln28_fu_533_p2 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln28_20_fu_746_p2 = ((tmp_15_fu_714_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_21_fu_752_p2 = ((trunc_ln28_10_fu_724_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_22_fu_998_p2 = ((tmp_17_fu_967_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_23_fu_1004_p2 = ((trunc_ln28_11_fu_977_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_24_fu_1016_p2 = ((tmp_18_fu_984_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_25_fu_1022_p2 = ((trunc_ln28_12_fu_994_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_26_fu_1087_p2 = ((tmp_20_fu_1055_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_27_fu_1093_p2 = ((trunc_ln28_13_fu_1065_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_28_fu_1105_p2 = ((tmp_21_fu_1073_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_29_fu_1111_p2 = ((trunc_ln28_14_fu_1083_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_2_fu_501_p2 = ((tmp_2_fu_487_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_3_fu_507_p2 = ((trunc_ln28_1_fu_497_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_4_fu_637_p2 = ((tmp_4_fu_606_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_5_fu_643_p2 = ((trunc_ln28_2_fu_616_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_6_fu_655_p2 = ((tmp_5_fu_623_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_7_fu_661_p2 = ((trunc_ln28_3_fu_633_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_8_fu_818_p2 = ((tmp_7_fu_787_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_9_fu_824_p2 = ((trunc_ln28_4_fu_797_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_475_p2 = ((shl_ln28_fu_470_p2 == 2'd0) ? 1'b1 : 1'b0);

assign max_pool_1_out_0_address0 = max_pool_1_out_0_ad_reg_1206_pp0_iter1_reg;

assign max_pool_1_out_0_address1 = max_pool_1_out_0_ad_1_reg_1260;

assign max_pool_1_out_0_d0 = select_ln28_3_fu_955_p3;

assign max_pool_1_out_0_d1 = select_ln28_7_fu_1135_p3;

assign max_pool_1_out_1_address0 = max_pool_1_out_1_ad_reg_1211_pp0_iter1_reg;

assign max_pool_1_out_1_address1 = max_pool_1_out_1_ad_1_reg_1265;

assign max_pool_1_out_1_d0 = select_ln28_3_fu_955_p3;

assign max_pool_1_out_1_d1 = select_ln28_7_fu_1135_p3;

assign or_ln28_10_fu_758_p2 = (icmp_ln28_21_fu_752_p2 | icmp_ln28_20_fu_746_p2);

assign or_ln28_11_fu_1010_p2 = (icmp_ln28_23_fu_1004_p2 | icmp_ln28_22_fu_998_p2);

assign or_ln28_12_fu_1028_p2 = (icmp_ln28_25_fu_1022_p2 | icmp_ln28_24_fu_1016_p2);

assign or_ln28_13_fu_1099_p2 = (icmp_ln28_27_fu_1093_p2 | icmp_ln28_26_fu_1087_p2);

assign or_ln28_14_fu_1117_p2 = (icmp_ln28_29_fu_1111_p2 | icmp_ln28_28_fu_1105_p2);

assign or_ln28_1_fu_513_p2 = (icmp_ln28_3_fu_507_p2 | icmp_ln28_2_fu_501_p2);

assign or_ln28_2_fu_649_p2 = (icmp_ln28_5_fu_643_p2 | icmp_ln28_4_fu_637_p2);

assign or_ln28_3_fu_667_p2 = (icmp_ln28_7_fu_661_p2 | icmp_ln28_6_fu_655_p2);

assign or_ln28_4_fu_830_p2 = (icmp_ln28_9_fu_824_p2 | icmp_ln28_8_fu_818_p2);

assign or_ln28_5_fu_848_p2 = (icmp_ln28_11_fu_842_p2 | icmp_ln28_10_fu_836_p2);

assign or_ln28_6_fu_919_p2 = (icmp_ln28_13_fu_913_p2 | icmp_ln28_12_fu_907_p2);

assign or_ln28_7_fu_937_p2 = (icmp_ln28_15_fu_931_p2 | icmp_ln28_14_fu_925_p2);

assign or_ln28_8_fu_577_p2 = (icmp_ln28_17_fu_571_p2 | icmp_ln28_16_fu_565_p2);

assign or_ln28_9_fu_740_p2 = (icmp_ln28_19_fu_734_p2 | icmp_ln28_18_fu_728_p2);

assign or_ln28_fu_533_p2 = (shl_ln28_fu_470_p2 | 2'd1);

assign r_fu_597_p2 = (select_ln28_16_reg_1153 + 2'd1);

assign select_ln28_16_fu_392_p3 = ((icmp_ln13_fu_386_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_r_0_phi_fu_312_p4);

assign select_ln28_17_fu_400_p3 = ((icmp_ln13_fu_386_p2[0:0] === 1'b1) ? f_fu_380_p2 : ap_phi_mux_f_0_phi_fu_301_p4);

assign select_ln28_1_fu_685_p3 = ((and_ln28_2_fu_679_p2[0:0] === 1'b1) ? grp_fu_337_p3 : select_ln28_reg_1276);

assign select_ln28_2_fu_865_p3 = ((and_ln28_4_fu_860_p2[0:0] === 1'b1) ? select_ln28_10_reg_1289 : select_ln28_1_reg_1315);

assign select_ln28_3_fu_955_p3 = ((and_ln28_6_fu_949_p2[0:0] === 1'b1) ? select_ln28_11_reg_1326 : select_ln28_2_fu_865_p3);

assign select_ln28_4_fu_589_p3 = ((and_ln28_7_fu_583_p2[0:0] === 1'b1) ? grp_fu_352_p3 : 32'd8388608);

assign select_ln28_5_fu_776_p3 = ((and_ln28_9_fu_770_p2[0:0] === 1'b1) ? grp_fu_352_p3 : select_ln28_4_reg_1296);

assign select_ln28_6_fu_1045_p3 = ((and_ln28_11_fu_1040_p2[0:0] === 1'b1) ? select_ln28_14_reg_1303 : select_ln28_5_reg_1333);

assign select_ln28_7_fu_1135_p3 = ((and_ln28_13_fu_1129_p2[0:0] === 1'b1) ? select_ln28_15_reg_1344 : select_ln28_6_fu_1045_p3);

assign select_ln28_fu_525_p3 = ((and_ln28_fu_519_p2[0:0] === 1'b1) ? grp_fu_337_p3 : 32'd8388608);

assign shl_ln28_fu_470_p2 = select_ln28_16_reg_1153 << 2'd1;

assign tmp_10_fu_893_p4 = {{bitcast_ln28_6_fu_889_p1[30:23]}};

assign tmp_12_fu_551_p4 = {{bitcast_ln28_7_fu_547_p1[30:23]}};

assign tmp_14_fu_697_p4 = {{bitcast_ln28_8_fu_693_p1[30:23]}};

assign tmp_15_fu_714_p4 = {{bitcast_ln28_9_fu_711_p1[30:23]}};

assign tmp_17_fu_967_p4 = {{bitcast_ln28_10_fu_964_p1[30:23]}};

assign tmp_18_fu_984_p4 = {{bitcast_ln28_11_fu_981_p1[30:23]}};

assign tmp_20_fu_1055_p4 = {{bitcast_ln28_12_fu_1052_p1[30:23]}};

assign tmp_21_fu_1073_p4 = {{bitcast_ln28_13_fu_1069_p1[30:23]}};

assign tmp_2_fu_487_p4 = {{bitcast_ln28_fu_483_p1[30:23]}};

assign tmp_4_fu_606_p4 = {{bitcast_ln28_1_fu_602_p1[30:23]}};

assign tmp_5_fu_623_p4 = {{bitcast_ln28_2_fu_620_p1[30:23]}};

assign tmp_7_fu_787_p4 = {{bitcast_ln28_3_fu_784_p1[30:23]}};

assign tmp_8_fu_804_p4 = {{bitcast_ln28_4_fu_801_p1[30:23]}};

assign tmp_fu_418_p3 = {{62'd1}, {select_ln28_17_fu_400_p3}};

assign tmp_s_fu_875_p4 = {{bitcast_ln28_5_fu_872_p1[30:23]}};

assign trunc_ln28_10_fu_724_p1 = bitcast_ln28_9_fu_711_p1[22:0];

assign trunc_ln28_11_fu_977_p1 = bitcast_ln28_10_fu_964_p1[22:0];

assign trunc_ln28_12_fu_994_p1 = bitcast_ln28_11_fu_981_p1[22:0];

assign trunc_ln28_13_fu_1065_p1 = bitcast_ln28_12_fu_1052_p1[22:0];

assign trunc_ln28_14_fu_1083_p1 = bitcast_ln28_13_fu_1069_p1[22:0];

assign trunc_ln28_1_fu_497_p1 = bitcast_ln28_fu_483_p1[22:0];

assign trunc_ln28_2_fu_616_p1 = bitcast_ln28_1_fu_602_p1[22:0];

assign trunc_ln28_3_fu_633_p1 = bitcast_ln28_2_fu_620_p1[22:0];

assign trunc_ln28_4_fu_797_p1 = bitcast_ln28_3_fu_784_p1[22:0];

assign trunc_ln28_5_fu_814_p1 = bitcast_ln28_4_fu_801_p1[22:0];

assign trunc_ln28_6_fu_885_p1 = bitcast_ln28_5_fu_872_p1[22:0];

assign trunc_ln28_7_fu_903_p1 = bitcast_ln28_6_fu_889_p1[22:0];

assign trunc_ln28_8_fu_561_p1 = bitcast_ln28_7_fu_547_p1[22:0];

assign trunc_ln28_9_fu_707_p1 = bitcast_ln28_8_fu_693_p1[22:0];

assign trunc_ln28_fu_430_p1 = select_ln28_16_fu_392_p3[0:0];

assign zext_ln28_1_fu_434_p1 = select_ln28_17_reg_1159;

assign zext_ln28_2_fu_437_p1 = select_ln28_17_reg_1159;

assign zext_ln28_3_fu_446_p1 = add_ln28_fu_440_p2;

assign zext_ln28_4_fu_462_p1 = add_ln28_1_fu_456_p2;

assign zext_ln28_fu_408_p1 = select_ln28_17_fu_400_p3;

endmodule //max_pool_1
