// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "max_pool_1_fcmp_3bkb.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > conv_1_out_address0;
    sc_out< sc_logic > conv_1_out_ce0;
    sc_in< sc_lv<32> > conv_1_out_q0;
    sc_out< sc_lv<3> > max_pool_1_out_address0;
    sc_out< sc_logic > max_pool_1_out_ce0;
    sc_out< sc_logic > max_pool_1_out_we0;
    sc_out< sc_lv<32> > max_pool_1_out_d0;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U1;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<2> > f_fu_243_p2;
    sc_signal< sc_lv<2> > f_reg_641;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<6> > zext_ln14_fu_249_p1;
    sc_signal< sc_lv<6> > zext_ln14_reg_646;
    sc_signal< sc_lv<1> > icmp_ln10_fu_237_p2;
    sc_signal< sc_lv<4> > zext_ln14_1_fu_253_p1;
    sc_signal< sc_lv<4> > zext_ln14_1_reg_652;
    sc_signal< sc_lv<2> > add_ln16_fu_263_p2;
    sc_signal< sc_lv<2> > add_ln16_reg_661;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<2> > shl_ln26_fu_269_p2;
    sc_signal< sc_lv<2> > shl_ln26_reg_666;
    sc_signal< sc_lv<1> > icmp_ln16_fu_257_p2;
    sc_signal< sc_lv<2> > add_ln20_fu_281_p2;
    sc_signal< sc_lv<2> > add_ln20_reg_674;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<2> > add_ln23_fu_315_p2;
    sc_signal< sc_lv<2> > add_ln23_reg_682;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln23_fu_309_p2;
    sc_signal< sc_lv<32> > select_ln28_fu_434_p3;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<2> > add_ln16_1_fu_448_p2;
    sc_signal< sc_lv<2> > add_ln16_1_reg_700;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<2> > shl_ln26_1_fu_454_p2;
    sc_signal< sc_lv<2> > shl_ln26_1_reg_705;
    sc_signal< sc_lv<1> > icmp_ln16_1_fu_442_p2;
    sc_signal< sc_lv<2> > add_ln20_1_fu_466_p2;
    sc_signal< sc_lv<2> > add_ln20_1_reg_713;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<2> > xor_ln25_fu_472_p2;
    sc_signal< sc_lv<2> > xor_ln25_reg_718;
    sc_signal< sc_lv<1> > icmp_ln20_1_fu_460_p2;
    sc_signal< sc_lv<2> > add_ln23_1_fu_512_p2;
    sc_signal< sc_lv<2> > add_ln23_1_reg_726;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<1> > icmp_ln23_1_fu_506_p2;
    sc_signal< sc_lv<32> > select_ln28_1_fu_630_p3;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<2> > f_0_reg_100;
    sc_signal< sc_lv<2> > c_0_0_reg_111;
    sc_signal< sc_lv<1> > icmp_ln20_fu_275_p2;
    sc_signal< sc_lv<32> > max_0_0_reg_123;
    sc_signal< sc_lv<2> > mpr_0_0_reg_136;
    sc_signal< sc_lv<32> > max_1_0_reg_148;
    sc_signal< sc_lv<2> > mpc_0_0_reg_160;
    sc_signal< sc_lv<2> > c_0_1_reg_171;
    sc_signal< sc_lv<32> > max_0_1_reg_183;
    sc_signal< sc_lv<2> > mpr_0_1_reg_196;
    sc_signal< sc_lv<32> > max_1_1_reg_207;
    sc_signal< sc_lv<2> > mpc_0_1_reg_219;
    sc_signal< sc_lv<64> > zext_ln35_1_fu_304_p1;
    sc_signal< sc_lv<64> > zext_ln28_1_fu_345_p1;
    sc_signal< sc_lv<64> > zext_ln35_3_fu_501_p1;
    sc_signal< sc_lv<64> > zext_ln28_3_fu_541_p1;
    sc_signal< sc_lv<32> > grp_fu_230_p1;
    sc_signal< sc_lv<3> > tmp_11_fu_287_p3;
    sc_signal< sc_lv<4> > zext_ln35_fu_295_p1;
    sc_signal< sc_lv<4> > add_ln35_fu_299_p2;
    sc_signal< sc_lv<2> > add_ln26_fu_321_p2;
    sc_signal< sc_lv<5> > tmp_13_fu_326_p4;
    sc_signal< sc_lv<6> > zext_ln28_fu_336_p1;
    sc_signal< sc_lv<6> > add_ln28_fu_340_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_fu_350_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_1_fu_368_p1;
    sc_signal< sc_lv<8> > tmp_1_fu_354_p4;
    sc_signal< sc_lv<23> > trunc_ln28_fu_364_p1;
    sc_signal< sc_lv<1> > icmp_ln28_1_fu_392_p2;
    sc_signal< sc_lv<1> > icmp_ln28_fu_386_p2;
    sc_signal< sc_lv<8> > tmp_7_fu_372_p4;
    sc_signal< sc_lv<23> > trunc_ln28_1_fu_382_p1;
    sc_signal< sc_lv<1> > icmp_ln28_3_fu_410_p2;
    sc_signal< sc_lv<1> > icmp_ln28_2_fu_404_p2;
    sc_signal< sc_lv<1> > or_ln28_fu_398_p2;
    sc_signal< sc_lv<1> > or_ln28_1_fu_416_p2;
    sc_signal< sc_lv<1> > and_ln28_fu_422_p2;
    sc_signal< sc_lv<1> > grp_fu_230_p2;
    sc_signal< sc_lv<1> > and_ln28_1_fu_428_p2;
    sc_signal< sc_lv<3> > tmp_12_fu_478_p3;
    sc_signal< sc_lv<4> > zext_ln35_2_fu_486_p1;
    sc_signal< sc_lv<4> > add_ln35_1_fu_490_p2;
    sc_signal< sc_lv<4> > add_ln35_2_fu_496_p2;
    sc_signal< sc_lv<2> > add_ln26_1_fu_518_p2;
    sc_signal< sc_lv<5> > tmp_14_fu_523_p4;
    sc_signal< sc_lv<6> > zext_ln28_2_fu_532_p1;
    sc_signal< sc_lv<6> > add_ln28_1_fu_536_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_2_fu_546_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_3_fu_564_p1;
    sc_signal< sc_lv<8> > tmp_9_fu_550_p4;
    sc_signal< sc_lv<23> > trunc_ln28_2_fu_560_p1;
    sc_signal< sc_lv<1> > icmp_ln28_5_fu_588_p2;
    sc_signal< sc_lv<1> > icmp_ln28_4_fu_582_p2;
    sc_signal< sc_lv<8> > tmp_s_fu_568_p4;
    sc_signal< sc_lv<23> > trunc_ln28_3_fu_578_p1;
    sc_signal< sc_lv<1> > icmp_ln28_7_fu_606_p2;
    sc_signal< sc_lv<1> > icmp_ln28_6_fu_600_p2;
    sc_signal< sc_lv<1> > or_ln28_2_fu_594_p2;
    sc_signal< sc_lv<1> > or_ln28_3_fu_612_p2;
    sc_signal< sc_lv<1> > and_ln28_2_fu_618_p2;
    sc_signal< sc_lv<1> > and_ln28_3_fu_624_p2;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln16_1_fu_448_p2();
    void thread_add_ln16_fu_263_p2();
    void thread_add_ln20_1_fu_466_p2();
    void thread_add_ln20_fu_281_p2();
    void thread_add_ln23_1_fu_512_p2();
    void thread_add_ln23_fu_315_p2();
    void thread_add_ln26_1_fu_518_p2();
    void thread_add_ln26_fu_321_p2();
    void thread_add_ln28_1_fu_536_p2();
    void thread_add_ln28_fu_340_p2();
    void thread_add_ln35_1_fu_490_p2();
    void thread_add_ln35_2_fu_496_p2();
    void thread_add_ln35_fu_299_p2();
    void thread_and_ln28_1_fu_428_p2();
    void thread_and_ln28_2_fu_618_p2();
    void thread_and_ln28_3_fu_624_p2();
    void thread_and_ln28_fu_422_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bitcast_ln28_1_fu_368_p1();
    void thread_bitcast_ln28_2_fu_546_p1();
    void thread_bitcast_ln28_3_fu_564_p1();
    void thread_bitcast_ln28_fu_350_p1();
    void thread_conv_1_out_address0();
    void thread_conv_1_out_ce0();
    void thread_f_fu_243_p2();
    void thread_grp_fu_230_p1();
    void thread_icmp_ln10_fu_237_p2();
    void thread_icmp_ln16_1_fu_442_p2();
    void thread_icmp_ln16_fu_257_p2();
    void thread_icmp_ln20_1_fu_460_p2();
    void thread_icmp_ln20_fu_275_p2();
    void thread_icmp_ln23_1_fu_506_p2();
    void thread_icmp_ln23_fu_309_p2();
    void thread_icmp_ln28_1_fu_392_p2();
    void thread_icmp_ln28_2_fu_404_p2();
    void thread_icmp_ln28_3_fu_410_p2();
    void thread_icmp_ln28_4_fu_582_p2();
    void thread_icmp_ln28_5_fu_588_p2();
    void thread_icmp_ln28_6_fu_600_p2();
    void thread_icmp_ln28_7_fu_606_p2();
    void thread_icmp_ln28_fu_386_p2();
    void thread_max_pool_1_out_address0();
    void thread_max_pool_1_out_ce0();
    void thread_max_pool_1_out_d0();
    void thread_max_pool_1_out_we0();
    void thread_or_ln28_1_fu_416_p2();
    void thread_or_ln28_2_fu_594_p2();
    void thread_or_ln28_3_fu_612_p2();
    void thread_or_ln28_fu_398_p2();
    void thread_select_ln28_1_fu_630_p3();
    void thread_select_ln28_fu_434_p3();
    void thread_shl_ln26_1_fu_454_p2();
    void thread_shl_ln26_fu_269_p2();
    void thread_tmp_11_fu_287_p3();
    void thread_tmp_12_fu_478_p3();
    void thread_tmp_13_fu_326_p4();
    void thread_tmp_14_fu_523_p4();
    void thread_tmp_1_fu_354_p4();
    void thread_tmp_7_fu_372_p4();
    void thread_tmp_9_fu_550_p4();
    void thread_tmp_s_fu_568_p4();
    void thread_trunc_ln28_1_fu_382_p1();
    void thread_trunc_ln28_2_fu_560_p1();
    void thread_trunc_ln28_3_fu_578_p1();
    void thread_trunc_ln28_fu_364_p1();
    void thread_xor_ln25_fu_472_p2();
    void thread_zext_ln14_1_fu_253_p1();
    void thread_zext_ln14_fu_249_p1();
    void thread_zext_ln28_1_fu_345_p1();
    void thread_zext_ln28_2_fu_532_p1();
    void thread_zext_ln28_3_fu_541_p1();
    void thread_zext_ln28_fu_336_p1();
    void thread_zext_ln35_1_fu_304_p1();
    void thread_zext_ln35_2_fu_486_p1();
    void thread_zext_ln35_3_fu_501_p1();
    void thread_zext_ln35_fu_295_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
