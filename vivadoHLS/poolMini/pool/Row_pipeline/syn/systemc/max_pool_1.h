// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "max_pool_1_fcmp_3bkb.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > conv_1_out_address0;
    sc_out< sc_logic > conv_1_out_ce0;
    sc_in< sc_lv<32> > conv_1_out_q0;
    sc_out< sc_lv<5> > conv_1_out_address1;
    sc_out< sc_logic > conv_1_out_ce1;
    sc_in< sc_lv<32> > conv_1_out_q1;
    sc_out< sc_lv<3> > max_pool_1_out_address0;
    sc_out< sc_logic > max_pool_1_out_ce0;
    sc_out< sc_logic > max_pool_1_out_we0;
    sc_out< sc_lv<32> > max_pool_1_out_d0;
    sc_out< sc_lv<3> > max_pool_1_out_address1;
    sc_out< sc_logic > max_pool_1_out_ce1;
    sc_out< sc_logic > max_pool_1_out_we1;
    sc_out< sc_lv<32> > max_pool_1_out_d1;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U1;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U2;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > indvar_flatten_reg_186;
    sc_signal< sc_lv<2> > f_0_reg_197;
    sc_signal< sc_lv<2> > r_0_reg_208;
    sc_signal< sc_lv<32> > reg_230;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<1> > icmp_ln10_reg_1158;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state4_pp0_stage2_iter0;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<1> > icmp_ln10_fu_234_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<3> > add_ln10_fu_240_p2;
    sc_signal< sc_lv<3> > add_ln10_reg_1162;
    sc_signal< sc_lv<2> > select_ln28_8_fu_258_p3;
    sc_signal< sc_lv<2> > select_ln28_8_reg_1167;
    sc_signal< sc_lv<2> > select_ln28_9_fu_266_p3;
    sc_signal< sc_lv<2> > select_ln28_9_reg_1175;
    sc_signal< sc_lv<7> > zext_ln14_fu_274_p1;
    sc_signal< sc_lv<7> > zext_ln14_reg_1183;
    sc_signal< sc_lv<5> > tmp_25_fu_282_p3;
    sc_signal< sc_lv<5> > tmp_25_reg_1190;
    sc_signal< sc_lv<5> > tmp_26_fu_290_p4;
    sc_signal< sc_lv<5> > tmp_26_reg_1195;
    sc_signal< sc_lv<32> > select_ln28_fu_409_p3;
    sc_signal< sc_lv<32> > select_ln28_reg_1220;
    sc_signal< sc_lv<1> > grp_fu_225_p2;
    sc_signal< sc_lv<1> > tmp_6_reg_1226;
    sc_signal< sc_lv<32> > select_ln28_1_fu_505_p3;
    sc_signal< sc_lv<32> > select_ln28_1_reg_1231;
    sc_signal< sc_lv<2> > or_ln25_fu_512_p2;
    sc_signal< sc_lv<2> > or_ln25_reg_1238;
    sc_signal< sc_lv<32> > select_ln28_4_fu_589_p3;
    sc_signal< sc_lv<32> > select_ln28_4_reg_1253;
    sc_signal< sc_lv<1> > tmp_16_reg_1259;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state5_pp0_stage3_iter0;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<32> > select_ln28_2_fu_736_p3;
    sc_signal< sc_lv<32> > select_ln28_2_reg_1274;
    sc_signal< sc_lv<32> > select_ln28_6_fu_917_p3;
    sc_signal< sc_lv<32> > select_ln28_6_reg_1281;
    sc_signal< sc_lv<2> > r_fu_925_p2;
    sc_signal< sc_lv<2> > r_reg_1288;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< sc_lv<3> > ap_phi_mux_indvar_flatten_phi_fu_190_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<2> > ap_phi_mux_f_0_phi_fu_201_p4;
    sc_signal< sc_lv<2> > ap_phi_mux_r_0_phi_fu_212_p4;
    sc_signal< sc_lv<64> > zext_ln28_fu_300_p1;
    sc_signal< sc_lv<64> > zext_ln28_1_fu_325_p1;
    sc_signal< sc_lv<64> > tmp_27_fu_335_p3;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > zext_ln28_3_fu_362_p1;
    sc_signal< sc_lv<64> > zext_ln28_2_fu_527_p1;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<64> > tmp_30_fu_538_p3;
    sc_signal< sc_lv<64> > zext_ln28_4_fu_624_p1;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<64> > zext_ln28_5_fu_648_p1;
    sc_signal< sc_lv<64> > zext_ln35_fu_946_p1;
    sc_signal< sc_lv<64> > zext_ln35_1_fu_971_p1;
    sc_signal< sc_lv<32> > grp_fu_219_p1;
    sc_signal< sc_lv<32> > grp_fu_225_p1;
    sc_signal< sc_lv<32> > select_ln28_5_fu_825_p3;
    sc_signal< sc_lv<1> > icmp_ln13_fu_252_p2;
    sc_signal< sc_lv<2> > f_fu_246_p2;
    sc_signal< sc_lv<1> > trunc_ln25_fu_278_p1;
    sc_signal< sc_lv<5> > or_ln28_14_fu_305_p2;
    sc_signal< sc_lv<7> > tmp_29_cast_fu_311_p3;
    sc_signal< sc_lv<7> > add_ln28_fu_319_p2;
    sc_signal< sc_lv<5> > or_ln28_15_fu_330_p2;
    sc_signal< sc_lv<5> > or_ln28_16_fu_344_p2;
    sc_signal< sc_lv<7> > tmp_31_cast_fu_349_p3;
    sc_signal< sc_lv<7> > add_ln28_1_fu_357_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_fu_367_p1;
    sc_signal< sc_lv<8> > tmp_2_fu_371_p4;
    sc_signal< sc_lv<23> > trunc_ln28_fu_381_p1;
    sc_signal< sc_lv<1> > icmp_ln28_1_fu_391_p2;
    sc_signal< sc_lv<1> > icmp_ln28_fu_385_p2;
    sc_signal< sc_lv<1> > or_ln28_fu_397_p2;
    sc_signal< sc_lv<1> > grp_fu_219_p2;
    sc_signal< sc_lv<1> > and_ln28_fu_403_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_1_fu_423_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_2_fu_441_p1;
    sc_signal< sc_lv<8> > tmp_4_fu_427_p4;
    sc_signal< sc_lv<23> > trunc_ln28_1_fu_437_p1;
    sc_signal< sc_lv<1> > icmp_ln28_3_fu_464_p2;
    sc_signal< sc_lv<1> > icmp_ln28_2_fu_458_p2;
    sc_signal< sc_lv<8> > tmp_5_fu_444_p4;
    sc_signal< sc_lv<23> > trunc_ln28_2_fu_454_p1;
    sc_signal< sc_lv<1> > icmp_ln28_5_fu_482_p2;
    sc_signal< sc_lv<1> > icmp_ln28_4_fu_476_p2;
    sc_signal< sc_lv<1> > or_ln28_1_fu_470_p2;
    sc_signal< sc_lv<1> > or_ln28_2_fu_488_p2;
    sc_signal< sc_lv<1> > and_ln28_1_fu_494_p2;
    sc_signal< sc_lv<1> > and_ln28_2_fu_500_p2;
    sc_signal< sc_lv<2> > shl_ln25_fu_418_p2;
    sc_signal< sc_lv<5> > tmp_29_fu_518_p4;
    sc_signal< sc_lv<5> > or_ln28_18_fu_532_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_7_fu_547_p1;
    sc_signal< sc_lv<8> > tmp_12_fu_551_p4;
    sc_signal< sc_lv<23> > trunc_ln28_7_fu_561_p1;
    sc_signal< sc_lv<1> > icmp_ln28_15_fu_571_p2;
    sc_signal< sc_lv<1> > icmp_ln28_14_fu_565_p2;
    sc_signal< sc_lv<1> > or_ln28_7_fu_577_p2;
    sc_signal< sc_lv<1> > and_ln28_7_fu_583_p2;
    sc_signal< sc_lv<5> > tmp_28_fu_598_p3;
    sc_signal< sc_lv<5> > or_ln28_17_fu_605_p2;
    sc_signal< sc_lv<7> > tmp_34_cast_fu_611_p3;
    sc_signal< sc_lv<7> > add_ln28_2_fu_619_p2;
    sc_signal< sc_lv<5> > or_ln28_19_fu_629_p2;
    sc_signal< sc_lv<7> > tmp_36_cast_fu_635_p3;
    sc_signal< sc_lv<7> > add_ln28_3_fu_643_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_3_fu_653_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_4_fu_671_p1;
    sc_signal< sc_lv<8> > tmp_7_fu_657_p4;
    sc_signal< sc_lv<23> > trunc_ln28_3_fu_667_p1;
    sc_signal< sc_lv<1> > icmp_ln28_7_fu_694_p2;
    sc_signal< sc_lv<1> > icmp_ln28_6_fu_688_p2;
    sc_signal< sc_lv<8> > tmp_8_fu_674_p4;
    sc_signal< sc_lv<23> > trunc_ln28_4_fu_684_p1;
    sc_signal< sc_lv<1> > icmp_ln28_9_fu_712_p2;
    sc_signal< sc_lv<1> > icmp_ln28_8_fu_706_p2;
    sc_signal< sc_lv<1> > or_ln28_3_fu_700_p2;
    sc_signal< sc_lv<1> > or_ln28_4_fu_718_p2;
    sc_signal< sc_lv<1> > and_ln28_3_fu_724_p2;
    sc_signal< sc_lv<1> > and_ln28_4_fu_730_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_8_fu_743_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_9_fu_761_p1;
    sc_signal< sc_lv<8> > tmp_14_fu_747_p4;
    sc_signal< sc_lv<23> > trunc_ln28_8_fu_757_p1;
    sc_signal< sc_lv<1> > icmp_ln28_17_fu_784_p2;
    sc_signal< sc_lv<1> > icmp_ln28_16_fu_778_p2;
    sc_signal< sc_lv<8> > tmp_15_fu_764_p4;
    sc_signal< sc_lv<23> > trunc_ln28_9_fu_774_p1;
    sc_signal< sc_lv<1> > icmp_ln28_19_fu_802_p2;
    sc_signal< sc_lv<1> > icmp_ln28_18_fu_796_p2;
    sc_signal< sc_lv<1> > or_ln28_8_fu_790_p2;
    sc_signal< sc_lv<1> > or_ln28_9_fu_808_p2;
    sc_signal< sc_lv<1> > and_ln28_8_fu_814_p2;
    sc_signal< sc_lv<1> > and_ln28_9_fu_820_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_10_fu_833_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_11_fu_851_p1;
    sc_signal< sc_lv<8> > tmp_17_fu_837_p4;
    sc_signal< sc_lv<23> > trunc_ln28_10_fu_847_p1;
    sc_signal< sc_lv<1> > icmp_ln28_21_fu_875_p2;
    sc_signal< sc_lv<1> > icmp_ln28_20_fu_869_p2;
    sc_signal< sc_lv<8> > tmp_18_fu_855_p4;
    sc_signal< sc_lv<23> > trunc_ln28_11_fu_865_p1;
    sc_signal< sc_lv<1> > icmp_ln28_23_fu_893_p2;
    sc_signal< sc_lv<1> > icmp_ln28_22_fu_887_p2;
    sc_signal< sc_lv<1> > or_ln28_10_fu_881_p2;
    sc_signal< sc_lv<1> > or_ln28_11_fu_899_p2;
    sc_signal< sc_lv<1> > and_ln28_10_fu_905_p2;
    sc_signal< sc_lv<1> > and_ln28_11_fu_911_p2;
    sc_signal< sc_lv<4> > tmp_24_fu_940_p3;
    sc_signal< sc_lv<4> > tmp_23_fu_933_p3;
    sc_signal< sc_lv<4> > or_ln35_fu_951_p2;
    sc_signal< sc_lv<5> > zext_ln14_1_fu_930_p1;
    sc_signal< sc_lv<5> > tmp_26_cast_fu_957_p3;
    sc_signal< sc_lv<5> > add_ln35_fu_965_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_5_fu_976_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_6_fu_994_p1;
    sc_signal< sc_lv<8> > tmp_s_fu_980_p4;
    sc_signal< sc_lv<23> > trunc_ln28_5_fu_990_p1;
    sc_signal< sc_lv<1> > icmp_ln28_11_fu_1017_p2;
    sc_signal< sc_lv<1> > icmp_ln28_10_fu_1011_p2;
    sc_signal< sc_lv<8> > tmp_10_fu_997_p4;
    sc_signal< sc_lv<23> > trunc_ln28_6_fu_1007_p1;
    sc_signal< sc_lv<1> > icmp_ln28_13_fu_1035_p2;
    sc_signal< sc_lv<1> > icmp_ln28_12_fu_1029_p2;
    sc_signal< sc_lv<1> > or_ln28_5_fu_1023_p2;
    sc_signal< sc_lv<1> > or_ln28_6_fu_1041_p2;
    sc_signal< sc_lv<1> > and_ln28_5_fu_1047_p2;
    sc_signal< sc_lv<1> > and_ln28_6_fu_1053_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_12_fu_1067_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_13_fu_1085_p1;
    sc_signal< sc_lv<8> > tmp_20_fu_1071_p4;
    sc_signal< sc_lv<23> > trunc_ln28_12_fu_1081_p1;
    sc_signal< sc_lv<1> > icmp_ln28_25_fu_1108_p2;
    sc_signal< sc_lv<1> > icmp_ln28_24_fu_1102_p2;
    sc_signal< sc_lv<8> > tmp_21_fu_1088_p4;
    sc_signal< sc_lv<23> > trunc_ln28_13_fu_1098_p1;
    sc_signal< sc_lv<1> > icmp_ln28_27_fu_1126_p2;
    sc_signal< sc_lv<1> > icmp_ln28_26_fu_1120_p2;
    sc_signal< sc_lv<1> > or_ln28_12_fu_1114_p2;
    sc_signal< sc_lv<1> > or_ln28_13_fu_1132_p2;
    sc_signal< sc_lv<1> > and_ln28_12_fu_1138_p2;
    sc_signal< sc_lv<1> > and_ln28_13_fu_1144_p2;
    sc_signal< bool > ap_block_pp0_stage1_00001;
    sc_signal< bool > ap_block_pp0_stage2_00001;
    sc_signal< bool > ap_block_pp0_stage3_00001;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage0;
    static const sc_lv<6> ap_ST_fsm_pp0_stage1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage2;
    static const sc_lv<6> ap_ST_fsm_pp0_stage3;
    static const sc_lv<6> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<5> ap_const_lv5_4;
    static const sc_lv<59> ap_const_lv59_0;
    static const sc_lv<5> ap_const_lv5_6;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<32> ap_const_lv32_5;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln10_fu_240_p2();
    void thread_add_ln28_1_fu_357_p2();
    void thread_add_ln28_2_fu_619_p2();
    void thread_add_ln28_3_fu_643_p2();
    void thread_add_ln28_fu_319_p2();
    void thread_add_ln35_fu_965_p2();
    void thread_and_ln28_10_fu_905_p2();
    void thread_and_ln28_11_fu_911_p2();
    void thread_and_ln28_12_fu_1138_p2();
    void thread_and_ln28_13_fu_1144_p2();
    void thread_and_ln28_1_fu_494_p2();
    void thread_and_ln28_2_fu_500_p2();
    void thread_and_ln28_3_fu_724_p2();
    void thread_and_ln28_4_fu_730_p2();
    void thread_and_ln28_5_fu_1047_p2();
    void thread_and_ln28_6_fu_1053_p2();
    void thread_and_ln28_7_fu_583_p2();
    void thread_and_ln28_8_fu_814_p2();
    void thread_and_ln28_9_fu_820_p2();
    void thread_and_ln28_fu_403_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_00001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_00001();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_00001();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage2_iter0();
    void thread_ap_block_state5_pp0_stage3_iter0();
    void thread_ap_block_state6_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_f_0_phi_fu_201_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_190_p4();
    void thread_ap_phi_mux_r_0_phi_fu_212_p4();
    void thread_ap_ready();
    void thread_bitcast_ln28_10_fu_833_p1();
    void thread_bitcast_ln28_11_fu_851_p1();
    void thread_bitcast_ln28_12_fu_1067_p1();
    void thread_bitcast_ln28_13_fu_1085_p1();
    void thread_bitcast_ln28_1_fu_423_p1();
    void thread_bitcast_ln28_2_fu_441_p1();
    void thread_bitcast_ln28_3_fu_653_p1();
    void thread_bitcast_ln28_4_fu_671_p1();
    void thread_bitcast_ln28_5_fu_976_p1();
    void thread_bitcast_ln28_6_fu_994_p1();
    void thread_bitcast_ln28_7_fu_547_p1();
    void thread_bitcast_ln28_8_fu_743_p1();
    void thread_bitcast_ln28_9_fu_761_p1();
    void thread_bitcast_ln28_fu_367_p1();
    void thread_conv_1_out_address0();
    void thread_conv_1_out_address1();
    void thread_conv_1_out_ce0();
    void thread_conv_1_out_ce1();
    void thread_f_fu_246_p2();
    void thread_grp_fu_219_p1();
    void thread_grp_fu_225_p1();
    void thread_icmp_ln10_fu_234_p2();
    void thread_icmp_ln13_fu_252_p2();
    void thread_icmp_ln28_10_fu_1011_p2();
    void thread_icmp_ln28_11_fu_1017_p2();
    void thread_icmp_ln28_12_fu_1029_p2();
    void thread_icmp_ln28_13_fu_1035_p2();
    void thread_icmp_ln28_14_fu_565_p2();
    void thread_icmp_ln28_15_fu_571_p2();
    void thread_icmp_ln28_16_fu_778_p2();
    void thread_icmp_ln28_17_fu_784_p2();
    void thread_icmp_ln28_18_fu_796_p2();
    void thread_icmp_ln28_19_fu_802_p2();
    void thread_icmp_ln28_1_fu_391_p2();
    void thread_icmp_ln28_20_fu_869_p2();
    void thread_icmp_ln28_21_fu_875_p2();
    void thread_icmp_ln28_22_fu_887_p2();
    void thread_icmp_ln28_23_fu_893_p2();
    void thread_icmp_ln28_24_fu_1102_p2();
    void thread_icmp_ln28_25_fu_1108_p2();
    void thread_icmp_ln28_26_fu_1120_p2();
    void thread_icmp_ln28_27_fu_1126_p2();
    void thread_icmp_ln28_2_fu_458_p2();
    void thread_icmp_ln28_3_fu_464_p2();
    void thread_icmp_ln28_4_fu_476_p2();
    void thread_icmp_ln28_5_fu_482_p2();
    void thread_icmp_ln28_6_fu_688_p2();
    void thread_icmp_ln28_7_fu_694_p2();
    void thread_icmp_ln28_8_fu_706_p2();
    void thread_icmp_ln28_9_fu_712_p2();
    void thread_icmp_ln28_fu_385_p2();
    void thread_max_pool_1_out_address0();
    void thread_max_pool_1_out_address1();
    void thread_max_pool_1_out_ce0();
    void thread_max_pool_1_out_ce1();
    void thread_max_pool_1_out_d0();
    void thread_max_pool_1_out_d1();
    void thread_max_pool_1_out_we0();
    void thread_max_pool_1_out_we1();
    void thread_or_ln25_fu_512_p2();
    void thread_or_ln28_10_fu_881_p2();
    void thread_or_ln28_11_fu_899_p2();
    void thread_or_ln28_12_fu_1114_p2();
    void thread_or_ln28_13_fu_1132_p2();
    void thread_or_ln28_14_fu_305_p2();
    void thread_or_ln28_15_fu_330_p2();
    void thread_or_ln28_16_fu_344_p2();
    void thread_or_ln28_17_fu_605_p2();
    void thread_or_ln28_18_fu_532_p2();
    void thread_or_ln28_19_fu_629_p2();
    void thread_or_ln28_1_fu_470_p2();
    void thread_or_ln28_2_fu_488_p2();
    void thread_or_ln28_3_fu_700_p2();
    void thread_or_ln28_4_fu_718_p2();
    void thread_or_ln28_5_fu_1023_p2();
    void thread_or_ln28_6_fu_1041_p2();
    void thread_or_ln28_7_fu_577_p2();
    void thread_or_ln28_8_fu_790_p2();
    void thread_or_ln28_9_fu_808_p2();
    void thread_or_ln28_fu_397_p2();
    void thread_or_ln35_fu_951_p2();
    void thread_r_fu_925_p2();
    void thread_select_ln28_1_fu_505_p3();
    void thread_select_ln28_2_fu_736_p3();
    void thread_select_ln28_4_fu_589_p3();
    void thread_select_ln28_5_fu_825_p3();
    void thread_select_ln28_6_fu_917_p3();
    void thread_select_ln28_8_fu_258_p3();
    void thread_select_ln28_9_fu_266_p3();
    void thread_select_ln28_fu_409_p3();
    void thread_shl_ln25_fu_418_p2();
    void thread_tmp_10_fu_997_p4();
    void thread_tmp_12_fu_551_p4();
    void thread_tmp_14_fu_747_p4();
    void thread_tmp_15_fu_764_p4();
    void thread_tmp_17_fu_837_p4();
    void thread_tmp_18_fu_855_p4();
    void thread_tmp_20_fu_1071_p4();
    void thread_tmp_21_fu_1088_p4();
    void thread_tmp_23_fu_933_p3();
    void thread_tmp_24_fu_940_p3();
    void thread_tmp_25_fu_282_p3();
    void thread_tmp_26_cast_fu_957_p3();
    void thread_tmp_26_fu_290_p4();
    void thread_tmp_27_fu_335_p3();
    void thread_tmp_28_fu_598_p3();
    void thread_tmp_29_cast_fu_311_p3();
    void thread_tmp_29_fu_518_p4();
    void thread_tmp_2_fu_371_p4();
    void thread_tmp_30_fu_538_p3();
    void thread_tmp_31_cast_fu_349_p3();
    void thread_tmp_34_cast_fu_611_p3();
    void thread_tmp_36_cast_fu_635_p3();
    void thread_tmp_4_fu_427_p4();
    void thread_tmp_5_fu_444_p4();
    void thread_tmp_7_fu_657_p4();
    void thread_tmp_8_fu_674_p4();
    void thread_tmp_s_fu_980_p4();
    void thread_trunc_ln25_fu_278_p1();
    void thread_trunc_ln28_10_fu_847_p1();
    void thread_trunc_ln28_11_fu_865_p1();
    void thread_trunc_ln28_12_fu_1081_p1();
    void thread_trunc_ln28_13_fu_1098_p1();
    void thread_trunc_ln28_1_fu_437_p1();
    void thread_trunc_ln28_2_fu_454_p1();
    void thread_trunc_ln28_3_fu_667_p1();
    void thread_trunc_ln28_4_fu_684_p1();
    void thread_trunc_ln28_5_fu_990_p1();
    void thread_trunc_ln28_6_fu_1007_p1();
    void thread_trunc_ln28_7_fu_561_p1();
    void thread_trunc_ln28_8_fu_757_p1();
    void thread_trunc_ln28_9_fu_774_p1();
    void thread_trunc_ln28_fu_381_p1();
    void thread_zext_ln14_1_fu_930_p1();
    void thread_zext_ln14_fu_274_p1();
    void thread_zext_ln28_1_fu_325_p1();
    void thread_zext_ln28_2_fu_527_p1();
    void thread_zext_ln28_3_fu_362_p1();
    void thread_zext_ln28_4_fu_624_p1();
    void thread_zext_ln28_5_fu_648_p1();
    void thread_zext_ln28_fu_300_p1();
    void thread_zext_ln35_1_fu_971_p1();
    void thread_zext_ln35_fu_946_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
