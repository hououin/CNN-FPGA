

================================================================
== Vivado HLS Report for 'max_pool_1'
================================================================
* Date:           Thu Aug 10 10:40:14 2023

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        pool
* Solution:       Row_pipeline
* Product family: virtex7
* Target device:  xc7vx485t-ffg1157-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+-----------+------------+
    |  Clock |  Target  | Estimated | Uncertainty|
    +--------+----------+-----------+------------+
    |ap_clk  | 40.00 ns | 34.830 ns |   5.00 ns  |
    +--------+----------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       18|       18| 0.720 us | 0.720 us |   18|   18|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                        |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |        Loop Name       |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Filter_Loop_Row_Loop  |       16|       16|         5|          4|          1|     4|    yes   |
        +------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 1
  Pipeline-0 : II = 4, D = 5, States = { 2 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 7 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 2 
7 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.18>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([32 x float]* %conv_1_out) nounwind, !map !7"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x float]* %max_pool_1_out) nounwind, !map !14"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @max_pool_1_str) nounwind"   --->   Operation 10 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (1.18ns)   --->   "br label %1" [pooling.cpp:10]   --->   Operation 11 'br' <Predicate = true> <Delay = 1.18>

State 2 <SV = 1> <Delay = 5.68>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i3 [ 0, %0 ], [ %add_ln10, %Row_Loop ]" [pooling.cpp:10]   --->   Operation 12 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%f_0 = phi i2 [ 0, %0 ], [ %select_ln28_9, %Row_Loop ]" [pooling.cpp:28]   --->   Operation 13 'phi' 'f_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%r_0 = phi i2 [ 0, %0 ], [ %r, %Row_Loop ]"   --->   Operation 14 'phi' 'r_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.86ns)   --->   "%icmp_ln10 = icmp eq i3 %indvar_flatten, -4" [pooling.cpp:10]   --->   Operation 15 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (1.18ns)   --->   "%add_ln10 = add i3 %indvar_flatten, 1" [pooling.cpp:10]   --->   Operation 16 'add' 'add_ln10' <Predicate = true> <Delay = 1.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "br i1 %icmp_ln10, label %2, label %Row_Loop" [pooling.cpp:10]   --->   Operation 17 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (1.00ns)   --->   "%f = add i2 1, %f_0" [pooling.cpp:10]   --->   Operation 18 'add' 'f' <Predicate = (!icmp_ln10)> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.61ns)   --->   "%icmp_ln13 = icmp eq i2 %r_0, -2" [pooling.cpp:13]   --->   Operation 19 'icmp' 'icmp_ln13' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.62ns)   --->   "%select_ln28_8 = select i1 %icmp_ln13, i2 0, i2 %r_0" [pooling.cpp:28]   --->   Operation 20 'select' 'select_ln28_8' <Predicate = (!icmp_ln10)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.62ns)   --->   "%select_ln28_9 = select i1 %icmp_ln13, i2 %f, i2 %f_0" [pooling.cpp:28]   --->   Operation 21 'select' 'select_ln28_9' <Predicate = (!icmp_ln10)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%zext_ln14 = zext i2 %select_ln28_9 to i7" [pooling.cpp:14]   --->   Operation 22 'zext' 'zext_ln14' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%trunc_ln25 = trunc i2 %select_ln28_8 to i1" [pooling.cpp:25]   --->   Operation 23 'trunc' 'trunc_ln25' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%tmp_25 = call i5 @_ssdm_op_BitConcatenate.i5.i1.i4(i1 %trunc_ln25, i4 0)" [pooling.cpp:28]   --->   Operation 24 'bitconcatenate' 'tmp_25' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%tmp_26 = call i5 @_ssdm_op_BitConcatenate.i5.i1.i2.i2(i1 %trunc_ln25, i2 0, i2 %select_ln28_9)" [pooling.cpp:28]   --->   Operation 25 'bitconcatenate' 'tmp_26' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln28 = zext i5 %tmp_26 to i64" [pooling.cpp:28]   --->   Operation 26 'zext' 'zext_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%conv_1_out_addr = getelementptr [32 x float]* %conv_1_out, i64 0, i64 %zext_ln28" [pooling.cpp:28]   --->   Operation 27 'getelementptr' 'conv_1_out_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node add_ln28)   --->   "%or_ln28_14 = or i5 %tmp_25, 2" [pooling.cpp:28]   --->   Operation 28 'or' 'or_ln28_14' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns) (grouped into LUT with out node add_ln28)   --->   "%tmp_29_cast = call i7 @_ssdm_op_BitConcatenate.i7.i2.i5(i2 0, i5 %or_ln28_14)" [pooling.cpp:28]   --->   Operation 29 'bitconcatenate' 'tmp_29_cast' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (1.38ns) (out node of the LUT)   --->   "%add_ln28 = add i7 %zext_ln14, %tmp_29_cast" [pooling.cpp:28]   --->   Operation 30 'add' 'add_ln28' <Predicate = (!icmp_ln10)> <Delay = 1.38> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln28_1 = zext i7 %add_ln28 to i64" [pooling.cpp:28]   --->   Operation 31 'zext' 'zext_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%conv_1_out_addr_1 = getelementptr [32 x float]* %conv_1_out, i64 0, i64 %zext_ln28_1" [pooling.cpp:28]   --->   Operation 32 'getelementptr' 'conv_1_out_addr_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 33 [2/2] (2.66ns)   --->   "%conv_1_out_load = load float* %conv_1_out_addr, align 4" [pooling.cpp:28]   --->   Operation 33 'load' 'conv_1_out_load' <Predicate = (!icmp_ln10)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 34 [2/2] (2.66ns)   --->   "%conv_1_out_load_1 = load float* %conv_1_out_addr_1, align 4" [pooling.cpp:28]   --->   Operation 34 'load' 'conv_1_out_load_1' <Predicate = (!icmp_ln10)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 3 <SV = 2> <Delay = 34.8>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%or_ln28_15 = or i5 %tmp_26, 4" [pooling.cpp:28]   --->   Operation 35 'or' 'or_ln28_15' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%tmp_27 = call i64 @_ssdm_op_BitConcatenate.i64.i59.i5(i59 0, i5 %or_ln28_15)" [pooling.cpp:28]   --->   Operation 36 'bitconcatenate' 'tmp_27' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%conv_1_out_addr_4 = getelementptr [32 x float]* %conv_1_out, i64 0, i64 %tmp_27" [pooling.cpp:28]   --->   Operation 37 'getelementptr' 'conv_1_out_addr_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node add_ln28_1)   --->   "%or_ln28_16 = or i5 %tmp_25, 6" [pooling.cpp:28]   --->   Operation 38 'or' 'or_ln28_16' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node add_ln28_1)   --->   "%tmp_31_cast = call i7 @_ssdm_op_BitConcatenate.i7.i2.i5(i2 0, i5 %or_ln28_16)" [pooling.cpp:28]   --->   Operation 39 'bitconcatenate' 'tmp_31_cast' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (1.38ns) (out node of the LUT)   --->   "%add_ln28_1 = add i7 %zext_ln14, %tmp_31_cast" [pooling.cpp:28]   --->   Operation 40 'add' 'add_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 1.38> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln28_3 = zext i7 %add_ln28_1 to i64" [pooling.cpp:28]   --->   Operation 41 'zext' 'zext_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%conv_1_out_addr_5 = getelementptr [32 x float]* %conv_1_out, i64 0, i64 %zext_ln28_3" [pooling.cpp:28]   --->   Operation 42 'getelementptr' 'conv_1_out_addr_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 43 [1/2] (2.66ns)   --->   "%conv_1_out_load = load float* %conv_1_out_addr, align 4" [pooling.cpp:28]   --->   Operation 43 'load' 'conv_1_out_load' <Predicate = (!icmp_ln10)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%bitcast_ln28 = bitcast float %conv_1_out_load to i32" [pooling.cpp:28]   --->   Operation 44 'bitcast' 'bitcast_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%tmp_2 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 45 'partselect' 'tmp_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%trunc_ln28 = trunc i32 %bitcast_ln28 to i23" [pooling.cpp:28]   --->   Operation 46 'trunc' 'trunc_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (1.12ns)   --->   "%icmp_ln28 = icmp ne i8 %tmp_2, -1" [pooling.cpp:28]   --->   Operation 47 'icmp' 'icmp_ln28' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 48 [1/1] (1.48ns)   --->   "%icmp_ln28_1 = icmp eq i23 %trunc_ln28, 0" [pooling.cpp:28]   --->   Operation 48 'icmp' 'icmp_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node select_ln28)   --->   "%or_ln28 = or i1 %icmp_ln28_1, %icmp_ln28" [pooling.cpp:28]   --->   Operation 49 'or' 'or_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (15.7ns)   --->   "%tmp_3 = fcmp ogt float %conv_1_out_load, 0x3810000000000000" [pooling.cpp:28]   --->   Operation 50 'fcmp' 'tmp_3' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node select_ln28)   --->   "%and_ln28 = and i1 %or_ln28, %tmp_3" [pooling.cpp:28]   --->   Operation 51 'and' 'and_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 52 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28 = select i1 %and_ln28, float %conv_1_out_load, float 0x3810000000000000" [pooling.cpp:28]   --->   Operation 52 'select' 'select_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 53 [1/2] (2.66ns)   --->   "%conv_1_out_load_1 = load float* %conv_1_out_addr_1, align 4" [pooling.cpp:28]   --->   Operation 53 'load' 'conv_1_out_load_1' <Predicate = (!icmp_ln10)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 54 [1/1] (15.7ns)   --->   "%tmp_6 = fcmp ogt float %conv_1_out_load_1, %select_ln28" [pooling.cpp:28]   --->   Operation 54 'fcmp' 'tmp_6' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 55 [2/2] (2.66ns)   --->   "%conv_1_out_load_4 = load float* %conv_1_out_addr_4, align 4" [pooling.cpp:28]   --->   Operation 55 'load' 'conv_1_out_load_4' <Predicate = (!icmp_ln10)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 56 [2/2] (2.66ns)   --->   "%conv_1_out_load_5 = load float* %conv_1_out_addr_5, align 4" [pooling.cpp:28]   --->   Operation 56 'load' 'conv_1_out_load_5' <Predicate = (!icmp_ln10)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 4 <SV = 3> <Delay = 34.8>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%shl_ln25 = shl i2 %select_ln28_8, 1" [pooling.cpp:25]   --->   Operation 57 'shl' 'shl_ln25' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%bitcast_ln28_1 = bitcast float %conv_1_out_load_1 to i32" [pooling.cpp:28]   --->   Operation 58 'bitcast' 'bitcast_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%tmp_4 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_1, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 59 'partselect' 'tmp_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%trunc_ln28_1 = trunc i32 %bitcast_ln28_1 to i23" [pooling.cpp:28]   --->   Operation 60 'trunc' 'trunc_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%bitcast_ln28_2 = bitcast float %select_ln28 to i32" [pooling.cpp:28]   --->   Operation 61 'bitcast' 'bitcast_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_5 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_2, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 62 'partselect' 'tmp_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%trunc_ln28_2 = trunc i32 %bitcast_ln28_2 to i23" [pooling.cpp:28]   --->   Operation 63 'trunc' 'trunc_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (1.12ns)   --->   "%icmp_ln28_2 = icmp ne i8 %tmp_4, -1" [pooling.cpp:28]   --->   Operation 64 'icmp' 'icmp_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 65 [1/1] (1.48ns)   --->   "%icmp_ln28_3 = icmp eq i23 %trunc_ln28_1, 0" [pooling.cpp:28]   --->   Operation 65 'icmp' 'icmp_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_2)   --->   "%or_ln28_1 = or i1 %icmp_ln28_3, %icmp_ln28_2" [pooling.cpp:28]   --->   Operation 66 'or' 'or_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 67 [1/1] (1.12ns)   --->   "%icmp_ln28_4 = icmp ne i8 %tmp_5, -1" [pooling.cpp:28]   --->   Operation 67 'icmp' 'icmp_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 68 [1/1] (1.48ns)   --->   "%icmp_ln28_5 = icmp eq i23 %trunc_ln28_2, 0" [pooling.cpp:28]   --->   Operation 68 'icmp' 'icmp_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_2)   --->   "%or_ln28_2 = or i1 %icmp_ln28_5, %icmp_ln28_4" [pooling.cpp:28]   --->   Operation 69 'or' 'or_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_2)   --->   "%and_ln28_1 = and i1 %or_ln28_1, %or_ln28_2" [pooling.cpp:28]   --->   Operation 70 'and' 'and_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 71 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln28_2 = and i1 %and_ln28_1, %tmp_6" [pooling.cpp:28]   --->   Operation 71 'and' 'and_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 72 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_1 = select i1 %and_ln28_2, float %conv_1_out_load_1, float %select_ln28" [pooling.cpp:28]   --->   Operation 72 'select' 'select_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 73 [1/1] (0.00ns)   --->   "%or_ln25 = or i2 %shl_ln25, 1" [pooling.cpp:25]   --->   Operation 73 'or' 'or_ln25' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_29 = call i5 @_ssdm_op_BitConcatenate.i5.i2.i1.i2(i2 %or_ln25, i1 false, i2 %select_ln28_9)" [pooling.cpp:28]   --->   Operation 74 'bitconcatenate' 'tmp_29' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 75 [1/1] (0.00ns)   --->   "%zext_ln28_2 = zext i5 %tmp_29 to i64" [pooling.cpp:28]   --->   Operation 75 'zext' 'zext_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%conv_1_out_addr_2 = getelementptr [32 x float]* %conv_1_out, i64 0, i64 %zext_ln28_2" [pooling.cpp:28]   --->   Operation 76 'getelementptr' 'conv_1_out_addr_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%or_ln28_18 = or i5 %tmp_29, 4" [pooling.cpp:28]   --->   Operation 77 'or' 'or_ln28_18' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 78 [1/1] (0.00ns)   --->   "%tmp_30 = call i64 @_ssdm_op_BitConcatenate.i64.i59.i5(i59 0, i5 %or_ln28_18)" [pooling.cpp:28]   --->   Operation 78 'bitconcatenate' 'tmp_30' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%conv_1_out_addr_6 = getelementptr [32 x float]* %conv_1_out, i64 0, i64 %tmp_30" [pooling.cpp:28]   --->   Operation 79 'getelementptr' 'conv_1_out_addr_6' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 80 [2/2] (2.66ns)   --->   "%conv_1_out_load_2 = load float* %conv_1_out_addr_2, align 4" [pooling.cpp:28]   --->   Operation 80 'load' 'conv_1_out_load_2' <Predicate = (!icmp_ln10)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_4 : Operation 81 [1/2] (2.66ns)   --->   "%conv_1_out_load_4 = load float* %conv_1_out_addr_4, align 4" [pooling.cpp:28]   --->   Operation 81 'load' 'conv_1_out_load_4' <Predicate = (!icmp_ln10)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_4 : Operation 82 [1/1] (0.00ns)   --->   "%bitcast_ln28_7 = bitcast float %conv_1_out_load_4 to i32" [pooling.cpp:28]   --->   Operation 82 'bitcast' 'bitcast_ln28_7' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 83 [1/1] (0.00ns)   --->   "%tmp_12 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_7, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 83 'partselect' 'tmp_12' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 84 [1/1] (0.00ns)   --->   "%trunc_ln28_7 = trunc i32 %bitcast_ln28_7 to i23" [pooling.cpp:28]   --->   Operation 84 'trunc' 'trunc_ln28_7' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 85 [1/1] (1.12ns)   --->   "%icmp_ln28_14 = icmp ne i8 %tmp_12, -1" [pooling.cpp:28]   --->   Operation 85 'icmp' 'icmp_ln28_14' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 86 [1/1] (1.48ns)   --->   "%icmp_ln28_15 = icmp eq i23 %trunc_ln28_7, 0" [pooling.cpp:28]   --->   Operation 86 'icmp' 'icmp_ln28_15' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node select_ln28_4)   --->   "%or_ln28_7 = or i1 %icmp_ln28_15, %icmp_ln28_14" [pooling.cpp:28]   --->   Operation 87 'or' 'or_ln28_7' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 88 [1/1] (15.7ns)   --->   "%tmp_13 = fcmp ogt float %conv_1_out_load_4, 0x3810000000000000" [pooling.cpp:28]   --->   Operation 88 'fcmp' 'tmp_13' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node select_ln28_4)   --->   "%and_ln28_7 = and i1 %or_ln28_7, %tmp_13" [pooling.cpp:28]   --->   Operation 89 'and' 'and_ln28_7' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 90 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_4 = select i1 %and_ln28_7, float %conv_1_out_load_4, float 0x3810000000000000" [pooling.cpp:28]   --->   Operation 90 'select' 'select_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 91 [1/2] (2.66ns)   --->   "%conv_1_out_load_5 = load float* %conv_1_out_addr_5, align 4" [pooling.cpp:28]   --->   Operation 91 'load' 'conv_1_out_load_5' <Predicate = (!icmp_ln10)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_4 : Operation 92 [1/1] (15.7ns)   --->   "%tmp_16 = fcmp ogt float %conv_1_out_load_5, %select_ln28_4" [pooling.cpp:28]   --->   Operation 92 'fcmp' 'tmp_16' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 93 [2/2] (2.66ns)   --->   "%conv_1_out_load_6 = load float* %conv_1_out_addr_6, align 4" [pooling.cpp:28]   --->   Operation 93 'load' 'conv_1_out_load_6' <Predicate = (!icmp_ln10)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 5 <SV = 4> <Delay = 19.7>
ST_5 : Operation 94 [1/1] (0.00ns)   --->   "%tmp_28 = call i5 @_ssdm_op_BitConcatenate.i5.i2.i3(i2 %or_ln25, i3 0)" [pooling.cpp:28]   --->   Operation 94 'bitconcatenate' 'tmp_28' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node add_ln28_2)   --->   "%or_ln28_17 = or i5 %tmp_28, 2" [pooling.cpp:28]   --->   Operation 95 'or' 'or_ln28_17' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node add_ln28_2)   --->   "%tmp_34_cast = call i7 @_ssdm_op_BitConcatenate.i7.i2.i5(i2 0, i5 %or_ln28_17)" [pooling.cpp:28]   --->   Operation 96 'bitconcatenate' 'tmp_34_cast' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 97 [1/1] (1.38ns) (out node of the LUT)   --->   "%add_ln28_2 = add i7 %zext_ln14, %tmp_34_cast" [pooling.cpp:28]   --->   Operation 97 'add' 'add_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 1.38> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 98 [1/1] (0.00ns)   --->   "%zext_ln28_4 = zext i7 %add_ln28_2 to i64" [pooling.cpp:28]   --->   Operation 98 'zext' 'zext_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 99 [1/1] (0.00ns)   --->   "%conv_1_out_addr_3 = getelementptr [32 x float]* %conv_1_out, i64 0, i64 %zext_ln28_4" [pooling.cpp:28]   --->   Operation 99 'getelementptr' 'conv_1_out_addr_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node add_ln28_3)   --->   "%or_ln28_19 = or i5 %tmp_28, 6" [pooling.cpp:28]   --->   Operation 100 'or' 'or_ln28_19' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node add_ln28_3)   --->   "%tmp_36_cast = call i7 @_ssdm_op_BitConcatenate.i7.i2.i5(i2 0, i5 %or_ln28_19)" [pooling.cpp:28]   --->   Operation 101 'bitconcatenate' 'tmp_36_cast' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 102 [1/1] (1.38ns) (out node of the LUT)   --->   "%add_ln28_3 = add i7 %zext_ln14, %tmp_36_cast" [pooling.cpp:28]   --->   Operation 102 'add' 'add_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 1.38> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 103 [1/1] (0.00ns)   --->   "%zext_ln28_5 = zext i7 %add_ln28_3 to i64" [pooling.cpp:28]   --->   Operation 103 'zext' 'zext_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 104 [1/1] (0.00ns)   --->   "%conv_1_out_addr_7 = getelementptr [32 x float]* %conv_1_out, i64 0, i64 %zext_ln28_5" [pooling.cpp:28]   --->   Operation 104 'getelementptr' 'conv_1_out_addr_7' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 105 [1/2] (2.66ns)   --->   "%conv_1_out_load_2 = load float* %conv_1_out_addr_2, align 4" [pooling.cpp:28]   --->   Operation 105 'load' 'conv_1_out_load_2' <Predicate = (!icmp_ln10)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_5 : Operation 106 [1/1] (0.00ns)   --->   "%bitcast_ln28_3 = bitcast float %conv_1_out_load_2 to i32" [pooling.cpp:28]   --->   Operation 106 'bitcast' 'bitcast_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 107 [1/1] (0.00ns)   --->   "%tmp_7 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_3, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 107 'partselect' 'tmp_7' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 108 [1/1] (0.00ns)   --->   "%trunc_ln28_3 = trunc i32 %bitcast_ln28_3 to i23" [pooling.cpp:28]   --->   Operation 108 'trunc' 'trunc_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 109 [1/1] (0.00ns)   --->   "%bitcast_ln28_4 = bitcast float %select_ln28_1 to i32" [pooling.cpp:28]   --->   Operation 109 'bitcast' 'bitcast_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 110 [1/1] (0.00ns)   --->   "%tmp_8 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_4, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 110 'partselect' 'tmp_8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 111 [1/1] (0.00ns)   --->   "%trunc_ln28_4 = trunc i32 %bitcast_ln28_4 to i23" [pooling.cpp:28]   --->   Operation 111 'trunc' 'trunc_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 112 [1/1] (1.12ns)   --->   "%icmp_ln28_6 = icmp ne i8 %tmp_7, -1" [pooling.cpp:28]   --->   Operation 112 'icmp' 'icmp_ln28_6' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 113 [1/1] (1.48ns)   --->   "%icmp_ln28_7 = icmp eq i23 %trunc_ln28_3, 0" [pooling.cpp:28]   --->   Operation 113 'icmp' 'icmp_ln28_7' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 114 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_4)   --->   "%or_ln28_3 = or i1 %icmp_ln28_7, %icmp_ln28_6" [pooling.cpp:28]   --->   Operation 114 'or' 'or_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 115 [1/1] (1.12ns)   --->   "%icmp_ln28_8 = icmp ne i8 %tmp_8, -1" [pooling.cpp:28]   --->   Operation 115 'icmp' 'icmp_ln28_8' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 116 [1/1] (1.48ns)   --->   "%icmp_ln28_9 = icmp eq i23 %trunc_ln28_4, 0" [pooling.cpp:28]   --->   Operation 116 'icmp' 'icmp_ln28_9' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_4)   --->   "%or_ln28_4 = or i1 %icmp_ln28_9, %icmp_ln28_8" [pooling.cpp:28]   --->   Operation 117 'or' 'or_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_4)   --->   "%and_ln28_3 = and i1 %or_ln28_3, %or_ln28_4" [pooling.cpp:28]   --->   Operation 118 'and' 'and_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 119 [1/1] (15.7ns)   --->   "%tmp_9 = fcmp ogt float %conv_1_out_load_2, %select_ln28_1" [pooling.cpp:28]   --->   Operation 119 'fcmp' 'tmp_9' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 120 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln28_4 = and i1 %and_ln28_3, %tmp_9" [pooling.cpp:28]   --->   Operation 120 'and' 'and_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 121 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_2 = select i1 %and_ln28_4, float %conv_1_out_load_2, float %select_ln28_1" [pooling.cpp:28]   --->   Operation 121 'select' 'select_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 122 [2/2] (2.66ns)   --->   "%conv_1_out_load_3 = load float* %conv_1_out_addr_3, align 4" [pooling.cpp:28]   --->   Operation 122 'load' 'conv_1_out_load_3' <Predicate = (!icmp_ln10)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_5 : Operation 123 [1/1] (0.00ns)   --->   "%bitcast_ln28_8 = bitcast float %conv_1_out_load_5 to i32" [pooling.cpp:28]   --->   Operation 123 'bitcast' 'bitcast_ln28_8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 124 [1/1] (0.00ns)   --->   "%tmp_14 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_8, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 124 'partselect' 'tmp_14' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 125 [1/1] (0.00ns)   --->   "%trunc_ln28_8 = trunc i32 %bitcast_ln28_8 to i23" [pooling.cpp:28]   --->   Operation 125 'trunc' 'trunc_ln28_8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 126 [1/1] (0.00ns)   --->   "%bitcast_ln28_9 = bitcast float %select_ln28_4 to i32" [pooling.cpp:28]   --->   Operation 126 'bitcast' 'bitcast_ln28_9' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 127 [1/1] (0.00ns)   --->   "%tmp_15 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_9, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 127 'partselect' 'tmp_15' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 128 [1/1] (0.00ns)   --->   "%trunc_ln28_9 = trunc i32 %bitcast_ln28_9 to i23" [pooling.cpp:28]   --->   Operation 128 'trunc' 'trunc_ln28_9' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 129 [1/1] (1.12ns)   --->   "%icmp_ln28_16 = icmp ne i8 %tmp_14, -1" [pooling.cpp:28]   --->   Operation 129 'icmp' 'icmp_ln28_16' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 130 [1/1] (1.48ns)   --->   "%icmp_ln28_17 = icmp eq i23 %trunc_ln28_8, 0" [pooling.cpp:28]   --->   Operation 130 'icmp' 'icmp_ln28_17' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_9)   --->   "%or_ln28_8 = or i1 %icmp_ln28_17, %icmp_ln28_16" [pooling.cpp:28]   --->   Operation 131 'or' 'or_ln28_8' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 132 [1/1] (1.12ns)   --->   "%icmp_ln28_18 = icmp ne i8 %tmp_15, -1" [pooling.cpp:28]   --->   Operation 132 'icmp' 'icmp_ln28_18' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 133 [1/1] (1.48ns)   --->   "%icmp_ln28_19 = icmp eq i23 %trunc_ln28_9, 0" [pooling.cpp:28]   --->   Operation 133 'icmp' 'icmp_ln28_19' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_9)   --->   "%or_ln28_9 = or i1 %icmp_ln28_19, %icmp_ln28_18" [pooling.cpp:28]   --->   Operation 134 'or' 'or_ln28_9' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_9)   --->   "%and_ln28_8 = and i1 %or_ln28_8, %or_ln28_9" [pooling.cpp:28]   --->   Operation 135 'and' 'and_ln28_8' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 136 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln28_9 = and i1 %and_ln28_8, %tmp_16" [pooling.cpp:28]   --->   Operation 136 'and' 'and_ln28_9' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 137 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_5 = select i1 %and_ln28_9, float %conv_1_out_load_5, float %select_ln28_4" [pooling.cpp:28]   --->   Operation 137 'select' 'select_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 138 [1/2] (2.66ns)   --->   "%conv_1_out_load_6 = load float* %conv_1_out_addr_6, align 4" [pooling.cpp:28]   --->   Operation 138 'load' 'conv_1_out_load_6' <Predicate = (!icmp_ln10)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_5 : Operation 139 [1/1] (0.00ns)   --->   "%bitcast_ln28_10 = bitcast float %conv_1_out_load_6 to i32" [pooling.cpp:28]   --->   Operation 139 'bitcast' 'bitcast_ln28_10' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 140 [1/1] (0.00ns)   --->   "%tmp_17 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_10, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 140 'partselect' 'tmp_17' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 141 [1/1] (0.00ns)   --->   "%trunc_ln28_10 = trunc i32 %bitcast_ln28_10 to i23" [pooling.cpp:28]   --->   Operation 141 'trunc' 'trunc_ln28_10' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 142 [1/1] (0.00ns)   --->   "%bitcast_ln28_11 = bitcast float %select_ln28_5 to i32" [pooling.cpp:28]   --->   Operation 142 'bitcast' 'bitcast_ln28_11' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 143 [1/1] (0.00ns)   --->   "%tmp_18 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_11, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 143 'partselect' 'tmp_18' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 144 [1/1] (0.00ns)   --->   "%trunc_ln28_11 = trunc i32 %bitcast_ln28_11 to i23" [pooling.cpp:28]   --->   Operation 144 'trunc' 'trunc_ln28_11' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 145 [1/1] (1.12ns)   --->   "%icmp_ln28_20 = icmp ne i8 %tmp_17, -1" [pooling.cpp:28]   --->   Operation 145 'icmp' 'icmp_ln28_20' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 146 [1/1] (1.48ns)   --->   "%icmp_ln28_21 = icmp eq i23 %trunc_ln28_10, 0" [pooling.cpp:28]   --->   Operation 146 'icmp' 'icmp_ln28_21' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_11)   --->   "%or_ln28_10 = or i1 %icmp_ln28_21, %icmp_ln28_20" [pooling.cpp:28]   --->   Operation 147 'or' 'or_ln28_10' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 148 [1/1] (1.12ns)   --->   "%icmp_ln28_22 = icmp ne i8 %tmp_18, -1" [pooling.cpp:28]   --->   Operation 148 'icmp' 'icmp_ln28_22' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 149 [1/1] (1.48ns)   --->   "%icmp_ln28_23 = icmp eq i23 %trunc_ln28_11, 0" [pooling.cpp:28]   --->   Operation 149 'icmp' 'icmp_ln28_23' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_11)   --->   "%or_ln28_11 = or i1 %icmp_ln28_23, %icmp_ln28_22" [pooling.cpp:28]   --->   Operation 150 'or' 'or_ln28_11' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 151 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_11)   --->   "%and_ln28_10 = and i1 %or_ln28_10, %or_ln28_11" [pooling.cpp:28]   --->   Operation 151 'and' 'and_ln28_10' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 152 [1/1] (15.7ns)   --->   "%tmp_19 = fcmp ogt float %conv_1_out_load_6, %select_ln28_5" [pooling.cpp:28]   --->   Operation 152 'fcmp' 'tmp_19' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 153 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln28_11 = and i1 %and_ln28_10, %tmp_19" [pooling.cpp:28]   --->   Operation 153 'and' 'and_ln28_11' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 154 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_6 = select i1 %and_ln28_11, float %conv_1_out_load_6, float %select_ln28_5" [pooling.cpp:28]   --->   Operation 154 'select' 'select_ln28_6' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 155 [2/2] (2.66ns)   --->   "%conv_1_out_load_7 = load float* %conv_1_out_addr_7, align 4" [pooling.cpp:28]   --->   Operation 155 'load' 'conv_1_out_load_7' <Predicate = (!icmp_ln10)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_5 : Operation 156 [1/1] (1.00ns)   --->   "%r = add i2 1, %select_ln28_8" [pooling.cpp:13]   --->   Operation 156 'add' 'r' <Predicate = (!icmp_ln10)> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 21.0>
ST_6 : Operation 157 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([21 x i8]* @Filter_Loop_Row_Loop)"   --->   Operation 157 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 158 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) nounwind"   --->   Operation 158 'speclooptripcount' 'empty' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node add_ln35)   --->   "%zext_ln14_1 = zext i2 %select_ln28_9 to i5" [pooling.cpp:14]   --->   Operation 159 'zext' 'zext_ln14_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 160 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str1) nounwind" [pooling.cpp:14]   --->   Operation 160 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 161 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str1) nounwind" [pooling.cpp:14]   --->   Operation 161 'specregionbegin' 'tmp_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 162 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [pooling.cpp:15]   --->   Operation 162 'specpipeline' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 163 [1/1] (0.00ns) (grouped into LUT with out node add_ln35)   --->   "%tmp_23 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %select_ln28_8, i2 0)" [pooling.cpp:35]   --->   Operation 163 'bitconcatenate' 'tmp_23' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 164 [1/1] (0.00ns)   --->   "%tmp_24 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %select_ln28_8, i2 %select_ln28_9)" [pooling.cpp:35]   --->   Operation 164 'bitconcatenate' 'tmp_24' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 165 [1/1] (0.00ns)   --->   "%zext_ln35 = zext i4 %tmp_24 to i64" [pooling.cpp:35]   --->   Operation 165 'zext' 'zext_ln35' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 166 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr = getelementptr [8 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35" [pooling.cpp:35]   --->   Operation 166 'getelementptr' 'max_pool_1_out_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 167 [1/1] (0.00ns) (grouped into LUT with out node add_ln35)   --->   "%or_ln35 = or i4 %tmp_23, 2" [pooling.cpp:35]   --->   Operation 167 'or' 'or_ln35' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 168 [1/1] (0.00ns) (grouped into LUT with out node add_ln35)   --->   "%tmp_26_cast = call i5 @_ssdm_op_BitConcatenate.i5.i1.i4(i1 false, i4 %or_ln35)" [pooling.cpp:35]   --->   Operation 168 'bitconcatenate' 'tmp_26_cast' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 169 [1/1] (1.36ns) (out node of the LUT)   --->   "%add_ln35 = add i5 %zext_ln14_1, %tmp_26_cast" [pooling.cpp:35]   --->   Operation 169 'add' 'add_ln35' <Predicate = (!icmp_ln10)> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 170 [1/1] (0.00ns)   --->   "%zext_ln35_1 = zext i5 %add_ln35 to i64" [pooling.cpp:35]   --->   Operation 170 'zext' 'zext_ln35_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 171 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_1 = getelementptr [8 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_1" [pooling.cpp:35]   --->   Operation 171 'getelementptr' 'max_pool_1_out_addr_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 172 [1/2] (2.66ns)   --->   "%conv_1_out_load_3 = load float* %conv_1_out_addr_3, align 4" [pooling.cpp:28]   --->   Operation 172 'load' 'conv_1_out_load_3' <Predicate = (!icmp_ln10)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 173 [1/1] (0.00ns)   --->   "%bitcast_ln28_5 = bitcast float %conv_1_out_load_3 to i32" [pooling.cpp:28]   --->   Operation 173 'bitcast' 'bitcast_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 174 [1/1] (0.00ns)   --->   "%tmp_s = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_5, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 174 'partselect' 'tmp_s' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 175 [1/1] (0.00ns)   --->   "%trunc_ln28_5 = trunc i32 %bitcast_ln28_5 to i23" [pooling.cpp:28]   --->   Operation 175 'trunc' 'trunc_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 176 [1/1] (0.00ns)   --->   "%bitcast_ln28_6 = bitcast float %select_ln28_2 to i32" [pooling.cpp:28]   --->   Operation 176 'bitcast' 'bitcast_ln28_6' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 177 [1/1] (0.00ns)   --->   "%tmp_10 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_6, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 177 'partselect' 'tmp_10' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 178 [1/1] (0.00ns)   --->   "%trunc_ln28_6 = trunc i32 %bitcast_ln28_6 to i23" [pooling.cpp:28]   --->   Operation 178 'trunc' 'trunc_ln28_6' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 179 [1/1] (1.12ns)   --->   "%icmp_ln28_10 = icmp ne i8 %tmp_s, -1" [pooling.cpp:28]   --->   Operation 179 'icmp' 'icmp_ln28_10' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 180 [1/1] (1.48ns)   --->   "%icmp_ln28_11 = icmp eq i23 %trunc_ln28_5, 0" [pooling.cpp:28]   --->   Operation 180 'icmp' 'icmp_ln28_11' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 181 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_6)   --->   "%or_ln28_5 = or i1 %icmp_ln28_11, %icmp_ln28_10" [pooling.cpp:28]   --->   Operation 181 'or' 'or_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 182 [1/1] (1.12ns)   --->   "%icmp_ln28_12 = icmp ne i8 %tmp_10, -1" [pooling.cpp:28]   --->   Operation 182 'icmp' 'icmp_ln28_12' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 183 [1/1] (1.48ns)   --->   "%icmp_ln28_13 = icmp eq i23 %trunc_ln28_6, 0" [pooling.cpp:28]   --->   Operation 183 'icmp' 'icmp_ln28_13' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 184 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_6)   --->   "%or_ln28_6 = or i1 %icmp_ln28_13, %icmp_ln28_12" [pooling.cpp:28]   --->   Operation 184 'or' 'or_ln28_6' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 185 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_6)   --->   "%and_ln28_5 = and i1 %or_ln28_5, %or_ln28_6" [pooling.cpp:28]   --->   Operation 185 'and' 'and_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 186 [1/1] (15.7ns)   --->   "%tmp_11 = fcmp ogt float %conv_1_out_load_3, %select_ln28_2" [pooling.cpp:28]   --->   Operation 186 'fcmp' 'tmp_11' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 187 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln28_6 = and i1 %and_ln28_5, %tmp_11" [pooling.cpp:28]   --->   Operation 187 'and' 'and_ln28_6' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 188 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_3 = select i1 %and_ln28_6, float %conv_1_out_load_3, float %select_ln28_2" [pooling.cpp:28]   --->   Operation 188 'select' 'select_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 189 [1/1] (1.42ns)   --->   "store float %select_ln28_3, float* %max_pool_1_out_addr, align 4" [pooling.cpp:35]   --->   Operation 189 'store' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 190 [1/2] (2.66ns)   --->   "%conv_1_out_load_7 = load float* %conv_1_out_addr_7, align 4" [pooling.cpp:28]   --->   Operation 190 'load' 'conv_1_out_load_7' <Predicate = (!icmp_ln10)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 191 [1/1] (0.00ns)   --->   "%bitcast_ln28_12 = bitcast float %conv_1_out_load_7 to i32" [pooling.cpp:28]   --->   Operation 191 'bitcast' 'bitcast_ln28_12' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 192 [1/1] (0.00ns)   --->   "%tmp_20 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_12, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 192 'partselect' 'tmp_20' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 193 [1/1] (0.00ns)   --->   "%trunc_ln28_12 = trunc i32 %bitcast_ln28_12 to i23" [pooling.cpp:28]   --->   Operation 193 'trunc' 'trunc_ln28_12' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 194 [1/1] (0.00ns)   --->   "%bitcast_ln28_13 = bitcast float %select_ln28_6 to i32" [pooling.cpp:28]   --->   Operation 194 'bitcast' 'bitcast_ln28_13' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 195 [1/1] (0.00ns)   --->   "%tmp_21 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_13, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 195 'partselect' 'tmp_21' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 196 [1/1] (0.00ns)   --->   "%trunc_ln28_13 = trunc i32 %bitcast_ln28_13 to i23" [pooling.cpp:28]   --->   Operation 196 'trunc' 'trunc_ln28_13' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 197 [1/1] (1.12ns)   --->   "%icmp_ln28_24 = icmp ne i8 %tmp_20, -1" [pooling.cpp:28]   --->   Operation 197 'icmp' 'icmp_ln28_24' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 198 [1/1] (1.48ns)   --->   "%icmp_ln28_25 = icmp eq i23 %trunc_ln28_12, 0" [pooling.cpp:28]   --->   Operation 198 'icmp' 'icmp_ln28_25' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 199 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_13)   --->   "%or_ln28_12 = or i1 %icmp_ln28_25, %icmp_ln28_24" [pooling.cpp:28]   --->   Operation 199 'or' 'or_ln28_12' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 200 [1/1] (1.12ns)   --->   "%icmp_ln28_26 = icmp ne i8 %tmp_21, -1" [pooling.cpp:28]   --->   Operation 200 'icmp' 'icmp_ln28_26' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 201 [1/1] (1.48ns)   --->   "%icmp_ln28_27 = icmp eq i23 %trunc_ln28_13, 0" [pooling.cpp:28]   --->   Operation 201 'icmp' 'icmp_ln28_27' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 202 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_13)   --->   "%or_ln28_13 = or i1 %icmp_ln28_27, %icmp_ln28_26" [pooling.cpp:28]   --->   Operation 202 'or' 'or_ln28_13' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 203 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_13)   --->   "%and_ln28_12 = and i1 %or_ln28_12, %or_ln28_13" [pooling.cpp:28]   --->   Operation 203 'and' 'and_ln28_12' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 204 [1/1] (15.7ns)   --->   "%tmp_22 = fcmp ogt float %conv_1_out_load_7, %select_ln28_6" [pooling.cpp:28]   --->   Operation 204 'fcmp' 'tmp_22' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 205 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln28_13 = and i1 %and_ln28_12, %tmp_22" [pooling.cpp:28]   --->   Operation 205 'and' 'and_ln28_13' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 206 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_7 = select i1 %and_ln28_13, float %conv_1_out_load_7, float %select_ln28_6" [pooling.cpp:28]   --->   Operation 206 'select' 'select_ln28_7' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 207 [1/1] (1.42ns)   --->   "store float %select_ln28_7, float* %max_pool_1_out_addr_1, align 4" [pooling.cpp:35]   --->   Operation 207 'store' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 208 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str1, i32 %tmp_1) nounwind" [pooling.cpp:37]   --->   Operation 208 'specregionend' 'empty_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 209 [1/1] (0.00ns)   --->   "br label %1"   --->   Operation 209 'br' <Predicate = (!icmp_ln10)> <Delay = 0.00>

State 7 <SV = 2> <Delay = 0.00>
ST_7 : Operation 210 [1/1] (0.00ns)   --->   "ret void" [pooling.cpp:39]   --->   Operation 210 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 40ns, clock uncertainty: 5ns.

 <State 1>: 1.18ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten', pooling.cpp:10) with incoming values : ('add_ln10', pooling.cpp:10) [8]  (1.18 ns)

 <State 2>: 5.68ns
The critical path consists of the following:
	'phi' operation ('f_0', pooling.cpp:28) with incoming values : ('select_ln28_9', pooling.cpp:28) [9]  (0 ns)
	'add' operation ('f', pooling.cpp:10) [15]  (1.01 ns)
	'select' operation ('select_ln28_9', pooling.cpp:28) [20]  (0.625 ns)
	'add' operation ('add_ln28', pooling.cpp:28) [43]  (1.39 ns)
	'getelementptr' operation ('conv_1_out_addr_1', pooling.cpp:28) [45]  (0 ns)
	'load' operation ('conv_1_out_load_1', pooling.cpp:28) on array 'conv_1_out' [64]  (2.66 ns)

 <State 3>: 34.8ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load', pooling.cpp:28) on array 'conv_1_out' [54]  (2.66 ns)
	'fcmp' operation ('tmp_3', pooling.cpp:28) [61]  (15.8 ns)
	'and' operation ('and_ln28', pooling.cpp:28) [62]  (0 ns)
	'select' operation ('select_ln28', pooling.cpp:28) [63]  (0.616 ns)
	'fcmp' operation ('tmp_6', pooling.cpp:28) [78]  (15.8 ns)

 <State 4>: 34.8ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_4', pooling.cpp:28) on array 'conv_1_out' [134]  (2.66 ns)
	'fcmp' operation ('tmp_13', pooling.cpp:28) [141]  (15.8 ns)
	'and' operation ('and_ln28_7', pooling.cpp:28) [142]  (0 ns)
	'select' operation ('select_ln28_4', pooling.cpp:28) [143]  (0.616 ns)
	'fcmp' operation ('tmp_16', pooling.cpp:28) [158]  (15.8 ns)

 <State 5>: 19.7ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln28_17', pooling.cpp:28) [152]  (1.49 ns)
	'or' operation ('or_ln28_8', pooling.cpp:28) [153]  (0 ns)
	'and' operation ('and_ln28_8', pooling.cpp:28) [157]  (0 ns)
	'and' operation ('and_ln28_9', pooling.cpp:28) [159]  (0.616 ns)
	'select' operation ('select_ln28_5', pooling.cpp:28) [160]  (0.613 ns)
	'fcmp' operation ('tmp_19', pooling.cpp:28) [175]  (15.8 ns)
	'and' operation ('and_ln28_11', pooling.cpp:28) [176]  (0.616 ns)
	'select' operation ('select_ln28_6', pooling.cpp:28) [177]  (0.613 ns)

 <State 6>: 21.1ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_3', pooling.cpp:28) on array 'conv_1_out' [116]  (2.66 ns)
	'fcmp' operation ('tmp_11', pooling.cpp:28) [130]  (15.8 ns)
	'and' operation ('and_ln28_6', pooling.cpp:28) [131]  (0.616 ns)
	'select' operation ('select_ln28_3', pooling.cpp:28) [132]  (0.613 ns)
	'store' operation ('store_ln35', pooling.cpp:35) of variable 'select_ln28_3', pooling.cpp:28 on array 'max_pool_1_out' [133]  (1.43 ns)

 <State 7>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
