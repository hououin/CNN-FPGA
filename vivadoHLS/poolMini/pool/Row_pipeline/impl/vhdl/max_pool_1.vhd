-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity max_pool_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    conv_1_out_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_1_out_ce0 : OUT STD_LOGIC;
    conv_1_out_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_1_out_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_1_out_ce1 : OUT STD_LOGIC;
    conv_1_out_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    max_pool_1_out_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    max_pool_1_out_ce0 : OUT STD_LOGIC;
    max_pool_1_out_we0 : OUT STD_LOGIC;
    max_pool_1_out_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    max_pool_1_out_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    max_pool_1_out_ce1 : OUT STD_LOGIC;
    max_pool_1_out_we1 : OUT STD_LOGIC;
    max_pool_1_out_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of max_pool_1 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "max_pool_1,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx485t-ffg1157-1,HLS_INPUT_CLOCK=40.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=34.830000,HLS_SYN_LAT=18,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=226,HLS_SYN_LUT=1220,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_800000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000100000000000000000000000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv59_0 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_186 : STD_LOGIC_VECTOR (2 downto 0);
    signal f_0_reg_197 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_0_reg_208 : STD_LOGIC_VECTOR (1 downto 0);
    signal reg_230 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln10_reg_1158 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal icmp_ln10_fu_234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln10_fu_240_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln10_reg_1162 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln28_8_fu_258_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln28_8_reg_1167 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln28_9_fu_266_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln28_9_reg_1175 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln14_fu_274_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln14_reg_1183 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_25_fu_282_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_25_reg_1190 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_26_fu_290_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_26_reg_1195 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln28_fu_409_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_reg_1220 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1226 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln28_1_fu_505_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_1_reg_1231 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln25_fu_512_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln25_reg_1238 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln28_4_fu_589_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_4_reg_1253 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_reg_1259 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal select_ln28_2_fu_736_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_2_reg_1274 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_6_fu_917_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_6_reg_1281 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_fu_925_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_reg_1288 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_phi_mux_indvar_flatten_phi_fu_190_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_f_0_phi_fu_201_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_r_0_phi_fu_212_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln28_fu_300_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln28_1_fu_325_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_fu_335_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln28_3_fu_362_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln28_2_fu_527_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal tmp_30_fu_538_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln28_4_fu_624_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln28_5_fu_648_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln35_fu_946_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln35_1_fu_971_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_219_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_225_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_5_fu_825_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln13_fu_252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_fu_246_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln25_fu_278_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_14_fu_305_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_29_cast_fu_311_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln28_fu_319_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln28_15_fu_330_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln28_16_fu_344_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_31_cast_fu_349_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln28_1_fu_357_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal bitcast_ln28_fu_367_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_371_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_fu_381_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_1_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_fu_385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_fu_397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_1_fu_423_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_2_fu_441_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_427_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_1_fu_437_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_3_fu_464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_2_fu_458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_444_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_2_fu_454_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_5_fu_482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_4_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_1_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_2_fu_488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_1_fu_494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_2_fu_500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln25_fu_418_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_29_fu_518_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln28_18_fu_532_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal bitcast_ln28_7_fu_547_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_551_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_7_fu_561_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_15_fu_571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_14_fu_565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_7_fu_577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_7_fu_583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_598_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln28_17_fu_605_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_34_cast_fu_611_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln28_2_fu_619_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln28_19_fu_629_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_36_cast_fu_635_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln28_3_fu_643_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal bitcast_ln28_3_fu_653_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_4_fu_671_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_657_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_3_fu_667_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_7_fu_694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_6_fu_688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_674_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_4_fu_684_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_9_fu_712_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_8_fu_706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_3_fu_700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_4_fu_718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_3_fu_724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_4_fu_730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_8_fu_743_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_9_fu_761_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_747_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_8_fu_757_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_17_fu_784_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_16_fu_778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_764_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_9_fu_774_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_19_fu_802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_18_fu_796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_8_fu_790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_9_fu_808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_8_fu_814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_9_fu_820_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_10_fu_833_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_11_fu_851_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_837_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_10_fu_847_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_21_fu_875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_20_fu_869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_855_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_11_fu_865_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_23_fu_893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_22_fu_887_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_10_fu_881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_11_fu_899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_10_fu_905_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_11_fu_911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_940_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_23_fu_933_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln35_fu_951_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln14_1_fu_930_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_26_cast_fu_957_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln35_fu_965_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal bitcast_ln28_5_fu_976_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_6_fu_994_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_980_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_5_fu_990_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_11_fu_1017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_10_fu_1011_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_997_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_6_fu_1007_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_13_fu_1035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_12_fu_1029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_5_fu_1023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_6_fu_1041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_5_fu_1047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_6_fu_1053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_12_fu_1067_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_13_fu_1085_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_1071_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_12_fu_1081_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_25_fu_1108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_24_fu_1102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_1088_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_13_fu_1098_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_27_fu_1126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_26_fu_1120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_12_fu_1114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_13_fu_1132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_12_fu_1138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_13_fu_1144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component max_pool_1_fcmp_3bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    max_pool_1_fcmp_3bkb_U1 : component max_pool_1_fcmp_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => conv_1_out_q0,
        din1 => grp_fu_219_p1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_219_p2);

    max_pool_1_fcmp_3bkb_U2 : component max_pool_1_fcmp_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => conv_1_out_q1,
        din1 => grp_fu_225_p1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_225_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    f_0_reg_197_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_reg_1158 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                f_0_reg_197 <= select_ln28_9_reg_1175;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                f_0_reg_197 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_reg_1158 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                indvar_flatten_reg_186 <= add_ln10_reg_1162;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_186 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    r_0_reg_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_reg_1158 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                r_0_reg_208 <= r_reg_1288;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                r_0_reg_208 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                add_ln10_reg_1162 <= add_ln10_fu_240_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln10_reg_1158 <= icmp_ln10_fu_234_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln10_reg_1158 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                    or_ln25_reg_1238(1) <= or_ln25_fu_512_p2(1);
                select_ln28_1_reg_1231 <= select_ln28_1_fu_505_p3;
                select_ln28_4_reg_1253 <= select_ln28_4_fu_589_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_reg_1158 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                r_reg_1288 <= r_fu_925_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln10_reg_1158 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((icmp_ln10_reg_1158 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_230 <= conv_1_out_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_reg_1158 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                select_ln28_2_reg_1274 <= select_ln28_2_fu_736_p3;
                select_ln28_6_reg_1281 <= select_ln28_6_fu_917_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_fu_234_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln28_8_reg_1167 <= select_ln28_8_fu_258_p3;
                    tmp_25_reg_1190(4) <= tmp_25_fu_282_p3(4);
                    tmp_26_reg_1195(1 downto 0) <= tmp_26_fu_290_p4(1 downto 0);    tmp_26_reg_1195(4) <= tmp_26_fu_290_p4(4);
                    zext_ln14_reg_1183(1 downto 0) <= zext_ln14_fu_274_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_fu_234_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                select_ln28_9_reg_1175 <= select_ln28_9_fu_266_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_reg_1158 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                select_ln28_reg_1220 <= select_ln28_fu_409_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln10_reg_1158 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                tmp_16_reg_1259 <= grp_fu_225_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_reg_1158 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_6_reg_1226 <= grp_fu_225_p2;
            end if;
        end if;
    end process;
    zext_ln14_reg_1183(6 downto 2) <= "00000";
    tmp_25_reg_1190(3 downto 0) <= "0000";
    tmp_26_reg_1195(3 downto 2) <= "00";
    or_ln25_reg_1238(0) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, icmp_ln10_fu_234_p2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln10_fu_234_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((icmp_ln10_fu_234_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_ln10_fu_240_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_190_p4) + unsigned(ap_const_lv3_1));
    add_ln28_1_fu_357_p2 <= std_logic_vector(unsigned(zext_ln14_reg_1183) + unsigned(tmp_31_cast_fu_349_p3));
    add_ln28_2_fu_619_p2 <= std_logic_vector(unsigned(zext_ln14_reg_1183) + unsigned(tmp_34_cast_fu_611_p3));
    add_ln28_3_fu_643_p2 <= std_logic_vector(unsigned(zext_ln14_reg_1183) + unsigned(tmp_36_cast_fu_635_p3));
    add_ln28_fu_319_p2 <= std_logic_vector(unsigned(zext_ln14_fu_274_p1) + unsigned(tmp_29_cast_fu_311_p3));
    add_ln35_fu_965_p2 <= std_logic_vector(unsigned(zext_ln14_1_fu_930_p1) + unsigned(tmp_26_cast_fu_957_p3));
    and_ln28_10_fu_905_p2 <= (or_ln28_11_fu_899_p2 and or_ln28_10_fu_881_p2);
    and_ln28_11_fu_911_p2 <= (grp_fu_225_p2 and and_ln28_10_fu_905_p2);
    and_ln28_12_fu_1138_p2 <= (or_ln28_13_fu_1132_p2 and or_ln28_12_fu_1114_p2);
    and_ln28_13_fu_1144_p2 <= (grp_fu_225_p2 and and_ln28_12_fu_1138_p2);
    and_ln28_1_fu_494_p2 <= (or_ln28_2_fu_488_p2 and or_ln28_1_fu_470_p2);
    and_ln28_2_fu_500_p2 <= (tmp_6_reg_1226 and and_ln28_1_fu_494_p2);
    and_ln28_3_fu_724_p2 <= (or_ln28_4_fu_718_p2 and or_ln28_3_fu_700_p2);
    and_ln28_4_fu_730_p2 <= (grp_fu_219_p2 and and_ln28_3_fu_724_p2);
    and_ln28_5_fu_1047_p2 <= (or_ln28_6_fu_1041_p2 and or_ln28_5_fu_1023_p2);
    and_ln28_6_fu_1053_p2 <= (grp_fu_219_p2 and and_ln28_5_fu_1047_p2);
    and_ln28_7_fu_583_p2 <= (or_ln28_7_fu_577_p2 and grp_fu_219_p2);
    and_ln28_8_fu_814_p2 <= (or_ln28_9_fu_808_p2 and or_ln28_8_fu_790_p2);
    and_ln28_9_fu_820_p2 <= (tmp_16_reg_1259 and and_ln28_8_fu_814_p2);
    and_ln28_fu_403_p2 <= (or_ln28_fu_397_p2 and grp_fu_219_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln10_fu_234_p2)
    begin
        if ((icmp_ln10_fu_234_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_f_0_phi_fu_201_p4_assign_proc : process(f_0_reg_197, icmp_ln10_reg_1158, ap_CS_fsm_pp0_stage0, select_ln28_9_reg_1175, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln10_reg_1158 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_f_0_phi_fu_201_p4 <= select_ln28_9_reg_1175;
        else 
            ap_phi_mux_f_0_phi_fu_201_p4 <= f_0_reg_197;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_190_p4_assign_proc : process(indvar_flatten_reg_186, icmp_ln10_reg_1158, ap_CS_fsm_pp0_stage0, add_ln10_reg_1162, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln10_reg_1158 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_190_p4 <= add_ln10_reg_1162;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_190_p4 <= indvar_flatten_reg_186;
        end if; 
    end process;


    ap_phi_mux_r_0_phi_fu_212_p4_assign_proc : process(r_0_reg_208, icmp_ln10_reg_1158, ap_CS_fsm_pp0_stage0, r_reg_1288, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln10_reg_1158 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_r_0_phi_fu_212_p4 <= r_reg_1288;
        else 
            ap_phi_mux_r_0_phi_fu_212_p4 <= r_0_reg_208;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln28_10_fu_833_p1 <= conv_1_out_q1;
    bitcast_ln28_11_fu_851_p1 <= select_ln28_5_fu_825_p3;
    bitcast_ln28_12_fu_1067_p1 <= conv_1_out_q1;
    bitcast_ln28_13_fu_1085_p1 <= select_ln28_6_reg_1281;
    bitcast_ln28_1_fu_423_p1 <= reg_230;
    bitcast_ln28_2_fu_441_p1 <= select_ln28_reg_1220;
    bitcast_ln28_3_fu_653_p1 <= conv_1_out_q0;
    bitcast_ln28_4_fu_671_p1 <= select_ln28_1_reg_1231;
    bitcast_ln28_5_fu_976_p1 <= conv_1_out_q0;
    bitcast_ln28_6_fu_994_p1 <= select_ln28_2_reg_1274;
    bitcast_ln28_7_fu_547_p1 <= conv_1_out_q0;
    bitcast_ln28_8_fu_743_p1 <= reg_230;
    bitcast_ln28_9_fu_761_p1 <= select_ln28_4_reg_1253;
    bitcast_ln28_fu_367_p1 <= conv_1_out_q0;

    conv_1_out_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, zext_ln28_fu_300_p1, tmp_27_fu_335_p3, ap_block_pp0_stage1, zext_ln28_2_fu_527_p1, ap_block_pp0_stage2, zext_ln28_4_fu_624_p1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                conv_1_out_address0 <= zext_ln28_4_fu_624_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                conv_1_out_address0 <= zext_ln28_2_fu_527_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_out_address0 <= tmp_27_fu_335_p3(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                conv_1_out_address0 <= zext_ln28_fu_300_p1(5 - 1 downto 0);
            else 
                conv_1_out_address0 <= "XXXXX";
            end if;
        else 
            conv_1_out_address0 <= "XXXXX";
        end if; 
    end process;


    conv_1_out_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, zext_ln28_1_fu_325_p1, ap_block_pp0_stage1, zext_ln28_3_fu_362_p1, ap_block_pp0_stage2, tmp_30_fu_538_p3, ap_block_pp0_stage3, zext_ln28_5_fu_648_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                conv_1_out_address1 <= zext_ln28_5_fu_648_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                conv_1_out_address1 <= tmp_30_fu_538_p3(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_out_address1 <= zext_ln28_3_fu_362_p1(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                conv_1_out_address1 <= zext_ln28_1_fu_325_p1(5 - 1 downto 0);
            else 
                conv_1_out_address1 <= "XXXXX";
            end if;
        else 
            conv_1_out_address1 <= "XXXXX";
        end if; 
    end process;


    conv_1_out_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            conv_1_out_ce0 <= ap_const_logic_1;
        else 
            conv_1_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            conv_1_out_ce1 <= ap_const_logic_1;
        else 
            conv_1_out_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    f_fu_246_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(ap_phi_mux_f_0_phi_fu_201_p4));

    grp_fu_219_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, select_ln28_1_reg_1231, ap_CS_fsm_pp0_stage3, select_ln28_2_reg_1274, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_219_p1 <= select_ln28_2_reg_1274;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_219_p1 <= select_ln28_1_reg_1231;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_219_p1 <= ap_const_lv32_800000;
        else 
            grp_fu_219_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_225_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, select_ln28_fu_409_p3, select_ln28_4_fu_589_p3, ap_CS_fsm_pp0_stage3, select_ln28_6_reg_1281, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, select_ln28_5_fu_825_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_225_p1 <= select_ln28_6_reg_1281;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_225_p1 <= select_ln28_5_fu_825_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_225_p1 <= select_ln28_4_fu_589_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_225_p1 <= select_ln28_fu_409_p3;
        else 
            grp_fu_225_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln10_fu_234_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_190_p4 = ap_const_lv3_4) else "0";
    icmp_ln13_fu_252_p2 <= "1" when (ap_phi_mux_r_0_phi_fu_212_p4 = ap_const_lv2_2) else "0";
    icmp_ln28_10_fu_1011_p2 <= "0" when (tmp_s_fu_980_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_11_fu_1017_p2 <= "1" when (trunc_ln28_5_fu_990_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_12_fu_1029_p2 <= "0" when (tmp_10_fu_997_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_13_fu_1035_p2 <= "1" when (trunc_ln28_6_fu_1007_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_14_fu_565_p2 <= "0" when (tmp_12_fu_551_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_15_fu_571_p2 <= "1" when (trunc_ln28_7_fu_561_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_16_fu_778_p2 <= "0" when (tmp_14_fu_747_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_17_fu_784_p2 <= "1" when (trunc_ln28_8_fu_757_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_18_fu_796_p2 <= "0" when (tmp_15_fu_764_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_19_fu_802_p2 <= "1" when (trunc_ln28_9_fu_774_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_1_fu_391_p2 <= "1" when (trunc_ln28_fu_381_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_20_fu_869_p2 <= "0" when (tmp_17_fu_837_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_21_fu_875_p2 <= "1" when (trunc_ln28_10_fu_847_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_22_fu_887_p2 <= "0" when (tmp_18_fu_855_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_23_fu_893_p2 <= "1" when (trunc_ln28_11_fu_865_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_24_fu_1102_p2 <= "0" when (tmp_20_fu_1071_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_25_fu_1108_p2 <= "1" when (trunc_ln28_12_fu_1081_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_26_fu_1120_p2 <= "0" when (tmp_21_fu_1088_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_27_fu_1126_p2 <= "1" when (trunc_ln28_13_fu_1098_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_2_fu_458_p2 <= "0" when (tmp_4_fu_427_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_3_fu_464_p2 <= "1" when (trunc_ln28_1_fu_437_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_4_fu_476_p2 <= "0" when (tmp_5_fu_444_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_5_fu_482_p2 <= "1" when (trunc_ln28_2_fu_454_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_6_fu_688_p2 <= "0" when (tmp_7_fu_657_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_7_fu_694_p2 <= "1" when (trunc_ln28_3_fu_667_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_8_fu_706_p2 <= "0" when (tmp_8_fu_674_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_9_fu_712_p2 <= "1" when (trunc_ln28_4_fu_684_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_fu_385_p2 <= "0" when (tmp_2_fu_371_p4 = ap_const_lv8_FF) else "1";
    max_pool_1_out_address0 <= zext_ln35_fu_946_p1(3 - 1 downto 0);
    max_pool_1_out_address1 <= zext_ln35_1_fu_971_p1(3 - 1 downto 0);

    max_pool_1_out_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            max_pool_1_out_ce0 <= ap_const_logic_1;
        else 
            max_pool_1_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            max_pool_1_out_ce1 <= ap_const_logic_1;
        else 
            max_pool_1_out_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_1_out_d0 <= 
        conv_1_out_q0 when (and_ln28_6_fu_1053_p2(0) = '1') else 
        select_ln28_2_reg_1274;
    max_pool_1_out_d1 <= 
        conv_1_out_q1 when (and_ln28_13_fu_1144_p2(0) = '1') else 
        select_ln28_6_reg_1281;

    max_pool_1_out_we0_assign_proc : process(icmp_ln10_reg_1158, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_reg_1158 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            max_pool_1_out_we0 <= ap_const_logic_1;
        else 
            max_pool_1_out_we0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_we1_assign_proc : process(icmp_ln10_reg_1158, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_reg_1158 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            max_pool_1_out_we1 <= ap_const_logic_1;
        else 
            max_pool_1_out_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln25_fu_512_p2 <= (shl_ln25_fu_418_p2 or ap_const_lv2_1);
    or_ln28_10_fu_881_p2 <= (icmp_ln28_21_fu_875_p2 or icmp_ln28_20_fu_869_p2);
    or_ln28_11_fu_899_p2 <= (icmp_ln28_23_fu_893_p2 or icmp_ln28_22_fu_887_p2);
    or_ln28_12_fu_1114_p2 <= (icmp_ln28_25_fu_1108_p2 or icmp_ln28_24_fu_1102_p2);
    or_ln28_13_fu_1132_p2 <= (icmp_ln28_27_fu_1126_p2 or icmp_ln28_26_fu_1120_p2);
    or_ln28_14_fu_305_p2 <= (tmp_25_fu_282_p3 or ap_const_lv5_2);
    or_ln28_15_fu_330_p2 <= (tmp_26_reg_1195 or ap_const_lv5_4);
    or_ln28_16_fu_344_p2 <= (tmp_25_reg_1190 or ap_const_lv5_6);
    or_ln28_17_fu_605_p2 <= (tmp_28_fu_598_p3 or ap_const_lv5_2);
    or_ln28_18_fu_532_p2 <= (tmp_29_fu_518_p4 or ap_const_lv5_4);
    or_ln28_19_fu_629_p2 <= (tmp_28_fu_598_p3 or ap_const_lv5_6);
    or_ln28_1_fu_470_p2 <= (icmp_ln28_3_fu_464_p2 or icmp_ln28_2_fu_458_p2);
    or_ln28_2_fu_488_p2 <= (icmp_ln28_5_fu_482_p2 or icmp_ln28_4_fu_476_p2);
    or_ln28_3_fu_700_p2 <= (icmp_ln28_7_fu_694_p2 or icmp_ln28_6_fu_688_p2);
    or_ln28_4_fu_718_p2 <= (icmp_ln28_9_fu_712_p2 or icmp_ln28_8_fu_706_p2);
    or_ln28_5_fu_1023_p2 <= (icmp_ln28_11_fu_1017_p2 or icmp_ln28_10_fu_1011_p2);
    or_ln28_6_fu_1041_p2 <= (icmp_ln28_13_fu_1035_p2 or icmp_ln28_12_fu_1029_p2);
    or_ln28_7_fu_577_p2 <= (icmp_ln28_15_fu_571_p2 or icmp_ln28_14_fu_565_p2);
    or_ln28_8_fu_790_p2 <= (icmp_ln28_17_fu_784_p2 or icmp_ln28_16_fu_778_p2);
    or_ln28_9_fu_808_p2 <= (icmp_ln28_19_fu_802_p2 or icmp_ln28_18_fu_796_p2);
    or_ln28_fu_397_p2 <= (icmp_ln28_fu_385_p2 or icmp_ln28_1_fu_391_p2);
    or_ln35_fu_951_p2 <= (tmp_23_fu_933_p3 or ap_const_lv4_2);
    r_fu_925_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(select_ln28_8_reg_1167));
    select_ln28_1_fu_505_p3 <= 
        reg_230 when (and_ln28_2_fu_500_p2(0) = '1') else 
        select_ln28_reg_1220;
    select_ln28_2_fu_736_p3 <= 
        conv_1_out_q0 when (and_ln28_4_fu_730_p2(0) = '1') else 
        select_ln28_1_reg_1231;
    select_ln28_4_fu_589_p3 <= 
        conv_1_out_q0 when (and_ln28_7_fu_583_p2(0) = '1') else 
        ap_const_lv32_800000;
    select_ln28_5_fu_825_p3 <= 
        reg_230 when (and_ln28_9_fu_820_p2(0) = '1') else 
        select_ln28_4_reg_1253;
    select_ln28_6_fu_917_p3 <= 
        conv_1_out_q1 when (and_ln28_11_fu_911_p2(0) = '1') else 
        select_ln28_5_fu_825_p3;
    select_ln28_8_fu_258_p3 <= 
        ap_const_lv2_0 when (icmp_ln13_fu_252_p2(0) = '1') else 
        ap_phi_mux_r_0_phi_fu_212_p4;
    select_ln28_9_fu_266_p3 <= 
        f_fu_246_p2 when (icmp_ln13_fu_252_p2(0) = '1') else 
        ap_phi_mux_f_0_phi_fu_201_p4;
    select_ln28_fu_409_p3 <= 
        conv_1_out_q0 when (and_ln28_fu_403_p2(0) = '1') else 
        ap_const_lv32_800000;
    shl_ln25_fu_418_p2 <= std_logic_vector(shift_left(unsigned(select_ln28_8_reg_1167),to_integer(unsigned('0' & ap_const_lv2_1(2-1 downto 0)))));
    tmp_10_fu_997_p4 <= bitcast_ln28_6_fu_994_p1(30 downto 23);
    tmp_12_fu_551_p4 <= bitcast_ln28_7_fu_547_p1(30 downto 23);
    tmp_14_fu_747_p4 <= bitcast_ln28_8_fu_743_p1(30 downto 23);
    tmp_15_fu_764_p4 <= bitcast_ln28_9_fu_761_p1(30 downto 23);
    tmp_17_fu_837_p4 <= bitcast_ln28_10_fu_833_p1(30 downto 23);
    tmp_18_fu_855_p4 <= bitcast_ln28_11_fu_851_p1(30 downto 23);
    tmp_20_fu_1071_p4 <= bitcast_ln28_12_fu_1067_p1(30 downto 23);
    tmp_21_fu_1088_p4 <= bitcast_ln28_13_fu_1085_p1(30 downto 23);
    tmp_23_fu_933_p3 <= (select_ln28_8_reg_1167 & ap_const_lv2_0);
    tmp_24_fu_940_p3 <= (select_ln28_8_reg_1167 & select_ln28_9_reg_1175);
    tmp_25_fu_282_p3 <= (trunc_ln25_fu_278_p1 & ap_const_lv4_0);
    tmp_26_cast_fu_957_p3 <= (ap_const_lv1_0 & or_ln35_fu_951_p2);
    tmp_26_fu_290_p4 <= ((trunc_ln25_fu_278_p1 & ap_const_lv2_0) & select_ln28_9_fu_266_p3);
    tmp_27_fu_335_p3 <= (ap_const_lv59_0 & or_ln28_15_fu_330_p2);
    tmp_28_fu_598_p3 <= (or_ln25_reg_1238 & ap_const_lv3_0);
    tmp_29_cast_fu_311_p3 <= (ap_const_lv2_0 & or_ln28_14_fu_305_p2);
    tmp_29_fu_518_p4 <= ((or_ln25_fu_512_p2 & ap_const_lv1_0) & select_ln28_9_reg_1175);
    tmp_2_fu_371_p4 <= bitcast_ln28_fu_367_p1(30 downto 23);
    tmp_30_fu_538_p3 <= (ap_const_lv59_0 & or_ln28_18_fu_532_p2);
    tmp_31_cast_fu_349_p3 <= (ap_const_lv2_0 & or_ln28_16_fu_344_p2);
    tmp_34_cast_fu_611_p3 <= (ap_const_lv2_0 & or_ln28_17_fu_605_p2);
    tmp_36_cast_fu_635_p3 <= (ap_const_lv2_0 & or_ln28_19_fu_629_p2);
    tmp_4_fu_427_p4 <= bitcast_ln28_1_fu_423_p1(30 downto 23);
    tmp_5_fu_444_p4 <= bitcast_ln28_2_fu_441_p1(30 downto 23);
    tmp_7_fu_657_p4 <= bitcast_ln28_3_fu_653_p1(30 downto 23);
    tmp_8_fu_674_p4 <= bitcast_ln28_4_fu_671_p1(30 downto 23);
    tmp_s_fu_980_p4 <= bitcast_ln28_5_fu_976_p1(30 downto 23);
    trunc_ln25_fu_278_p1 <= select_ln28_8_fu_258_p3(1 - 1 downto 0);
    trunc_ln28_10_fu_847_p1 <= bitcast_ln28_10_fu_833_p1(23 - 1 downto 0);
    trunc_ln28_11_fu_865_p1 <= bitcast_ln28_11_fu_851_p1(23 - 1 downto 0);
    trunc_ln28_12_fu_1081_p1 <= bitcast_ln28_12_fu_1067_p1(23 - 1 downto 0);
    trunc_ln28_13_fu_1098_p1 <= bitcast_ln28_13_fu_1085_p1(23 - 1 downto 0);
    trunc_ln28_1_fu_437_p1 <= bitcast_ln28_1_fu_423_p1(23 - 1 downto 0);
    trunc_ln28_2_fu_454_p1 <= bitcast_ln28_2_fu_441_p1(23 - 1 downto 0);
    trunc_ln28_3_fu_667_p1 <= bitcast_ln28_3_fu_653_p1(23 - 1 downto 0);
    trunc_ln28_4_fu_684_p1 <= bitcast_ln28_4_fu_671_p1(23 - 1 downto 0);
    trunc_ln28_5_fu_990_p1 <= bitcast_ln28_5_fu_976_p1(23 - 1 downto 0);
    trunc_ln28_6_fu_1007_p1 <= bitcast_ln28_6_fu_994_p1(23 - 1 downto 0);
    trunc_ln28_7_fu_561_p1 <= bitcast_ln28_7_fu_547_p1(23 - 1 downto 0);
    trunc_ln28_8_fu_757_p1 <= bitcast_ln28_8_fu_743_p1(23 - 1 downto 0);
    trunc_ln28_9_fu_774_p1 <= bitcast_ln28_9_fu_761_p1(23 - 1 downto 0);
    trunc_ln28_fu_381_p1 <= bitcast_ln28_fu_367_p1(23 - 1 downto 0);
    zext_ln14_1_fu_930_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln28_9_reg_1175),5));
    zext_ln14_fu_274_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln28_9_fu_266_p3),7));
    zext_ln28_1_fu_325_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln28_fu_319_p2),64));
    zext_ln28_2_fu_527_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_518_p4),64));
    zext_ln28_3_fu_362_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln28_1_fu_357_p2),64));
    zext_ln28_4_fu_624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln28_2_fu_619_p2),64));
    zext_ln28_5_fu_648_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln28_3_fu_643_p2),64));
    zext_ln28_fu_300_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_26_fu_290_p4),64));
    zext_ln35_1_fu_971_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln35_fu_965_p2),64));
    zext_ln35_fu_946_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_fu_940_p3),64));
end behav;
