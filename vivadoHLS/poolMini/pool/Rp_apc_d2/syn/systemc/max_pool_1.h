// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "max_pool_1_fcmp_3bkb.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 38
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<3> > conv_1_out_0_address0;
    sc_out< sc_logic > conv_1_out_0_ce0;
    sc_in< sc_lv<32> > conv_1_out_0_q0;
    sc_out< sc_lv<3> > conv_1_out_0_address1;
    sc_out< sc_logic > conv_1_out_0_ce1;
    sc_in< sc_lv<32> > conv_1_out_0_q1;
    sc_out< sc_lv<3> > conv_1_out_1_address0;
    sc_out< sc_logic > conv_1_out_1_ce0;
    sc_in< sc_lv<32> > conv_1_out_1_q0;
    sc_out< sc_lv<3> > conv_1_out_1_address1;
    sc_out< sc_logic > conv_1_out_1_ce1;
    sc_in< sc_lv<32> > conv_1_out_1_q1;
    sc_out< sc_lv<3> > conv_1_out_2_address0;
    sc_out< sc_logic > conv_1_out_2_ce0;
    sc_in< sc_lv<32> > conv_1_out_2_q0;
    sc_out< sc_lv<3> > conv_1_out_2_address1;
    sc_out< sc_logic > conv_1_out_2_ce1;
    sc_in< sc_lv<32> > conv_1_out_2_q1;
    sc_out< sc_lv<3> > conv_1_out_3_address0;
    sc_out< sc_logic > conv_1_out_3_ce0;
    sc_in< sc_lv<32> > conv_1_out_3_q0;
    sc_out< sc_lv<3> > conv_1_out_3_address1;
    sc_out< sc_logic > conv_1_out_3_ce1;
    sc_in< sc_lv<32> > conv_1_out_3_q1;
    sc_out< sc_lv<2> > max_pool_1_out_0_address0;
    sc_out< sc_logic > max_pool_1_out_0_ce0;
    sc_out< sc_logic > max_pool_1_out_0_we0;
    sc_out< sc_lv<32> > max_pool_1_out_0_d0;
    sc_out< sc_lv<2> > max_pool_1_out_1_address0;
    sc_out< sc_logic > max_pool_1_out_1_ce0;
    sc_out< sc_logic > max_pool_1_out_1_we0;
    sc_out< sc_lv<32> > max_pool_1_out_1_d0;
    sc_signal< sc_lv<32> > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U1;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U2;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U3;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U4;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U5;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U6;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U7;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U8;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > indvar_flatten_reg_200;
    sc_signal< sc_lv<2> > f_0_reg_211;
    sc_signal< sc_lv<2> > r_0_reg_222;
    sc_signal< sc_lv<1> > icmp_ln10_fu_275_p2;
    sc_signal< sc_lv<1> > icmp_ln10_reg_1043;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln10_reg_1043_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln10_reg_1043_pp0_iter2_reg;
    sc_signal< sc_lv<3> > add_ln10_fu_281_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<2> > select_ln28_8_fu_299_p3;
    sc_signal< sc_lv<2> > select_ln28_8_reg_1052;
    sc_signal< sc_lv<2> > select_ln28_9_fu_307_p3;
    sc_signal< sc_lv<2> > select_ln28_9_reg_1058;
    sc_signal< sc_lv<64> > zext_ln28_fu_327_p1;
    sc_signal< sc_lv<64> > zext_ln28_reg_1064;
    sc_signal< sc_lv<2> > r_fu_333_p2;
    sc_signal< sc_lv<4> > add_ln35_fu_358_p2;
    sc_signal< sc_lv<4> > add_ln35_reg_1085;
    sc_signal< sc_lv<4> > add_ln35_reg_1085_pp0_iter2_reg;
    sc_signal< sc_lv<32> > select_ln28_fu_406_p3;
    sc_signal< sc_lv<32> > select_ln28_reg_1100;
    sc_signal< sc_lv<64> > zext_ln28_2_fu_438_p1;
    sc_signal< sc_lv<64> > zext_ln28_2_reg_1107;
    sc_signal< sc_lv<32> > select_ln28_4_fu_486_p3;
    sc_signal< sc_lv<32> > select_ln28_4_reg_1123;
    sc_signal< sc_lv<32> > select_ln28_1_fu_577_p3;
    sc_signal< sc_lv<32> > select_ln28_1_reg_1130;
    sc_signal< sc_lv<32> > conv_1_out_0_load_1_reg_1146;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > tmp_9_fu_250_p2;
    sc_signal< sc_lv<1> > tmp_9_reg_1152;
    sc_signal< sc_lv<32> > select_ln28_5_fu_668_p3;
    sc_signal< sc_lv<32> > select_ln28_5_reg_1157;
    sc_signal< sc_lv<32> > conv_1_out_2_load_1_reg_1163;
    sc_signal< sc_lv<1> > tmp_19_fu_260_p2;
    sc_signal< sc_lv<1> > tmp_19_reg_1169;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<2> > ap_phi_mux_f_0_phi_fu_215_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln35_1_fu_676_p1;
    sc_signal< sc_lv<32> > tmp_9_fu_250_p1;
    sc_signal< sc_lv<32> > tmp_19_fu_260_p1;
    sc_signal< sc_lv<32> > select_ln28_2_fu_762_p3;
    sc_signal< sc_lv<32> > select_ln28_6_fu_943_p3;
    sc_signal< sc_lv<1> > icmp_ln13_fu_293_p2;
    sc_signal< sc_lv<2> > f_fu_287_p2;
    sc_signal< sc_lv<1> > trunc_ln25_fu_315_p1;
    sc_signal< sc_lv<3> > tmp_24_fu_319_p3;
    sc_signal< sc_lv<3> > tmp_23_fu_347_p3;
    sc_signal< sc_lv<4> > zext_ln35_fu_354_p1;
    sc_signal< sc_lv<4> > zext_ln14_fu_339_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_fu_364_p1;
    sc_signal< sc_lv<8> > tmp_2_fu_368_p4;
    sc_signal< sc_lv<23> > trunc_ln28_fu_378_p1;
    sc_signal< sc_lv<1> > icmp_ln28_1_fu_388_p2;
    sc_signal< sc_lv<1> > icmp_ln28_fu_382_p2;
    sc_signal< sc_lv<1> > or_ln28_fu_394_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_233_p2;
    sc_signal< sc_lv<1> > and_ln28_fu_400_p2;
    sc_signal< sc_lv<2> > shl_ln25_fu_342_p2;
    sc_signal< sc_lv<2> > or_ln25_fu_414_p2;
    sc_signal< sc_lv<3> > tmp_25_fu_420_p3;
    sc_signal< sc_lv<4> > zext_ln28_1_fu_428_p1;
    sc_signal< sc_lv<4> > add_ln28_fu_432_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_7_fu_444_p1;
    sc_signal< sc_lv<8> > tmp_12_fu_448_p4;
    sc_signal< sc_lv<23> > trunc_ln28_7_fu_458_p1;
    sc_signal< sc_lv<1> > icmp_ln28_15_fu_468_p2;
    sc_signal< sc_lv<1> > icmp_ln28_14_fu_462_p2;
    sc_signal< sc_lv<1> > or_ln28_7_fu_474_p2;
    sc_signal< sc_lv<1> > tmp_13_fu_239_p2;
    sc_signal< sc_lv<1> > and_ln28_7_fu_480_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_1_fu_494_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_2_fu_512_p1;
    sc_signal< sc_lv<8> > tmp_4_fu_498_p4;
    sc_signal< sc_lv<23> > trunc_ln28_1_fu_508_p1;
    sc_signal< sc_lv<1> > icmp_ln28_3_fu_535_p2;
    sc_signal< sc_lv<1> > icmp_ln28_2_fu_529_p2;
    sc_signal< sc_lv<8> > tmp_5_fu_515_p4;
    sc_signal< sc_lv<23> > trunc_ln28_2_fu_525_p1;
    sc_signal< sc_lv<1> > icmp_ln28_5_fu_553_p2;
    sc_signal< sc_lv<1> > icmp_ln28_4_fu_547_p2;
    sc_signal< sc_lv<1> > or_ln28_1_fu_541_p2;
    sc_signal< sc_lv<1> > or_ln28_2_fu_559_p2;
    sc_signal< sc_lv<1> > and_ln28_1_fu_565_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_245_p2;
    sc_signal< sc_lv<1> > and_ln28_2_fu_571_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_8_fu_585_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_9_fu_603_p1;
    sc_signal< sc_lv<8> > tmp_14_fu_589_p4;
    sc_signal< sc_lv<23> > trunc_ln28_8_fu_599_p1;
    sc_signal< sc_lv<1> > icmp_ln28_17_fu_626_p2;
    sc_signal< sc_lv<1> > icmp_ln28_16_fu_620_p2;
    sc_signal< sc_lv<8> > tmp_15_fu_606_p4;
    sc_signal< sc_lv<23> > trunc_ln28_9_fu_616_p1;
    sc_signal< sc_lv<1> > icmp_ln28_19_fu_644_p2;
    sc_signal< sc_lv<1> > icmp_ln28_18_fu_638_p2;
    sc_signal< sc_lv<1> > or_ln28_8_fu_632_p2;
    sc_signal< sc_lv<1> > or_ln28_9_fu_650_p2;
    sc_signal< sc_lv<1> > and_ln28_8_fu_656_p2;
    sc_signal< sc_lv<1> > tmp_16_fu_255_p2;
    sc_signal< sc_lv<1> > and_ln28_9_fu_662_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_3_fu_681_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_4_fu_698_p1;
    sc_signal< sc_lv<8> > tmp_7_fu_684_p4;
    sc_signal< sc_lv<23> > trunc_ln28_3_fu_694_p1;
    sc_signal< sc_lv<1> > icmp_ln28_7_fu_721_p2;
    sc_signal< sc_lv<1> > icmp_ln28_6_fu_715_p2;
    sc_signal< sc_lv<8> > tmp_8_fu_701_p4;
    sc_signal< sc_lv<23> > trunc_ln28_4_fu_711_p1;
    sc_signal< sc_lv<1> > icmp_ln28_9_fu_739_p2;
    sc_signal< sc_lv<1> > icmp_ln28_8_fu_733_p2;
    sc_signal< sc_lv<1> > or_ln28_3_fu_727_p2;
    sc_signal< sc_lv<1> > or_ln28_4_fu_745_p2;
    sc_signal< sc_lv<1> > and_ln28_3_fu_751_p2;
    sc_signal< sc_lv<1> > and_ln28_4_fu_757_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_5_fu_769_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_6_fu_787_p1;
    sc_signal< sc_lv<8> > tmp_s_fu_773_p4;
    sc_signal< sc_lv<23> > trunc_ln28_5_fu_783_p1;
    sc_signal< sc_lv<1> > icmp_ln28_11_fu_811_p2;
    sc_signal< sc_lv<1> > icmp_ln28_10_fu_805_p2;
    sc_signal< sc_lv<8> > tmp_10_fu_791_p4;
    sc_signal< sc_lv<23> > trunc_ln28_6_fu_801_p1;
    sc_signal< sc_lv<1> > icmp_ln28_13_fu_829_p2;
    sc_signal< sc_lv<1> > icmp_ln28_12_fu_823_p2;
    sc_signal< sc_lv<1> > or_ln28_5_fu_817_p2;
    sc_signal< sc_lv<1> > or_ln28_6_fu_835_p2;
    sc_signal< sc_lv<1> > and_ln28_5_fu_841_p2;
    sc_signal< sc_lv<1> > tmp_11_fu_265_p2;
    sc_signal< sc_lv<1> > and_ln28_6_fu_847_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_10_fu_862_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_11_fu_879_p1;
    sc_signal< sc_lv<8> > tmp_17_fu_865_p4;
    sc_signal< sc_lv<23> > trunc_ln28_10_fu_875_p1;
    sc_signal< sc_lv<1> > icmp_ln28_21_fu_902_p2;
    sc_signal< sc_lv<1> > icmp_ln28_20_fu_896_p2;
    sc_signal< sc_lv<8> > tmp_18_fu_882_p4;
    sc_signal< sc_lv<23> > trunc_ln28_11_fu_892_p1;
    sc_signal< sc_lv<1> > icmp_ln28_23_fu_920_p2;
    sc_signal< sc_lv<1> > icmp_ln28_22_fu_914_p2;
    sc_signal< sc_lv<1> > or_ln28_10_fu_908_p2;
    sc_signal< sc_lv<1> > or_ln28_11_fu_926_p2;
    sc_signal< sc_lv<1> > and_ln28_10_fu_932_p2;
    sc_signal< sc_lv<1> > and_ln28_11_fu_938_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_12_fu_950_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_13_fu_968_p1;
    sc_signal< sc_lv<8> > tmp_20_fu_954_p4;
    sc_signal< sc_lv<23> > trunc_ln28_12_fu_964_p1;
    sc_signal< sc_lv<1> > icmp_ln28_25_fu_992_p2;
    sc_signal< sc_lv<1> > icmp_ln28_24_fu_986_p2;
    sc_signal< sc_lv<8> > tmp_21_fu_972_p4;
    sc_signal< sc_lv<23> > trunc_ln28_13_fu_982_p1;
    sc_signal< sc_lv<1> > icmp_ln28_27_fu_1010_p2;
    sc_signal< sc_lv<1> > icmp_ln28_26_fu_1004_p2;
    sc_signal< sc_lv<1> > or_ln28_12_fu_998_p2;
    sc_signal< sc_lv<1> > or_ln28_13_fu_1016_p2;
    sc_signal< sc_lv<1> > and_ln28_12_fu_1022_p2;
    sc_signal< sc_lv<1> > tmp_22_fu_270_p2;
    sc_signal< sc_lv<1> > and_ln28_13_fu_1028_p2;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln10_fu_281_p2();
    void thread_add_ln28_fu_432_p2();
    void thread_add_ln35_fu_358_p2();
    void thread_and_ln28_10_fu_932_p2();
    void thread_and_ln28_11_fu_938_p2();
    void thread_and_ln28_12_fu_1022_p2();
    void thread_and_ln28_13_fu_1028_p2();
    void thread_and_ln28_1_fu_565_p2();
    void thread_and_ln28_2_fu_571_p2();
    void thread_and_ln28_3_fu_751_p2();
    void thread_and_ln28_4_fu_757_p2();
    void thread_and_ln28_5_fu_841_p2();
    void thread_and_ln28_6_fu_847_p2();
    void thread_and_ln28_7_fu_480_p2();
    void thread_and_ln28_8_fu_656_p2();
    void thread_and_ln28_9_fu_662_p2();
    void thread_and_ln28_fu_400_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_f_0_phi_fu_215_p4();
    void thread_ap_ready();
    void thread_bitcast_ln28_10_fu_862_p1();
    void thread_bitcast_ln28_11_fu_879_p1();
    void thread_bitcast_ln28_12_fu_950_p1();
    void thread_bitcast_ln28_13_fu_968_p1();
    void thread_bitcast_ln28_1_fu_494_p1();
    void thread_bitcast_ln28_2_fu_512_p1();
    void thread_bitcast_ln28_3_fu_681_p1();
    void thread_bitcast_ln28_4_fu_698_p1();
    void thread_bitcast_ln28_5_fu_769_p1();
    void thread_bitcast_ln28_6_fu_787_p1();
    void thread_bitcast_ln28_7_fu_444_p1();
    void thread_bitcast_ln28_8_fu_585_p1();
    void thread_bitcast_ln28_9_fu_603_p1();
    void thread_bitcast_ln28_fu_364_p1();
    void thread_conv_1_out_0_address0();
    void thread_conv_1_out_0_address1();
    void thread_conv_1_out_0_ce0();
    void thread_conv_1_out_0_ce1();
    void thread_conv_1_out_1_address0();
    void thread_conv_1_out_1_address1();
    void thread_conv_1_out_1_ce0();
    void thread_conv_1_out_1_ce1();
    void thread_conv_1_out_2_address0();
    void thread_conv_1_out_2_address1();
    void thread_conv_1_out_2_ce0();
    void thread_conv_1_out_2_ce1();
    void thread_conv_1_out_3_address0();
    void thread_conv_1_out_3_address1();
    void thread_conv_1_out_3_ce0();
    void thread_conv_1_out_3_ce1();
    void thread_f_fu_287_p2();
    void thread_icmp_ln10_fu_275_p2();
    void thread_icmp_ln13_fu_293_p2();
    void thread_icmp_ln28_10_fu_805_p2();
    void thread_icmp_ln28_11_fu_811_p2();
    void thread_icmp_ln28_12_fu_823_p2();
    void thread_icmp_ln28_13_fu_829_p2();
    void thread_icmp_ln28_14_fu_462_p2();
    void thread_icmp_ln28_15_fu_468_p2();
    void thread_icmp_ln28_16_fu_620_p2();
    void thread_icmp_ln28_17_fu_626_p2();
    void thread_icmp_ln28_18_fu_638_p2();
    void thread_icmp_ln28_19_fu_644_p2();
    void thread_icmp_ln28_1_fu_388_p2();
    void thread_icmp_ln28_20_fu_896_p2();
    void thread_icmp_ln28_21_fu_902_p2();
    void thread_icmp_ln28_22_fu_914_p2();
    void thread_icmp_ln28_23_fu_920_p2();
    void thread_icmp_ln28_24_fu_986_p2();
    void thread_icmp_ln28_25_fu_992_p2();
    void thread_icmp_ln28_26_fu_1004_p2();
    void thread_icmp_ln28_27_fu_1010_p2();
    void thread_icmp_ln28_2_fu_529_p2();
    void thread_icmp_ln28_3_fu_535_p2();
    void thread_icmp_ln28_4_fu_547_p2();
    void thread_icmp_ln28_5_fu_553_p2();
    void thread_icmp_ln28_6_fu_715_p2();
    void thread_icmp_ln28_7_fu_721_p2();
    void thread_icmp_ln28_8_fu_733_p2();
    void thread_icmp_ln28_9_fu_739_p2();
    void thread_icmp_ln28_fu_382_p2();
    void thread_max_pool_1_out_0_address0();
    void thread_max_pool_1_out_0_ce0();
    void thread_max_pool_1_out_0_d0();
    void thread_max_pool_1_out_0_we0();
    void thread_max_pool_1_out_1_address0();
    void thread_max_pool_1_out_1_ce0();
    void thread_max_pool_1_out_1_d0();
    void thread_max_pool_1_out_1_we0();
    void thread_or_ln25_fu_414_p2();
    void thread_or_ln28_10_fu_908_p2();
    void thread_or_ln28_11_fu_926_p2();
    void thread_or_ln28_12_fu_998_p2();
    void thread_or_ln28_13_fu_1016_p2();
    void thread_or_ln28_1_fu_541_p2();
    void thread_or_ln28_2_fu_559_p2();
    void thread_or_ln28_3_fu_727_p2();
    void thread_or_ln28_4_fu_745_p2();
    void thread_or_ln28_5_fu_817_p2();
    void thread_or_ln28_6_fu_835_p2();
    void thread_or_ln28_7_fu_474_p2();
    void thread_or_ln28_8_fu_632_p2();
    void thread_or_ln28_9_fu_650_p2();
    void thread_or_ln28_fu_394_p2();
    void thread_r_fu_333_p2();
    void thread_select_ln28_1_fu_577_p3();
    void thread_select_ln28_2_fu_762_p3();
    void thread_select_ln28_4_fu_486_p3();
    void thread_select_ln28_5_fu_668_p3();
    void thread_select_ln28_6_fu_943_p3();
    void thread_select_ln28_8_fu_299_p3();
    void thread_select_ln28_9_fu_307_p3();
    void thread_select_ln28_fu_406_p3();
    void thread_shl_ln25_fu_342_p2();
    void thread_tmp_10_fu_791_p4();
    void thread_tmp_12_fu_448_p4();
    void thread_tmp_14_fu_589_p4();
    void thread_tmp_15_fu_606_p4();
    void thread_tmp_17_fu_865_p4();
    void thread_tmp_18_fu_882_p4();
    void thread_tmp_19_fu_260_p1();
    void thread_tmp_20_fu_954_p4();
    void thread_tmp_21_fu_972_p4();
    void thread_tmp_23_fu_347_p3();
    void thread_tmp_24_fu_319_p3();
    void thread_tmp_25_fu_420_p3();
    void thread_tmp_2_fu_368_p4();
    void thread_tmp_4_fu_498_p4();
    void thread_tmp_5_fu_515_p4();
    void thread_tmp_7_fu_684_p4();
    void thread_tmp_8_fu_701_p4();
    void thread_tmp_9_fu_250_p1();
    void thread_tmp_s_fu_773_p4();
    void thread_trunc_ln25_fu_315_p1();
    void thread_trunc_ln28_10_fu_875_p1();
    void thread_trunc_ln28_11_fu_892_p1();
    void thread_trunc_ln28_12_fu_964_p1();
    void thread_trunc_ln28_13_fu_982_p1();
    void thread_trunc_ln28_1_fu_508_p1();
    void thread_trunc_ln28_2_fu_525_p1();
    void thread_trunc_ln28_3_fu_694_p1();
    void thread_trunc_ln28_4_fu_711_p1();
    void thread_trunc_ln28_5_fu_783_p1();
    void thread_trunc_ln28_6_fu_801_p1();
    void thread_trunc_ln28_7_fu_458_p1();
    void thread_trunc_ln28_8_fu_599_p1();
    void thread_trunc_ln28_9_fu_616_p1();
    void thread_trunc_ln28_fu_378_p1();
    void thread_zext_ln14_fu_339_p1();
    void thread_zext_ln28_1_fu_428_p1();
    void thread_zext_ln28_2_fu_438_p1();
    void thread_zext_ln28_fu_327_p1();
    void thread_zext_ln35_1_fu_676_p1();
    void thread_zext_ln35_fu_354_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
