-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity max_pool_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    conv_1_out_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_1_out_ce0 : OUT STD_LOGIC;
    conv_1_out_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_1_out_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_1_out_ce1 : OUT STD_LOGIC;
    conv_1_out_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    max_pool_1_out_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    max_pool_1_out_ce0 : OUT STD_LOGIC;
    max_pool_1_out_we0 : OUT STD_LOGIC;
    max_pool_1_out_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    max_pool_1_out_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    max_pool_1_out_ce1 : OUT STD_LOGIC;
    max_pool_1_out_we1 : OUT STD_LOGIC;
    max_pool_1_out_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of max_pool_1 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "max_pool_1,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx485t-ffg1157-1,HLS_INPUT_CLOCK=40.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=34.830000,HLS_SYN_LAT=18,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=454,HLS_SYN_LUT=1937,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_800000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000100000000000000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv62_1 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv62_4 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv62_5 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv62_2 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv62_3 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv62_6 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv62_7 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal f_0_reg_252 : STD_LOGIC_VECTOR (1 downto 0);
    signal reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln10_reg_1725 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal icmp_ln10_fu_279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal f_fu_285_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal f_reg_1729 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln28_fu_291_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln28_reg_1734 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln28_fu_296_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln28_reg_1744 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln28_3_fu_302_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln28_3_reg_1751 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_45_fu_307_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_45_reg_1761 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln28_5_fu_319_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln28_5_reg_1771 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln28_fu_366_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_reg_1781 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1787 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln28_1_fu_375_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln28_1_reg_1792 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln28_1_fu_481_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_1_reg_1807 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_4_fu_530_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_4_reg_1814 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_reg_1820 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln28_5_fu_640_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_5_reg_1835 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_8_fu_689_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_8_reg_1842 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_reg_1848 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln28_9_fu_798_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_9_reg_1863 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_12_fu_847_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_12_reg_1870 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_reg_1876 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln28_fu_860_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln28_reg_1881 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state7_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal select_ln28_2_fu_967_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_2_reg_1897 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_6_fu_1057_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_6_reg_1904 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_13_fu_1146_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_13_reg_1911 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state8_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal select_ln28_10_fu_1248_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_10_reg_1928 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_14_fu_1338_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_14_reg_1935 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state9_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_phi_mux_f_0_phi_fu_256_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_47_fu_379_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln28_7_fu_394_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_49_fu_539_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln28_9_fu_553_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_44_fu_698_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal tmp_46_fu_707_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_fu_866_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal tmp_50_fu_875_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln28_4_fu_1153_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal zext_ln28_6_fu_1160_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln28_8_fu_1348_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal zext_ln28_10_fu_1356_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln28_3_fu_1444_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_7_fu_1535_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_11_fu_1626_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_15_fu_1717_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_264_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_270_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln28_fu_316_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal bitcast_ln28_fu_324_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_328_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_fu_338_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_1_fu_348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_fu_342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln28_1_fu_388_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal bitcast_ln28_1_fu_399_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_2_fu_417_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_403_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_1_fu_413_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_3_fu_440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_2_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_420_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_2_fu_430_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_5_fu_458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_4_fu_452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_1_fu_446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_2_fu_464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_1_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_2_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_7_fu_488_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_492_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_7_fu_502_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_15_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_14_fu_506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_7_fu_518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_7_fu_524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln28_2_fu_548_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal bitcast_ln28_8_fu_558_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_9_fu_576_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_562_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_8_fu_572_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_17_fu_599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_16_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_579_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_9_fu_589_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_19_fu_617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_18_fu_611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_8_fu_605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_9_fu_623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_8_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_9_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_14_fu_647_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_651_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_14_fu_661_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_29_fu_671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_28_fu_665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_14_fu_677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_14_fu_683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_15_fu_716_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_16_fu_734_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_720_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_15_fu_730_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_31_fu_757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_30_fu_751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_737_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_16_fu_747_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_33_fu_775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_32_fu_769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_15_fu_763_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_16_fu_781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_15_fu_787_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_16_fu_793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_21_fu_805_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_809_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_21_fu_819_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_43_fu_829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_42_fu_823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_21_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_21_fu_841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln28_2_fu_856_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal bitcast_ln28_3_fu_884_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_4_fu_902_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_888_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_3_fu_898_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_7_fu_925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_6_fu_919_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_905_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_4_fu_915_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_9_fu_943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_8_fu_937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_3_fu_931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_4_fu_949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_3_fu_955_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_4_fu_961_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_10_fu_974_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_11_fu_992_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_978_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_10_fu_988_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_21_fu_1015_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_20_fu_1009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_995_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_11_fu_1005_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_23_fu_1033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_22_fu_1027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_10_fu_1021_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_11_fu_1039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_10_fu_1045_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_11_fu_1051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_22_fu_1064_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_23_fu_1082_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_1068_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_22_fu_1078_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_45_fu_1105_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_44_fu_1099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_1085_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_23_fu_1095_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_47_fu_1123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_46_fu_1117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_22_fu_1111_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_23_fu_1129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_22_fu_1135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_23_fu_1141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln28_1_fu_1157_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal bitcast_ln28_17_fu_1165_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_18_fu_1183_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_1169_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_17_fu_1179_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_35_fu_1206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_34_fu_1200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_1186_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_18_fu_1196_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_37_fu_1224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_36_fu_1218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_17_fu_1212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_18_fu_1230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_17_fu_1236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_18_fu_1242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_24_fu_1255_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_25_fu_1273_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_fu_1259_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_24_fu_1269_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_49_fu_1296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_48_fu_1290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_1276_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_25_fu_1286_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_51_fu_1314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_50_fu_1308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_24_fu_1302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_25_fu_1320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_24_fu_1326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_25_fu_1332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln28_2_fu_1345_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln28_3_fu_1353_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal bitcast_ln28_5_fu_1361_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_6_fu_1379_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1365_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_5_fu_1375_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_11_fu_1402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_10_fu_1396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_1382_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_6_fu_1392_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_13_fu_1420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_12_fu_1414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_5_fu_1408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_6_fu_1426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_5_fu_1432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_6_fu_1438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_12_fu_1452_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_13_fu_1470_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_1456_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_12_fu_1466_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_25_fu_1493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_24_fu_1487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_1473_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_13_fu_1483_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_27_fu_1511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_26_fu_1505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_12_fu_1499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_13_fu_1517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_12_fu_1523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_13_fu_1529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_19_fu_1543_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_20_fu_1561_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_fu_1547_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_19_fu_1557_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_39_fu_1584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_38_fu_1578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_1564_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_20_fu_1574_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_41_fu_1602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_40_fu_1596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_19_fu_1590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_20_fu_1608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_19_fu_1614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_20_fu_1620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_26_fu_1634_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_27_fu_1652_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_fu_1638_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_26_fu_1648_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_53_fu_1675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_52_fu_1669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_1655_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_27_fu_1665_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_55_fu_1693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_54_fu_1687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_26_fu_1681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_27_fu_1699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_26_fu_1705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_27_fu_1711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage4_00001 : BOOLEAN;
    signal ap_block_pp0_stage5_00001 : BOOLEAN;
    signal ap_block_pp0_stage6_00001 : BOOLEAN;
    signal ap_block_pp0_stage7_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component max_pool_1_fcmp_3bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    max_pool_1_fcmp_3bkb_U1 : component max_pool_1_fcmp_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => conv_1_out_q0,
        din1 => grp_fu_264_p1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_264_p2);

    max_pool_1_fcmp_3bkb_U2 : component max_pool_1_fcmp_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => conv_1_out_q1,
        din1 => grp_fu_270_p1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_270_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    f_0_reg_252_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_reg_1725 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                f_0_reg_252 <= f_reg_1729;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                f_0_reg_252 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_reg_1725 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                add_ln28_reg_1881 <= add_ln28_fu_860_p2;
                select_ln28_13_reg_1911 <= select_ln28_13_fu_1146_p3;
                select_ln28_2_reg_1897 <= select_ln28_2_fu_967_p3;
                select_ln28_6_reg_1904 <= select_ln28_6_fu_1057_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                f_reg_1729 <= f_fu_285_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln10_reg_1725 <= icmp_ln10_fu_279_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln10_reg_1725 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln10_reg_1725 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((icmp_ln10_reg_1725 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((icmp_ln10_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_275 <= conv_1_out_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                select_ln28_10_reg_1928 <= select_ln28_10_fu_1248_p3;
                select_ln28_14_reg_1935 <= select_ln28_14_fu_1338_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_reg_1725 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                select_ln28_12_reg_1870 <= select_ln28_12_fu_847_p3;
                select_ln28_9_reg_1863 <= select_ln28_9_fu_798_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln10_reg_1725 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                select_ln28_1_reg_1807 <= select_ln28_1_fu_481_p3;
                select_ln28_4_reg_1814 <= select_ln28_4_fu_530_p3;
                    zext_ln28_1_reg_1792(1 downto 0) <= zext_ln28_1_fu_375_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln10_reg_1725 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                select_ln28_5_reg_1835 <= select_ln28_5_fu_640_p3;
                select_ln28_8_reg_1842 <= select_ln28_8_fu_689_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                select_ln28_reg_1781 <= select_ln28_fu_366_p3;
                    tmp_45_reg_1761(1 downto 0) <= tmp_45_fu_307_p3(1 downto 0);
                    zext_ln28_5_reg_1771(2 downto 0) <= zext_ln28_5_fu_319_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln10_reg_1725 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                tmp_15_reg_1820 <= grp_fu_270_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln10_reg_1725 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                tmp_26_reg_1848 <= grp_fu_270_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_reg_1725 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                tmp_37_reg_1876 <= grp_fu_270_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_5_reg_1787 <= grp_fu_270_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_fu_279_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                xor_ln28_reg_1744 <= xor_ln28_fu_296_p2;
                    zext_ln28_3_reg_1751(1 downto 0) <= zext_ln28_3_fu_302_p1(1 downto 0);
                    zext_ln28_reg_1734(1 downto 0) <= zext_ln28_fu_291_p1(1 downto 0);
            end if;
        end if;
    end process;
    zext_ln28_reg_1734(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    zext_ln28_3_reg_1751(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    tmp_45_reg_1761(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000001";
    zext_ln28_5_reg_1771(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln28_1_reg_1792(4 downto 2) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, icmp_ln10_fu_279_p2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln10_fu_279_p2 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln10_fu_279_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    add_ln28_1_fu_388_p2 <= std_logic_vector(signed(ap_const_lv5_12) + signed(zext_ln28_1_fu_375_p1));
    add_ln28_2_fu_548_p2 <= std_logic_vector(signed(ap_const_lv5_16) + signed(zext_ln28_1_reg_1792));
    add_ln28_fu_860_p2 <= std_logic_vector(signed(ap_const_lv4_A) + signed(zext_ln28_2_fu_856_p1));
    and_ln28_10_fu_1045_p2 <= (or_ln28_11_fu_1039_p2 and or_ln28_10_fu_1021_p2);
    and_ln28_11_fu_1051_p2 <= (grp_fu_270_p2 and and_ln28_10_fu_1045_p2);
    and_ln28_12_fu_1523_p2 <= (or_ln28_13_fu_1517_p2 and or_ln28_12_fu_1499_p2);
    and_ln28_13_fu_1529_p2 <= (grp_fu_270_p2 and and_ln28_12_fu_1523_p2);
    and_ln28_14_fu_683_p2 <= (or_ln28_14_fu_677_p2 and grp_fu_264_p2);
    and_ln28_15_fu_787_p2 <= (or_ln28_16_fu_781_p2 and or_ln28_15_fu_763_p2);
    and_ln28_16_fu_793_p2 <= (tmp_26_reg_1848 and and_ln28_15_fu_787_p2);
    and_ln28_17_fu_1236_p2 <= (or_ln28_18_fu_1230_p2 and or_ln28_17_fu_1212_p2);
    and_ln28_18_fu_1242_p2 <= (grp_fu_264_p2 and and_ln28_17_fu_1236_p2);
    and_ln28_19_fu_1614_p2 <= (or_ln28_20_fu_1608_p2 and or_ln28_19_fu_1590_p2);
    and_ln28_1_fu_470_p2 <= (or_ln28_2_fu_464_p2 and or_ln28_1_fu_446_p2);
    and_ln28_20_fu_1620_p2 <= (grp_fu_264_p2 and and_ln28_19_fu_1614_p2);
    and_ln28_21_fu_841_p2 <= (or_ln28_21_fu_835_p2 and grp_fu_264_p2);
    and_ln28_22_fu_1135_p2 <= (or_ln28_23_fu_1129_p2 and or_ln28_22_fu_1111_p2);
    and_ln28_23_fu_1141_p2 <= (tmp_37_reg_1876 and and_ln28_22_fu_1135_p2);
    and_ln28_24_fu_1326_p2 <= (or_ln28_25_fu_1320_p2 and or_ln28_24_fu_1302_p2);
    and_ln28_25_fu_1332_p2 <= (grp_fu_270_p2 and and_ln28_24_fu_1326_p2);
    and_ln28_26_fu_1705_p2 <= (or_ln28_27_fu_1699_p2 and or_ln28_26_fu_1681_p2);
    and_ln28_27_fu_1711_p2 <= (grp_fu_270_p2 and and_ln28_26_fu_1705_p2);
    and_ln28_2_fu_476_p2 <= (tmp_5_reg_1787 and and_ln28_1_fu_470_p2);
    and_ln28_3_fu_955_p2 <= (or_ln28_4_fu_949_p2 and or_ln28_3_fu_931_p2);
    and_ln28_4_fu_961_p2 <= (grp_fu_264_p2 and and_ln28_3_fu_955_p2);
    and_ln28_5_fu_1432_p2 <= (or_ln28_6_fu_1426_p2 and or_ln28_5_fu_1408_p2);
    and_ln28_6_fu_1438_p2 <= (grp_fu_264_p2 and and_ln28_5_fu_1432_p2);
    and_ln28_7_fu_524_p2 <= (or_ln28_7_fu_518_p2 and grp_fu_264_p2);
    and_ln28_8_fu_629_p2 <= (or_ln28_9_fu_623_p2 and or_ln28_8_fu_605_p2);
    and_ln28_9_fu_635_p2 <= (tmp_15_reg_1820 and and_ln28_8_fu_629_p2);
    and_ln28_fu_360_p2 <= (or_ln28_fu_354_p2 and grp_fu_264_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln10_fu_279_p2)
    begin
        if ((icmp_ln10_fu_279_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_f_0_phi_fu_256_p4_assign_proc : process(f_0_reg_252, icmp_ln10_reg_1725, ap_CS_fsm_pp0_stage0, f_reg_1729, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln10_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_f_0_phi_fu_256_p4 <= f_reg_1729;
        else 
            ap_phi_mux_f_0_phi_fu_256_p4 <= f_0_reg_252;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln28_10_fu_974_p1 <= conv_1_out_q1;
    bitcast_ln28_11_fu_992_p1 <= select_ln28_5_reg_1835;
    bitcast_ln28_12_fu_1452_p1 <= conv_1_out_q1;
    bitcast_ln28_13_fu_1470_p1 <= select_ln28_6_reg_1904;
    bitcast_ln28_14_fu_647_p1 <= conv_1_out_q0;
    bitcast_ln28_15_fu_716_p1 <= reg_275;
    bitcast_ln28_16_fu_734_p1 <= select_ln28_8_reg_1842;
    bitcast_ln28_17_fu_1165_p1 <= conv_1_out_q0;
    bitcast_ln28_18_fu_1183_p1 <= select_ln28_9_reg_1863;
    bitcast_ln28_19_fu_1543_p1 <= conv_1_out_q0;
    bitcast_ln28_1_fu_399_p1 <= reg_275;
    bitcast_ln28_20_fu_1561_p1 <= select_ln28_10_reg_1928;
    bitcast_ln28_21_fu_805_p1 <= conv_1_out_q0;
    bitcast_ln28_22_fu_1064_p1 <= reg_275;
    bitcast_ln28_23_fu_1082_p1 <= select_ln28_12_reg_1870;
    bitcast_ln28_24_fu_1255_p1 <= conv_1_out_q1;
    bitcast_ln28_25_fu_1273_p1 <= select_ln28_13_reg_1911;
    bitcast_ln28_26_fu_1634_p1 <= conv_1_out_q1;
    bitcast_ln28_27_fu_1652_p1 <= select_ln28_14_reg_1935;
    bitcast_ln28_2_fu_417_p1 <= select_ln28_reg_1781;
    bitcast_ln28_3_fu_884_p1 <= conv_1_out_q0;
    bitcast_ln28_4_fu_902_p1 <= select_ln28_1_reg_1807;
    bitcast_ln28_5_fu_1361_p1 <= conv_1_out_q0;
    bitcast_ln28_6_fu_1379_p1 <= select_ln28_2_reg_1897;
    bitcast_ln28_7_fu_488_p1 <= conv_1_out_q0;
    bitcast_ln28_8_fu_558_p1 <= reg_275;
    bitcast_ln28_9_fu_576_p1 <= select_ln28_4_reg_1814;
    bitcast_ln28_fu_324_p1 <= conv_1_out_q0;

    conv_1_out_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, zext_ln28_fu_291_p1, tmp_45_fu_307_p3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage1, tmp_47_fu_379_p3, ap_block_pp0_stage2, tmp_49_fu_539_p3, ap_block_pp0_stage3, tmp_44_fu_698_p3, ap_block_pp0_stage4, tmp_48_fu_866_p3, ap_block_pp0_stage5, zext_ln28_4_fu_1153_p1, ap_block_pp0_stage6, zext_ln28_8_fu_1348_p1, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                conv_1_out_address0 <= zext_ln28_8_fu_1348_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                conv_1_out_address0 <= zext_ln28_4_fu_1153_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                conv_1_out_address0 <= tmp_48_fu_866_p3(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                conv_1_out_address0 <= tmp_44_fu_698_p3(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                conv_1_out_address0 <= tmp_49_fu_539_p3(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                conv_1_out_address0 <= tmp_47_fu_379_p3(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_out_address0 <= tmp_45_fu_307_p3(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_out_address0 <= zext_ln28_fu_291_p1(5 - 1 downto 0);
            else 
                conv_1_out_address0 <= "XXXXX";
            end if;
        else 
            conv_1_out_address0 <= "XXXXX";
        end if; 
    end process;


    conv_1_out_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, zext_ln28_3_fu_302_p1, zext_ln28_5_fu_319_p1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, zext_ln28_7_fu_394_p1, ap_block_pp0_stage3, zext_ln28_9_fu_553_p1, ap_block_pp0_stage4, tmp_46_fu_707_p3, ap_block_pp0_stage5, tmp_50_fu_875_p3, ap_block_pp0_stage6, zext_ln28_6_fu_1160_p1, ap_block_pp0_stage7, zext_ln28_10_fu_1356_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                conv_1_out_address1 <= zext_ln28_10_fu_1356_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                conv_1_out_address1 <= zext_ln28_6_fu_1160_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                conv_1_out_address1 <= tmp_50_fu_875_p3(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                conv_1_out_address1 <= tmp_46_fu_707_p3(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                conv_1_out_address1 <= zext_ln28_9_fu_553_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                conv_1_out_address1 <= zext_ln28_7_fu_394_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_out_address1 <= zext_ln28_5_fu_319_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_out_address1 <= zext_ln28_3_fu_302_p1(5 - 1 downto 0);
            else 
                conv_1_out_address1 <= "XXXXX";
            end if;
        else 
            conv_1_out_address1 <= "XXXXX";
        end if; 
    end process;


    conv_1_out_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            conv_1_out_ce0 <= ap_const_logic_1;
        else 
            conv_1_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            conv_1_out_ce1 <= ap_const_logic_1;
        else 
            conv_1_out_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    f_fu_285_p2 <= std_logic_vector(unsigned(ap_phi_mux_f_0_phi_fu_256_p4) + unsigned(ap_const_lv2_1));

    grp_fu_264_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, select_ln28_1_reg_1807, select_ln28_9_reg_1863, ap_CS_fsm_pp0_stage5, select_ln28_2_reg_1897, ap_CS_fsm_pp0_stage6, select_ln28_10_reg_1928, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_264_p1 <= select_ln28_10_reg_1928;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_264_p1 <= select_ln28_2_reg_1897;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_264_p1 <= select_ln28_9_reg_1863;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_264_p1 <= select_ln28_1_reg_1807;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_264_p1 <= ap_const_lv32_800000;
        else 
            grp_fu_264_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_270_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, select_ln28_fu_366_p3, select_ln28_4_fu_530_p3, select_ln28_5_reg_1835, select_ln28_8_fu_689_p3, select_ln28_12_fu_847_p3, ap_CS_fsm_pp0_stage5, select_ln28_6_reg_1904, select_ln28_13_reg_1911, ap_CS_fsm_pp0_stage6, select_ln28_14_reg_1935, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_270_p1 <= select_ln28_14_reg_1935;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_270_p1 <= select_ln28_6_reg_1904;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_270_p1 <= select_ln28_13_reg_1911;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_270_p1 <= select_ln28_5_reg_1835;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_270_p1 <= select_ln28_12_fu_847_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_270_p1 <= select_ln28_8_fu_689_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_270_p1 <= select_ln28_4_fu_530_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_270_p1 <= select_ln28_fu_366_p3;
        else 
            grp_fu_270_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln10_fu_279_p2 <= "1" when (ap_phi_mux_f_0_phi_fu_256_p4 = ap_const_lv2_2) else "0";
    icmp_ln28_10_fu_1396_p2 <= "0" when (tmp_9_fu_1365_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_11_fu_1402_p2 <= "1" when (trunc_ln28_5_fu_1375_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_12_fu_1414_p2 <= "0" when (tmp_s_fu_1382_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_13_fu_1420_p2 <= "1" when (trunc_ln28_6_fu_1392_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_14_fu_506_p2 <= "0" when (tmp_11_fu_492_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_15_fu_512_p2 <= "1" when (trunc_ln28_7_fu_502_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_16_fu_593_p2 <= "0" when (tmp_13_fu_562_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_17_fu_599_p2 <= "1" when (trunc_ln28_8_fu_572_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_18_fu_611_p2 <= "0" when (tmp_14_fu_579_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_19_fu_617_p2 <= "1" when (trunc_ln28_9_fu_589_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_1_fu_348_p2 <= "1" when (trunc_ln28_fu_338_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_20_fu_1009_p2 <= "0" when (tmp_16_fu_978_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_21_fu_1015_p2 <= "1" when (trunc_ln28_10_fu_988_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_22_fu_1027_p2 <= "0" when (tmp_17_fu_995_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_23_fu_1033_p2 <= "1" when (trunc_ln28_11_fu_1005_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_24_fu_1487_p2 <= "0" when (tmp_19_fu_1456_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_25_fu_1493_p2 <= "1" when (trunc_ln28_12_fu_1466_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_26_fu_1505_p2 <= "0" when (tmp_20_fu_1473_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_27_fu_1511_p2 <= "1" when (trunc_ln28_13_fu_1483_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_28_fu_665_p2 <= "0" when (tmp_22_fu_651_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_29_fu_671_p2 <= "1" when (trunc_ln28_14_fu_661_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_2_fu_434_p2 <= "0" when (tmp_3_fu_403_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_30_fu_751_p2 <= "0" when (tmp_24_fu_720_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_31_fu_757_p2 <= "1" when (trunc_ln28_15_fu_730_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_32_fu_769_p2 <= "0" when (tmp_25_fu_737_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_33_fu_775_p2 <= "1" when (trunc_ln28_16_fu_747_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_34_fu_1200_p2 <= "0" when (tmp_27_fu_1169_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_35_fu_1206_p2 <= "1" when (trunc_ln28_17_fu_1179_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_36_fu_1218_p2 <= "0" when (tmp_28_fu_1186_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_37_fu_1224_p2 <= "1" when (trunc_ln28_18_fu_1196_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_38_fu_1578_p2 <= "0" when (tmp_30_fu_1547_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_39_fu_1584_p2 <= "1" when (trunc_ln28_19_fu_1557_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_3_fu_440_p2 <= "1" when (trunc_ln28_1_fu_413_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_40_fu_1596_p2 <= "0" when (tmp_31_fu_1564_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_41_fu_1602_p2 <= "1" when (trunc_ln28_20_fu_1574_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_42_fu_823_p2 <= "0" when (tmp_33_fu_809_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_43_fu_829_p2 <= "1" when (trunc_ln28_21_fu_819_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_44_fu_1099_p2 <= "0" when (tmp_35_fu_1068_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_45_fu_1105_p2 <= "1" when (trunc_ln28_22_fu_1078_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_46_fu_1117_p2 <= "0" when (tmp_36_fu_1085_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_47_fu_1123_p2 <= "1" when (trunc_ln28_23_fu_1095_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_48_fu_1290_p2 <= "0" when (tmp_38_fu_1259_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_49_fu_1296_p2 <= "1" when (trunc_ln28_24_fu_1269_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_4_fu_452_p2 <= "0" when (tmp_4_fu_420_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_50_fu_1308_p2 <= "0" when (tmp_39_fu_1276_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_51_fu_1314_p2 <= "1" when (trunc_ln28_25_fu_1286_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_52_fu_1669_p2 <= "0" when (tmp_41_fu_1638_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_53_fu_1675_p2 <= "1" when (trunc_ln28_26_fu_1648_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_54_fu_1687_p2 <= "0" when (tmp_42_fu_1655_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_55_fu_1693_p2 <= "1" when (trunc_ln28_27_fu_1665_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_5_fu_458_p2 <= "1" when (trunc_ln28_2_fu_430_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_6_fu_919_p2 <= "0" when (tmp_6_fu_888_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_7_fu_925_p2 <= "1" when (trunc_ln28_3_fu_898_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_8_fu_937_p2 <= "0" when (tmp_7_fu_905_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_9_fu_943_p2 <= "1" when (trunc_ln28_4_fu_915_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_fu_342_p2 <= "0" when (tmp_1_fu_328_p4 = ap_const_lv8_FF) else "1";

    max_pool_1_out_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, zext_ln28_reg_1734, tmp_45_reg_1761, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            max_pool_1_out_address0 <= tmp_45_reg_1761(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            max_pool_1_out_address0 <= zext_ln28_reg_1734(3 - 1 downto 0);
        else 
            max_pool_1_out_address0 <= "XXX";
        end if; 
    end process;


    max_pool_1_out_address1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, zext_ln28_3_reg_1751, zext_ln28_5_reg_1771, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            max_pool_1_out_address1 <= zext_ln28_5_reg_1771(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            max_pool_1_out_address1 <= zext_ln28_3_reg_1751(3 - 1 downto 0);
        else 
            max_pool_1_out_address1 <= "XXX";
        end if; 
    end process;


    max_pool_1_out_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            max_pool_1_out_ce0 <= ap_const_logic_1;
        else 
            max_pool_1_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            max_pool_1_out_ce1 <= ap_const_logic_1;
        else 
            max_pool_1_out_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_d0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage7, select_ln28_3_fu_1444_p3, select_ln28_11_fu_1626_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            max_pool_1_out_d0 <= select_ln28_11_fu_1626_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            max_pool_1_out_d0 <= select_ln28_3_fu_1444_p3;
        else 
            max_pool_1_out_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    max_pool_1_out_d1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage7, select_ln28_7_fu_1535_p3, select_ln28_15_fu_1717_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            max_pool_1_out_d1 <= select_ln28_15_fu_1717_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            max_pool_1_out_d1 <= select_ln28_7_fu_1535_p3;
        else 
            max_pool_1_out_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    max_pool_1_out_we0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln10_reg_1725, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((icmp_ln10_reg_1725 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln10_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            max_pool_1_out_we0 <= ap_const_logic_1;
        else 
            max_pool_1_out_we0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_we1_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln10_reg_1725, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((icmp_ln10_reg_1725 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln10_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            max_pool_1_out_we1 <= ap_const_logic_1;
        else 
            max_pool_1_out_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln28_10_fu_1021_p2 <= (icmp_ln28_21_fu_1015_p2 or icmp_ln28_20_fu_1009_p2);
    or_ln28_11_fu_1039_p2 <= (icmp_ln28_23_fu_1033_p2 or icmp_ln28_22_fu_1027_p2);
    or_ln28_12_fu_1499_p2 <= (icmp_ln28_25_fu_1493_p2 or icmp_ln28_24_fu_1487_p2);
    or_ln28_13_fu_1517_p2 <= (icmp_ln28_27_fu_1511_p2 or icmp_ln28_26_fu_1505_p2);
    or_ln28_14_fu_677_p2 <= (icmp_ln28_29_fu_671_p2 or icmp_ln28_28_fu_665_p2);
    or_ln28_15_fu_763_p2 <= (icmp_ln28_31_fu_757_p2 or icmp_ln28_30_fu_751_p2);
    or_ln28_16_fu_781_p2 <= (icmp_ln28_33_fu_775_p2 or icmp_ln28_32_fu_769_p2);
    or_ln28_17_fu_1212_p2 <= (icmp_ln28_35_fu_1206_p2 or icmp_ln28_34_fu_1200_p2);
    or_ln28_18_fu_1230_p2 <= (icmp_ln28_37_fu_1224_p2 or icmp_ln28_36_fu_1218_p2);
    or_ln28_19_fu_1590_p2 <= (icmp_ln28_39_fu_1584_p2 or icmp_ln28_38_fu_1578_p2);
    or_ln28_1_fu_446_p2 <= (icmp_ln28_3_fu_440_p2 or icmp_ln28_2_fu_434_p2);
    or_ln28_20_fu_1608_p2 <= (icmp_ln28_41_fu_1602_p2 or icmp_ln28_40_fu_1596_p2);
    or_ln28_21_fu_835_p2 <= (icmp_ln28_43_fu_829_p2 or icmp_ln28_42_fu_823_p2);
    or_ln28_22_fu_1111_p2 <= (icmp_ln28_45_fu_1105_p2 or icmp_ln28_44_fu_1099_p2);
    or_ln28_23_fu_1129_p2 <= (icmp_ln28_47_fu_1123_p2 or icmp_ln28_46_fu_1117_p2);
    or_ln28_24_fu_1302_p2 <= (icmp_ln28_49_fu_1296_p2 or icmp_ln28_48_fu_1290_p2);
    or_ln28_25_fu_1320_p2 <= (icmp_ln28_51_fu_1314_p2 or icmp_ln28_50_fu_1308_p2);
    or_ln28_26_fu_1681_p2 <= (icmp_ln28_53_fu_1675_p2 or icmp_ln28_52_fu_1669_p2);
    or_ln28_27_fu_1699_p2 <= (icmp_ln28_55_fu_1693_p2 or icmp_ln28_54_fu_1687_p2);
    or_ln28_2_fu_464_p2 <= (icmp_ln28_5_fu_458_p2 or icmp_ln28_4_fu_452_p2);
    or_ln28_3_fu_931_p2 <= (icmp_ln28_7_fu_925_p2 or icmp_ln28_6_fu_919_p2);
    or_ln28_4_fu_949_p2 <= (icmp_ln28_9_fu_943_p2 or icmp_ln28_8_fu_937_p2);
    or_ln28_5_fu_1408_p2 <= (icmp_ln28_11_fu_1402_p2 or icmp_ln28_10_fu_1396_p2);
    or_ln28_6_fu_1426_p2 <= (icmp_ln28_13_fu_1420_p2 or icmp_ln28_12_fu_1414_p2);
    or_ln28_7_fu_518_p2 <= (icmp_ln28_15_fu_512_p2 or icmp_ln28_14_fu_506_p2);
    or_ln28_8_fu_605_p2 <= (icmp_ln28_17_fu_599_p2 or icmp_ln28_16_fu_593_p2);
    or_ln28_9_fu_623_p2 <= (icmp_ln28_19_fu_617_p2 or icmp_ln28_18_fu_611_p2);
    or_ln28_fu_354_p2 <= (icmp_ln28_fu_342_p2 or icmp_ln28_1_fu_348_p2);
    select_ln28_10_fu_1248_p3 <= 
        conv_1_out_q0 when (and_ln28_18_fu_1242_p2(0) = '1') else 
        select_ln28_9_reg_1863;
    select_ln28_11_fu_1626_p3 <= 
        conv_1_out_q0 when (and_ln28_20_fu_1620_p2(0) = '1') else 
        select_ln28_10_reg_1928;
    select_ln28_12_fu_847_p3 <= 
        conv_1_out_q0 when (and_ln28_21_fu_841_p2(0) = '1') else 
        ap_const_lv32_800000;
    select_ln28_13_fu_1146_p3 <= 
        reg_275 when (and_ln28_23_fu_1141_p2(0) = '1') else 
        select_ln28_12_reg_1870;
    select_ln28_14_fu_1338_p3 <= 
        conv_1_out_q1 when (and_ln28_25_fu_1332_p2(0) = '1') else 
        select_ln28_13_reg_1911;
    select_ln28_15_fu_1717_p3 <= 
        conv_1_out_q1 when (and_ln28_27_fu_1711_p2(0) = '1') else 
        select_ln28_14_reg_1935;
    select_ln28_1_fu_481_p3 <= 
        reg_275 when (and_ln28_2_fu_476_p2(0) = '1') else 
        select_ln28_reg_1781;
    select_ln28_2_fu_967_p3 <= 
        conv_1_out_q0 when (and_ln28_4_fu_961_p2(0) = '1') else 
        select_ln28_1_reg_1807;
    select_ln28_3_fu_1444_p3 <= 
        conv_1_out_q0 when (and_ln28_6_fu_1438_p2(0) = '1') else 
        select_ln28_2_reg_1897;
    select_ln28_4_fu_530_p3 <= 
        conv_1_out_q0 when (and_ln28_7_fu_524_p2(0) = '1') else 
        ap_const_lv32_800000;
    select_ln28_5_fu_640_p3 <= 
        reg_275 when (and_ln28_9_fu_635_p2(0) = '1') else 
        select_ln28_4_reg_1814;
    select_ln28_6_fu_1057_p3 <= 
        conv_1_out_q1 when (and_ln28_11_fu_1051_p2(0) = '1') else 
        select_ln28_5_reg_1835;
    select_ln28_7_fu_1535_p3 <= 
        conv_1_out_q1 when (and_ln28_13_fu_1529_p2(0) = '1') else 
        select_ln28_6_reg_1904;
    select_ln28_8_fu_689_p3 <= 
        conv_1_out_q0 when (and_ln28_14_fu_683_p2(0) = '1') else 
        ap_const_lv32_800000;
    select_ln28_9_fu_798_p3 <= 
        reg_275 when (and_ln28_16_fu_793_p2(0) = '1') else 
        select_ln28_8_reg_1842;
    select_ln28_fu_366_p3 <= 
        conv_1_out_q0 when (and_ln28_fu_360_p2(0) = '1') else 
        ap_const_lv32_800000;
        sext_ln28_1_fu_1157_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xor_ln28_reg_1744),4));

        sext_ln28_2_fu_1345_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln28_reg_1881),5));

        sext_ln28_3_fu_1353_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xor_ln28_reg_1744),5));

        sext_ln28_fu_316_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xor_ln28_reg_1744),3));

    tmp_11_fu_492_p4 <= bitcast_ln28_7_fu_488_p1(30 downto 23);
    tmp_13_fu_562_p4 <= bitcast_ln28_8_fu_558_p1(30 downto 23);
    tmp_14_fu_579_p4 <= bitcast_ln28_9_fu_576_p1(30 downto 23);
    tmp_16_fu_978_p4 <= bitcast_ln28_10_fu_974_p1(30 downto 23);
    tmp_17_fu_995_p4 <= bitcast_ln28_11_fu_992_p1(30 downto 23);
    tmp_19_fu_1456_p4 <= bitcast_ln28_12_fu_1452_p1(30 downto 23);
    tmp_1_fu_328_p4 <= bitcast_ln28_fu_324_p1(30 downto 23);
    tmp_20_fu_1473_p4 <= bitcast_ln28_13_fu_1470_p1(30 downto 23);
    tmp_22_fu_651_p4 <= bitcast_ln28_14_fu_647_p1(30 downto 23);
    tmp_24_fu_720_p4 <= bitcast_ln28_15_fu_716_p1(30 downto 23);
    tmp_25_fu_737_p4 <= bitcast_ln28_16_fu_734_p1(30 downto 23);
    tmp_27_fu_1169_p4 <= bitcast_ln28_17_fu_1165_p1(30 downto 23);
    tmp_28_fu_1186_p4 <= bitcast_ln28_18_fu_1183_p1(30 downto 23);
    tmp_30_fu_1547_p4 <= bitcast_ln28_19_fu_1543_p1(30 downto 23);
    tmp_31_fu_1564_p4 <= bitcast_ln28_20_fu_1561_p1(30 downto 23);
    tmp_33_fu_809_p4 <= bitcast_ln28_21_fu_805_p1(30 downto 23);
    tmp_35_fu_1068_p4 <= bitcast_ln28_22_fu_1064_p1(30 downto 23);
    tmp_36_fu_1085_p4 <= bitcast_ln28_23_fu_1082_p1(30 downto 23);
    tmp_38_fu_1259_p4 <= bitcast_ln28_24_fu_1255_p1(30 downto 23);
    tmp_39_fu_1276_p4 <= bitcast_ln28_25_fu_1273_p1(30 downto 23);
    tmp_3_fu_403_p4 <= bitcast_ln28_1_fu_399_p1(30 downto 23);
    tmp_41_fu_1638_p4 <= bitcast_ln28_26_fu_1634_p1(30 downto 23);
    tmp_42_fu_1655_p4 <= bitcast_ln28_27_fu_1652_p1(30 downto 23);
    tmp_44_fu_698_p3 <= (ap_const_lv62_2 & f_0_reg_252);
    tmp_45_fu_307_p3 <= (ap_const_lv62_1 & f_0_reg_252);
    tmp_46_fu_707_p3 <= (ap_const_lv62_3 & f_0_reg_252);
    tmp_47_fu_379_p3 <= (ap_const_lv62_4 & f_0_reg_252);
    tmp_48_fu_866_p3 <= (ap_const_lv62_6 & f_0_reg_252);
    tmp_49_fu_539_p3 <= (ap_const_lv62_5 & f_0_reg_252);
    tmp_4_fu_420_p4 <= bitcast_ln28_2_fu_417_p1(30 downto 23);
    tmp_50_fu_875_p3 <= (ap_const_lv62_7 & f_0_reg_252);
    tmp_6_fu_888_p4 <= bitcast_ln28_3_fu_884_p1(30 downto 23);
    tmp_7_fu_905_p4 <= bitcast_ln28_4_fu_902_p1(30 downto 23);
    tmp_9_fu_1365_p4 <= bitcast_ln28_5_fu_1361_p1(30 downto 23);
    tmp_s_fu_1382_p4 <= bitcast_ln28_6_fu_1379_p1(30 downto 23);
    trunc_ln28_10_fu_988_p1 <= bitcast_ln28_10_fu_974_p1(23 - 1 downto 0);
    trunc_ln28_11_fu_1005_p1 <= bitcast_ln28_11_fu_992_p1(23 - 1 downto 0);
    trunc_ln28_12_fu_1466_p1 <= bitcast_ln28_12_fu_1452_p1(23 - 1 downto 0);
    trunc_ln28_13_fu_1483_p1 <= bitcast_ln28_13_fu_1470_p1(23 - 1 downto 0);
    trunc_ln28_14_fu_661_p1 <= bitcast_ln28_14_fu_647_p1(23 - 1 downto 0);
    trunc_ln28_15_fu_730_p1 <= bitcast_ln28_15_fu_716_p1(23 - 1 downto 0);
    trunc_ln28_16_fu_747_p1 <= bitcast_ln28_16_fu_734_p1(23 - 1 downto 0);
    trunc_ln28_17_fu_1179_p1 <= bitcast_ln28_17_fu_1165_p1(23 - 1 downto 0);
    trunc_ln28_18_fu_1196_p1 <= bitcast_ln28_18_fu_1183_p1(23 - 1 downto 0);
    trunc_ln28_19_fu_1557_p1 <= bitcast_ln28_19_fu_1543_p1(23 - 1 downto 0);
    trunc_ln28_1_fu_413_p1 <= bitcast_ln28_1_fu_399_p1(23 - 1 downto 0);
    trunc_ln28_20_fu_1574_p1 <= bitcast_ln28_20_fu_1561_p1(23 - 1 downto 0);
    trunc_ln28_21_fu_819_p1 <= bitcast_ln28_21_fu_805_p1(23 - 1 downto 0);
    trunc_ln28_22_fu_1078_p1 <= bitcast_ln28_22_fu_1064_p1(23 - 1 downto 0);
    trunc_ln28_23_fu_1095_p1 <= bitcast_ln28_23_fu_1082_p1(23 - 1 downto 0);
    trunc_ln28_24_fu_1269_p1 <= bitcast_ln28_24_fu_1255_p1(23 - 1 downto 0);
    trunc_ln28_25_fu_1286_p1 <= bitcast_ln28_25_fu_1273_p1(23 - 1 downto 0);
    trunc_ln28_26_fu_1648_p1 <= bitcast_ln28_26_fu_1634_p1(23 - 1 downto 0);
    trunc_ln28_27_fu_1665_p1 <= bitcast_ln28_27_fu_1652_p1(23 - 1 downto 0);
    trunc_ln28_2_fu_430_p1 <= bitcast_ln28_2_fu_417_p1(23 - 1 downto 0);
    trunc_ln28_3_fu_898_p1 <= bitcast_ln28_3_fu_884_p1(23 - 1 downto 0);
    trunc_ln28_4_fu_915_p1 <= bitcast_ln28_4_fu_902_p1(23 - 1 downto 0);
    trunc_ln28_5_fu_1375_p1 <= bitcast_ln28_5_fu_1361_p1(23 - 1 downto 0);
    trunc_ln28_6_fu_1392_p1 <= bitcast_ln28_6_fu_1379_p1(23 - 1 downto 0);
    trunc_ln28_7_fu_502_p1 <= bitcast_ln28_7_fu_488_p1(23 - 1 downto 0);
    trunc_ln28_8_fu_572_p1 <= bitcast_ln28_8_fu_558_p1(23 - 1 downto 0);
    trunc_ln28_9_fu_589_p1 <= bitcast_ln28_9_fu_576_p1(23 - 1 downto 0);
    trunc_ln28_fu_338_p1 <= bitcast_ln28_fu_324_p1(23 - 1 downto 0);
    xor_ln28_fu_296_p2 <= (ap_phi_mux_f_0_phi_fu_256_p4 xor ap_const_lv2_2);
    zext_ln28_10_fu_1356_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln28_3_fu_1353_p1),64));
    zext_ln28_1_fu_375_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(f_0_reg_252),5));
    zext_ln28_2_fu_856_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(f_0_reg_252),4));
    zext_ln28_3_fu_302_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln28_fu_296_p2),64));
    zext_ln28_4_fu_1153_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln28_reg_1881),64));
    zext_ln28_5_fu_319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln28_fu_316_p1),64));
    zext_ln28_6_fu_1160_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln28_1_fu_1157_p1),64));
    zext_ln28_7_fu_394_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln28_1_fu_388_p2),64));
    zext_ln28_8_fu_1348_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln28_2_fu_1345_p1),64));
    zext_ln28_9_fu_553_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln28_2_fu_548_p2),64));
    zext_ln28_fu_291_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_f_0_phi_fu_256_p4),64));
end behav;
