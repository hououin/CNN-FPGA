// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "max_pool_1_fcmp_3bkb.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > conv_1_out_address0;
    sc_out< sc_logic > conv_1_out_ce0;
    sc_in< sc_lv<32> > conv_1_out_q0;
    sc_out< sc_lv<3> > max_pool_1_out_address0;
    sc_out< sc_logic > max_pool_1_out_ce0;
    sc_out< sc_logic > max_pool_1_out_we0;
    sc_out< sc_lv<32> > max_pool_1_out_d0;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U1;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<2> > add_ln13_fu_259_p2;
    sc_signal< sc_lv<2> > add_ln13_reg_692;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<2> > shl_ln25_fu_265_p2;
    sc_signal< sc_lv<2> > shl_ln25_reg_697;
    sc_signal< sc_lv<1> > icmp_ln13_fu_253_p2;
    sc_signal< sc_lv<4> > zext_ln16_fu_279_p1;
    sc_signal< sc_lv<4> > zext_ln16_reg_702;
    sc_signal< sc_lv<2> > add_ln16_fu_289_p2;
    sc_signal< sc_lv<2> > add_ln16_reg_710;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<2> > shl_ln26_fu_295_p2;
    sc_signal< sc_lv<2> > shl_ln26_reg_715;
    sc_signal< sc_lv<1> > icmp_ln16_fu_283_p2;
    sc_signal< sc_lv<2> > add_ln20_fu_307_p2;
    sc_signal< sc_lv<2> > add_ln20_reg_723;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<2> > add_ln25_fu_313_p2;
    sc_signal< sc_lv<2> > add_ln25_reg_728;
    sc_signal< sc_lv<1> > icmp_ln20_fu_301_p2;
    sc_signal< sc_lv<2> > add_ln23_fu_346_p2;
    sc_signal< sc_lv<2> > add_ln23_reg_736;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln23_fu_340_p2;
    sc_signal< sc_lv<32> > select_ln28_fu_455_p3;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<2> > add_ln13_1_fu_469_p2;
    sc_signal< sc_lv<2> > add_ln13_1_reg_754;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<2> > shl_ln25_1_fu_475_p2;
    sc_signal< sc_lv<2> > shl_ln25_1_reg_759;
    sc_signal< sc_lv<1> > icmp_ln13_1_fu_463_p2;
    sc_signal< sc_lv<4> > zext_ln16_1_fu_489_p1;
    sc_signal< sc_lv<4> > zext_ln16_1_reg_764;
    sc_signal< sc_lv<2> > add_ln16_1_fu_499_p2;
    sc_signal< sc_lv<2> > add_ln16_1_reg_772;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<2> > shl_ln26_1_fu_505_p2;
    sc_signal< sc_lv<2> > shl_ln26_1_reg_777;
    sc_signal< sc_lv<1> > icmp_ln16_1_fu_493_p2;
    sc_signal< sc_lv<2> > add_ln20_1_fu_517_p2;
    sc_signal< sc_lv<2> > add_ln20_1_reg_785;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<2> > add_ln25_1_fu_523_p2;
    sc_signal< sc_lv<2> > add_ln25_1_reg_790;
    sc_signal< sc_lv<1> > icmp_ln20_1_fu_511_p2;
    sc_signal< sc_lv<2> > add_ln23_1_fu_562_p2;
    sc_signal< sc_lv<2> > add_ln23_1_reg_798;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > icmp_ln23_1_fu_556_p2;
    sc_signal< sc_lv<32> > select_ln28_1_fu_681_p3;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<2> > r_0_0_reg_106;
    sc_signal< sc_lv<2> > c_0_0_reg_117;
    sc_signal< sc_lv<32> > max_0_0_reg_129;
    sc_signal< sc_lv<2> > mpr_0_0_reg_142;
    sc_signal< sc_lv<32> > max_1_0_reg_153;
    sc_signal< sc_lv<2> > mpc_0_0_reg_165;
    sc_signal< sc_lv<2> > r_0_1_reg_176;
    sc_signal< sc_lv<2> > c_0_1_reg_187;
    sc_signal< sc_lv<32> > max_0_1_reg_199;
    sc_signal< sc_lv<2> > mpr_0_1_reg_212;
    sc_signal< sc_lv<32> > max_1_1_reg_223;
    sc_signal< sc_lv<2> > mpc_0_1_reg_235;
    sc_signal< sc_lv<64> > zext_ln35_1_fu_335_p1;
    sc_signal< sc_lv<64> > zext_ln28_fu_366_p1;
    sc_signal< sc_lv<64> > zext_ln35_3_fu_551_p1;
    sc_signal< sc_lv<64> > tmp_18_fu_588_p3;
    sc_signal< sc_lv<32> > grp_fu_246_p1;
    sc_signal< sc_lv<3> > tmp_13_fu_271_p3;
    sc_signal< sc_lv<4> > zext_ln35_fu_318_p1;
    sc_signal< sc_lv<4> > add_ln35_fu_322_p2;
    sc_signal< sc_lv<5> > tmp_15_fu_327_p3;
    sc_signal< sc_lv<2> > add_ln26_fu_352_p2;
    sc_signal< sc_lv<5> > tmp_16_fu_357_p4;
    sc_signal< sc_lv<32> > bitcast_ln28_fu_371_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_1_fu_389_p1;
    sc_signal< sc_lv<8> > tmp_1_fu_375_p4;
    sc_signal< sc_lv<23> > trunc_ln28_fu_385_p1;
    sc_signal< sc_lv<1> > icmp_ln28_1_fu_413_p2;
    sc_signal< sc_lv<1> > icmp_ln28_fu_407_p2;
    sc_signal< sc_lv<8> > tmp_9_fu_393_p4;
    sc_signal< sc_lv<23> > trunc_ln28_1_fu_403_p1;
    sc_signal< sc_lv<1> > icmp_ln28_3_fu_431_p2;
    sc_signal< sc_lv<1> > icmp_ln28_2_fu_425_p2;
    sc_signal< sc_lv<1> > or_ln28_fu_419_p2;
    sc_signal< sc_lv<1> > or_ln28_1_fu_437_p2;
    sc_signal< sc_lv<1> > and_ln28_fu_443_p2;
    sc_signal< sc_lv<1> > grp_fu_246_p2;
    sc_signal< sc_lv<1> > and_ln28_1_fu_449_p2;
    sc_signal< sc_lv<3> > tmp_14_fu_481_p3;
    sc_signal< sc_lv<4> > zext_ln35_2_fu_528_p1;
    sc_signal< sc_lv<4> > add_ln35_1_fu_532_p2;
    sc_signal< sc_lv<5> > tmp_23_cast_fu_537_p3;
    sc_signal< sc_lv<5> > or_ln35_fu_545_p2;
    sc_signal< sc_lv<2> > add_ln26_1_fu_568_p2;
    sc_signal< sc_lv<5> > tmp_17_fu_573_p4;
    sc_signal< sc_lv<5> > or_ln28_4_fu_582_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_2_fu_597_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_3_fu_615_p1;
    sc_signal< sc_lv<8> > tmp_10_fu_601_p4;
    sc_signal< sc_lv<23> > trunc_ln28_2_fu_611_p1;
    sc_signal< sc_lv<1> > icmp_ln28_5_fu_639_p2;
    sc_signal< sc_lv<1> > icmp_ln28_4_fu_633_p2;
    sc_signal< sc_lv<8> > tmp_11_fu_619_p4;
    sc_signal< sc_lv<23> > trunc_ln28_3_fu_629_p1;
    sc_signal< sc_lv<1> > icmp_ln28_7_fu_657_p2;
    sc_signal< sc_lv<1> > icmp_ln28_6_fu_651_p2;
    sc_signal< sc_lv<1> > or_ln28_2_fu_645_p2;
    sc_signal< sc_lv<1> > or_ln28_3_fu_663_p2;
    sc_signal< sc_lv<1> > and_ln28_2_fu_669_p2;
    sc_signal< sc_lv<1> > and_ln28_3_fu_675_p2;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_state10;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<59> ap_const_lv59_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln13_1_fu_469_p2();
    void thread_add_ln13_fu_259_p2();
    void thread_add_ln16_1_fu_499_p2();
    void thread_add_ln16_fu_289_p2();
    void thread_add_ln20_1_fu_517_p2();
    void thread_add_ln20_fu_307_p2();
    void thread_add_ln23_1_fu_562_p2();
    void thread_add_ln23_fu_346_p2();
    void thread_add_ln25_1_fu_523_p2();
    void thread_add_ln25_fu_313_p2();
    void thread_add_ln26_1_fu_568_p2();
    void thread_add_ln26_fu_352_p2();
    void thread_add_ln35_1_fu_532_p2();
    void thread_add_ln35_fu_322_p2();
    void thread_and_ln28_1_fu_449_p2();
    void thread_and_ln28_2_fu_669_p2();
    void thread_and_ln28_3_fu_675_p2();
    void thread_and_ln28_fu_443_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bitcast_ln28_1_fu_389_p1();
    void thread_bitcast_ln28_2_fu_597_p1();
    void thread_bitcast_ln28_3_fu_615_p1();
    void thread_bitcast_ln28_fu_371_p1();
    void thread_conv_1_out_address0();
    void thread_conv_1_out_ce0();
    void thread_grp_fu_246_p1();
    void thread_icmp_ln13_1_fu_463_p2();
    void thread_icmp_ln13_fu_253_p2();
    void thread_icmp_ln16_1_fu_493_p2();
    void thread_icmp_ln16_fu_283_p2();
    void thread_icmp_ln20_1_fu_511_p2();
    void thread_icmp_ln20_fu_301_p2();
    void thread_icmp_ln23_1_fu_556_p2();
    void thread_icmp_ln23_fu_340_p2();
    void thread_icmp_ln28_1_fu_413_p2();
    void thread_icmp_ln28_2_fu_425_p2();
    void thread_icmp_ln28_3_fu_431_p2();
    void thread_icmp_ln28_4_fu_633_p2();
    void thread_icmp_ln28_5_fu_639_p2();
    void thread_icmp_ln28_6_fu_651_p2();
    void thread_icmp_ln28_7_fu_657_p2();
    void thread_icmp_ln28_fu_407_p2();
    void thread_max_pool_1_out_address0();
    void thread_max_pool_1_out_ce0();
    void thread_max_pool_1_out_d0();
    void thread_max_pool_1_out_we0();
    void thread_or_ln28_1_fu_437_p2();
    void thread_or_ln28_2_fu_645_p2();
    void thread_or_ln28_3_fu_663_p2();
    void thread_or_ln28_4_fu_582_p2();
    void thread_or_ln28_fu_419_p2();
    void thread_or_ln35_fu_545_p2();
    void thread_select_ln28_1_fu_681_p3();
    void thread_select_ln28_fu_455_p3();
    void thread_shl_ln25_1_fu_475_p2();
    void thread_shl_ln25_fu_265_p2();
    void thread_shl_ln26_1_fu_505_p2();
    void thread_shl_ln26_fu_295_p2();
    void thread_tmp_10_fu_601_p4();
    void thread_tmp_11_fu_619_p4();
    void thread_tmp_13_fu_271_p3();
    void thread_tmp_14_fu_481_p3();
    void thread_tmp_15_fu_327_p3();
    void thread_tmp_16_fu_357_p4();
    void thread_tmp_17_fu_573_p4();
    void thread_tmp_18_fu_588_p3();
    void thread_tmp_1_fu_375_p4();
    void thread_tmp_23_cast_fu_537_p3();
    void thread_tmp_9_fu_393_p4();
    void thread_trunc_ln28_1_fu_403_p1();
    void thread_trunc_ln28_2_fu_611_p1();
    void thread_trunc_ln28_3_fu_629_p1();
    void thread_trunc_ln28_fu_385_p1();
    void thread_zext_ln16_1_fu_489_p1();
    void thread_zext_ln16_fu_279_p1();
    void thread_zext_ln28_fu_366_p1();
    void thread_zext_ln35_1_fu_335_p1();
    void thread_zext_ln35_2_fu_528_p1();
    void thread_zext_ln35_3_fu_551_p1();
    void thread_zext_ln35_fu_318_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
