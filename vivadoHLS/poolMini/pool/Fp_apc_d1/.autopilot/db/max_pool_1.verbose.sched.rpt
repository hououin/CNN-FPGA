

================================================================
== Vivado HLS Report for 'max_pool_1'
================================================================
* Date:           Thu Aug 10 14:42:06 2023

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        pool
* Solution:       Fp_apc_d1
* Product family: virtex7
* Target device:  xc7vx485t-ffg1157-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+-----------+------------+
    |  Clock |  Target  | Estimated | Uncertainty|
    +--------+----------+-----------+------------+
    |ap_clk  | 40.00 ns | 34.204 ns |   5.00 ns  |
    +--------+----------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        7|        7| 0.280 us | 0.280 us |    7|    7|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+---------+---------+----------+-----------+-----------+------+----------+
        |               |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name   |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Filter_Loop  |        5|        5|         4|          2|          1|     2|    yes   |
        +---------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 2, D = 4, States = { 2 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 6 3 
3 --> 4 
4 --> 5 
5 --> 2 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.18>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([4 x float]* %max_pool_1_out_1), !map !7"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([4 x float]* %max_pool_1_out_0), !map !14"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x float]* %conv_1_out_3), !map !20"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x float]* %conv_1_out_2), !map !27"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x float]* %conv_1_out_1), !map !33"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x float]* %conv_1_out_0), !map !38"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @max_pool_1_str) nounwind"   --->   Operation 13 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (1.18ns)   --->   "br label %1" [pooling.cpp:10]   --->   Operation 14 'br' <Predicate = true> <Delay = 1.18>

State 2 <SV = 1> <Delay = 1.42>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%f_0 = phi i2 [ 0, %0 ], [ %f, %Filter_Loop ]"   --->   Operation 15 'phi' 'f_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.61ns)   --->   "%icmp_ln10 = icmp eq i2 %f_0, -2" [pooling.cpp:10]   --->   Operation 16 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 17 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (1.00ns)   --->   "%f = add i2 %f_0, 1" [pooling.cpp:10]   --->   Operation 18 'add' 'f' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "br i1 %icmp_ln10, label %2, label %Filter_Loop" [pooling.cpp:10]   --->   Operation 19 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln28 = zext i2 %f_0 to i64" [pooling.cpp:28]   --->   Operation 20 'zext' 'zext_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%conv_1_out_0_addr = getelementptr [8 x float]* %conv_1_out_0, i64 0, i64 %zext_ln28" [pooling.cpp:28]   --->   Operation 21 'getelementptr' 'conv_1_out_0_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.61ns)   --->   "%xor_ln28 = xor i2 %f_0, -2" [pooling.cpp:28]   --->   Operation 22 'xor' 'xor_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%tmp_44 = call i64 @_ssdm_op_BitConcatenate.i64.i62.i2(i62 1, i2 %f_0)" [pooling.cpp:28]   --->   Operation 23 'bitconcatenate' 'tmp_44' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%conv_1_out_0_addr_2 = getelementptr [8 x float]* %conv_1_out_0, i64 0, i64 %tmp_44" [pooling.cpp:28]   --->   Operation 24 'getelementptr' 'conv_1_out_0_addr_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%conv_1_out_1_addr = getelementptr [8 x float]* %conv_1_out_1, i64 0, i64 %zext_ln28" [pooling.cpp:28]   --->   Operation 25 'getelementptr' 'conv_1_out_1_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%conv_1_out_1_addr_2 = getelementptr [8 x float]* %conv_1_out_1, i64 0, i64 %tmp_44" [pooling.cpp:28]   --->   Operation 26 'getelementptr' 'conv_1_out_1_addr_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%conv_1_out_2_addr = getelementptr [8 x float]* %conv_1_out_2, i64 0, i64 %zext_ln28" [pooling.cpp:28]   --->   Operation 27 'getelementptr' 'conv_1_out_2_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%conv_1_out_2_addr_2 = getelementptr [8 x float]* %conv_1_out_2, i64 0, i64 %tmp_44" [pooling.cpp:28]   --->   Operation 28 'getelementptr' 'conv_1_out_2_addr_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%conv_1_out_3_addr = getelementptr [8 x float]* %conv_1_out_3, i64 0, i64 %zext_ln28" [pooling.cpp:28]   --->   Operation 29 'getelementptr' 'conv_1_out_3_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%conv_1_out_3_addr_2 = getelementptr [8 x float]* %conv_1_out_3, i64 0, i64 %tmp_44" [pooling.cpp:28]   --->   Operation 30 'getelementptr' 'conv_1_out_3_addr_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 31 [2/2] (1.42ns)   --->   "%conv_1_out_0_load = load float* %conv_1_out_0_addr, align 4" [pooling.cpp:28]   --->   Operation 31 'load' 'conv_1_out_0_load' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 32 [2/2] (1.42ns)   --->   "%conv_1_out_1_load = load float* %conv_1_out_1_addr, align 4" [pooling.cpp:28]   --->   Operation 32 'load' 'conv_1_out_1_load' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 33 [2/2] (1.42ns)   --->   "%conv_1_out_0_load_2 = load float* %conv_1_out_0_addr_2, align 4" [pooling.cpp:28]   --->   Operation 33 'load' 'conv_1_out_0_load_2' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 34 [2/2] (1.42ns)   --->   "%conv_1_out_1_load_2 = load float* %conv_1_out_1_addr_2, align 4" [pooling.cpp:28]   --->   Operation 34 'load' 'conv_1_out_1_load_2' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 35 [2/2] (1.42ns)   --->   "%conv_1_out_2_load = load float* %conv_1_out_2_addr, align 4" [pooling.cpp:28]   --->   Operation 35 'load' 'conv_1_out_2_load' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 36 [2/2] (1.42ns)   --->   "%conv_1_out_3_load = load float* %conv_1_out_3_addr, align 4" [pooling.cpp:28]   --->   Operation 36 'load' 'conv_1_out_3_load' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 37 [2/2] (1.42ns)   --->   "%conv_1_out_2_load_2 = load float* %conv_1_out_2_addr_2, align 4" [pooling.cpp:28]   --->   Operation 37 'load' 'conv_1_out_2_load_2' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 38 [2/2] (1.42ns)   --->   "%conv_1_out_3_load_2 = load float* %conv_1_out_3_addr_2, align 4" [pooling.cpp:28]   --->   Operation 38 'load' 'conv_1_out_3_load_2' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>

State 3 <SV = 2> <Delay = 17.8>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln28_1 = zext i2 %xor_ln28 to i64" [pooling.cpp:28]   --->   Operation 39 'zext' 'zext_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%conv_1_out_0_addr_1 = getelementptr [8 x float]* %conv_1_out_0, i64 0, i64 %zext_ln28_1" [pooling.cpp:28]   --->   Operation 40 'getelementptr' 'conv_1_out_0_addr_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%sext_ln28 = sext i2 %xor_ln28 to i3" [pooling.cpp:28]   --->   Operation 41 'sext' 'sext_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln28_2 = zext i3 %sext_ln28 to i64" [pooling.cpp:28]   --->   Operation 42 'zext' 'zext_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%conv_1_out_0_addr_3 = getelementptr [8 x float]* %conv_1_out_0, i64 0, i64 %zext_ln28_2" [pooling.cpp:28]   --->   Operation 43 'getelementptr' 'conv_1_out_0_addr_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%conv_1_out_1_addr_1 = getelementptr [8 x float]* %conv_1_out_1, i64 0, i64 %zext_ln28_1" [pooling.cpp:28]   --->   Operation 44 'getelementptr' 'conv_1_out_1_addr_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%conv_1_out_1_addr_3 = getelementptr [8 x float]* %conv_1_out_1, i64 0, i64 %zext_ln28_2" [pooling.cpp:28]   --->   Operation 45 'getelementptr' 'conv_1_out_1_addr_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%conv_1_out_2_addr_1 = getelementptr [8 x float]* %conv_1_out_2, i64 0, i64 %zext_ln28_1" [pooling.cpp:28]   --->   Operation 46 'getelementptr' 'conv_1_out_2_addr_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%conv_1_out_2_addr_3 = getelementptr [8 x float]* %conv_1_out_2, i64 0, i64 %zext_ln28_2" [pooling.cpp:28]   --->   Operation 47 'getelementptr' 'conv_1_out_2_addr_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%conv_1_out_3_addr_1 = getelementptr [8 x float]* %conv_1_out_3, i64 0, i64 %zext_ln28_1" [pooling.cpp:28]   --->   Operation 48 'getelementptr' 'conv_1_out_3_addr_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%conv_1_out_3_addr_3 = getelementptr [8 x float]* %conv_1_out_3, i64 0, i64 %zext_ln28_2" [pooling.cpp:28]   --->   Operation 49 'getelementptr' 'conv_1_out_3_addr_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 50 [1/2] (1.42ns)   --->   "%conv_1_out_0_load = load float* %conv_1_out_0_addr, align 4" [pooling.cpp:28]   --->   Operation 50 'load' 'conv_1_out_0_load' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%bitcast_ln28 = bitcast float %conv_1_out_0_load to i32" [pooling.cpp:28]   --->   Operation 51 'bitcast' 'bitcast_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_1 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 52 'partselect' 'tmp_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%trunc_ln28 = trunc i32 %bitcast_ln28 to i23" [pooling.cpp:28]   --->   Operation 53 'trunc' 'trunc_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (1.12ns)   --->   "%icmp_ln28 = icmp ne i8 %tmp_1, -1" [pooling.cpp:28]   --->   Operation 54 'icmp' 'icmp_ln28' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 55 [1/1] (1.48ns)   --->   "%icmp_ln28_1 = icmp eq i23 %trunc_ln28, 0" [pooling.cpp:28]   --->   Operation 55 'icmp' 'icmp_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node select_ln28)   --->   "%or_ln28 = or i1 %icmp_ln28_1, %icmp_ln28" [pooling.cpp:28]   --->   Operation 56 'or' 'or_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 57 [1/1] (15.7ns)   --->   "%tmp_2 = fcmp ogt float %conv_1_out_0_load, 0x3810000000000000" [pooling.cpp:28]   --->   Operation 57 'fcmp' 'tmp_2' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node select_ln28)   --->   "%and_ln28 = and i1 %or_ln28, %tmp_2" [pooling.cpp:28]   --->   Operation 58 'and' 'and_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 59 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28 = select i1 %and_ln28, float %conv_1_out_0_load, float 0x3810000000000000" [pooling.cpp:28]   --->   Operation 59 'select' 'select_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 60 [2/2] (1.42ns)   --->   "%conv_1_out_0_load_1 = load float* %conv_1_out_0_addr_1, align 4" [pooling.cpp:28]   --->   Operation 60 'load' 'conv_1_out_0_load_1' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 61 [1/2] (1.42ns)   --->   "%conv_1_out_1_load = load float* %conv_1_out_1_addr, align 4" [pooling.cpp:28]   --->   Operation 61 'load' 'conv_1_out_1_load' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 62 [2/2] (1.42ns)   --->   "%conv_1_out_1_load_1 = load float* %conv_1_out_1_addr_1, align 4" [pooling.cpp:28]   --->   Operation 62 'load' 'conv_1_out_1_load_1' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 63 [1/2] (1.42ns)   --->   "%conv_1_out_0_load_2 = load float* %conv_1_out_0_addr_2, align 4" [pooling.cpp:28]   --->   Operation 63 'load' 'conv_1_out_0_load_2' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%bitcast_ln28_7 = bitcast float %conv_1_out_0_load_2 to i32" [pooling.cpp:28]   --->   Operation 64 'bitcast' 'bitcast_ln28_7' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%tmp_11 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_7, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 65 'partselect' 'tmp_11' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%trunc_ln28_7 = trunc i32 %bitcast_ln28_7 to i23" [pooling.cpp:28]   --->   Operation 66 'trunc' 'trunc_ln28_7' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (1.12ns)   --->   "%icmp_ln28_14 = icmp ne i8 %tmp_11, -1" [pooling.cpp:28]   --->   Operation 67 'icmp' 'icmp_ln28_14' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 68 [1/1] (1.48ns)   --->   "%icmp_ln28_15 = icmp eq i23 %trunc_ln28_7, 0" [pooling.cpp:28]   --->   Operation 68 'icmp' 'icmp_ln28_15' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node select_ln28_4)   --->   "%or_ln28_7 = or i1 %icmp_ln28_15, %icmp_ln28_14" [pooling.cpp:28]   --->   Operation 69 'or' 'or_ln28_7' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 70 [1/1] (15.7ns)   --->   "%tmp_12 = fcmp ogt float %conv_1_out_0_load_2, 0x3810000000000000" [pooling.cpp:28]   --->   Operation 70 'fcmp' 'tmp_12' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node select_ln28_4)   --->   "%and_ln28_7 = and i1 %or_ln28_7, %tmp_12" [pooling.cpp:28]   --->   Operation 71 'and' 'and_ln28_7' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 72 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_4 = select i1 %and_ln28_7, float %conv_1_out_0_load_2, float 0x3810000000000000" [pooling.cpp:28]   --->   Operation 72 'select' 'select_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 73 [2/2] (1.42ns)   --->   "%conv_1_out_0_load_3 = load float* %conv_1_out_0_addr_3, align 4" [pooling.cpp:28]   --->   Operation 73 'load' 'conv_1_out_0_load_3' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 74 [1/2] (1.42ns)   --->   "%conv_1_out_1_load_2 = load float* %conv_1_out_1_addr_2, align 4" [pooling.cpp:28]   --->   Operation 74 'load' 'conv_1_out_1_load_2' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 75 [2/2] (1.42ns)   --->   "%conv_1_out_1_load_3 = load float* %conv_1_out_1_addr_3, align 4" [pooling.cpp:28]   --->   Operation 75 'load' 'conv_1_out_1_load_3' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 76 [1/2] (1.42ns)   --->   "%conv_1_out_2_load = load float* %conv_1_out_2_addr, align 4" [pooling.cpp:28]   --->   Operation 76 'load' 'conv_1_out_2_load' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%bitcast_ln28_14 = bitcast float %conv_1_out_2_load to i32" [pooling.cpp:28]   --->   Operation 77 'bitcast' 'bitcast_ln28_14' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%tmp_22 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_14, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 78 'partselect' 'tmp_22' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%trunc_ln28_14 = trunc i32 %bitcast_ln28_14 to i23" [pooling.cpp:28]   --->   Operation 79 'trunc' 'trunc_ln28_14' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (1.12ns)   --->   "%icmp_ln28_28 = icmp ne i8 %tmp_22, -1" [pooling.cpp:28]   --->   Operation 80 'icmp' 'icmp_ln28_28' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 81 [1/1] (1.48ns)   --->   "%icmp_ln28_29 = icmp eq i23 %trunc_ln28_14, 0" [pooling.cpp:28]   --->   Operation 81 'icmp' 'icmp_ln28_29' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node select_ln28_8)   --->   "%or_ln28_14 = or i1 %icmp_ln28_29, %icmp_ln28_28" [pooling.cpp:28]   --->   Operation 82 'or' 'or_ln28_14' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 83 [1/1] (15.7ns)   --->   "%tmp_23 = fcmp ogt float %conv_1_out_2_load, 0x3810000000000000" [pooling.cpp:28]   --->   Operation 83 'fcmp' 'tmp_23' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node select_ln28_8)   --->   "%and_ln28_14 = and i1 %or_ln28_14, %tmp_23" [pooling.cpp:28]   --->   Operation 84 'and' 'and_ln28_14' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 85 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_8 = select i1 %and_ln28_14, float %conv_1_out_2_load, float 0x3810000000000000" [pooling.cpp:28]   --->   Operation 85 'select' 'select_ln28_8' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 86 [2/2] (1.42ns)   --->   "%conv_1_out_2_load_1 = load float* %conv_1_out_2_addr_1, align 4" [pooling.cpp:28]   --->   Operation 86 'load' 'conv_1_out_2_load_1' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 87 [1/2] (1.42ns)   --->   "%conv_1_out_3_load = load float* %conv_1_out_3_addr, align 4" [pooling.cpp:28]   --->   Operation 87 'load' 'conv_1_out_3_load' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 88 [2/2] (1.42ns)   --->   "%conv_1_out_3_load_1 = load float* %conv_1_out_3_addr_1, align 4" [pooling.cpp:28]   --->   Operation 88 'load' 'conv_1_out_3_load_1' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 89 [1/2] (1.42ns)   --->   "%conv_1_out_2_load_2 = load float* %conv_1_out_2_addr_2, align 4" [pooling.cpp:28]   --->   Operation 89 'load' 'conv_1_out_2_load_2' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%bitcast_ln28_21 = bitcast float %conv_1_out_2_load_2 to i32" [pooling.cpp:28]   --->   Operation 90 'bitcast' 'bitcast_ln28_21' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "%tmp_33 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_21, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 91 'partselect' 'tmp_33' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%trunc_ln28_21 = trunc i32 %bitcast_ln28_21 to i23" [pooling.cpp:28]   --->   Operation 92 'trunc' 'trunc_ln28_21' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (1.12ns)   --->   "%icmp_ln28_42 = icmp ne i8 %tmp_33, -1" [pooling.cpp:28]   --->   Operation 93 'icmp' 'icmp_ln28_42' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 94 [1/1] (1.48ns)   --->   "%icmp_ln28_43 = icmp eq i23 %trunc_ln28_21, 0" [pooling.cpp:28]   --->   Operation 94 'icmp' 'icmp_ln28_43' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node select_ln28_12)   --->   "%or_ln28_21 = or i1 %icmp_ln28_43, %icmp_ln28_42" [pooling.cpp:28]   --->   Operation 95 'or' 'or_ln28_21' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 96 [1/1] (15.7ns)   --->   "%tmp_34 = fcmp ogt float %conv_1_out_2_load_2, 0x3810000000000000" [pooling.cpp:28]   --->   Operation 96 'fcmp' 'tmp_34' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node select_ln28_12)   --->   "%and_ln28_21 = and i1 %or_ln28_21, %tmp_34" [pooling.cpp:28]   --->   Operation 97 'and' 'and_ln28_21' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 98 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_12 = select i1 %and_ln28_21, float %conv_1_out_2_load_2, float 0x3810000000000000" [pooling.cpp:28]   --->   Operation 98 'select' 'select_ln28_12' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 99 [2/2] (1.42ns)   --->   "%conv_1_out_2_load_3 = load float* %conv_1_out_2_addr_3, align 4" [pooling.cpp:28]   --->   Operation 99 'load' 'conv_1_out_2_load_3' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 100 [1/2] (1.42ns)   --->   "%conv_1_out_3_load_2 = load float* %conv_1_out_3_addr_2, align 4" [pooling.cpp:28]   --->   Operation 100 'load' 'conv_1_out_3_load_2' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 101 [2/2] (1.42ns)   --->   "%conv_1_out_3_load_3 = load float* %conv_1_out_3_addr_3, align 4" [pooling.cpp:28]   --->   Operation 101 'load' 'conv_1_out_3_load_3' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>

State 4 <SV = 3> <Delay = 34.2>
ST_4 : Operation 102 [1/2] (1.42ns)   --->   "%conv_1_out_0_load_1 = load float* %conv_1_out_0_addr_1, align 4" [pooling.cpp:28]   --->   Operation 102 'load' 'conv_1_out_0_load_1' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_4 : Operation 103 [1/1] (0.00ns)   --->   "%bitcast_ln28_1 = bitcast float %conv_1_out_0_load_1 to i32" [pooling.cpp:28]   --->   Operation 103 'bitcast' 'bitcast_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 104 [1/1] (0.00ns)   --->   "%tmp_3 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_1, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 104 'partselect' 'tmp_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 105 [1/1] (0.00ns)   --->   "%trunc_ln28_1 = trunc i32 %bitcast_ln28_1 to i23" [pooling.cpp:28]   --->   Operation 105 'trunc' 'trunc_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 106 [1/1] (0.00ns)   --->   "%bitcast_ln28_2 = bitcast float %select_ln28 to i32" [pooling.cpp:28]   --->   Operation 106 'bitcast' 'bitcast_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 107 [1/1] (0.00ns)   --->   "%tmp_4 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_2, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 107 'partselect' 'tmp_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 108 [1/1] (0.00ns)   --->   "%trunc_ln28_2 = trunc i32 %bitcast_ln28_2 to i23" [pooling.cpp:28]   --->   Operation 108 'trunc' 'trunc_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 109 [1/1] (1.12ns)   --->   "%icmp_ln28_2 = icmp ne i8 %tmp_3, -1" [pooling.cpp:28]   --->   Operation 109 'icmp' 'icmp_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 110 [1/1] (1.48ns)   --->   "%icmp_ln28_3 = icmp eq i23 %trunc_ln28_1, 0" [pooling.cpp:28]   --->   Operation 110 'icmp' 'icmp_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_2)   --->   "%or_ln28_1 = or i1 %icmp_ln28_3, %icmp_ln28_2" [pooling.cpp:28]   --->   Operation 111 'or' 'or_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 112 [1/1] (1.12ns)   --->   "%icmp_ln28_4 = icmp ne i8 %tmp_4, -1" [pooling.cpp:28]   --->   Operation 112 'icmp' 'icmp_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 113 [1/1] (1.48ns)   --->   "%icmp_ln28_5 = icmp eq i23 %trunc_ln28_2, 0" [pooling.cpp:28]   --->   Operation 113 'icmp' 'icmp_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 114 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_2)   --->   "%or_ln28_2 = or i1 %icmp_ln28_5, %icmp_ln28_4" [pooling.cpp:28]   --->   Operation 114 'or' 'or_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_2)   --->   "%and_ln28_1 = and i1 %or_ln28_1, %or_ln28_2" [pooling.cpp:28]   --->   Operation 115 'and' 'and_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 116 [1/1] (15.7ns)   --->   "%tmp_5 = fcmp ogt float %conv_1_out_0_load_1, %select_ln28" [pooling.cpp:28]   --->   Operation 116 'fcmp' 'tmp_5' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 117 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln28_2 = and i1 %and_ln28_1, %tmp_5" [pooling.cpp:28]   --->   Operation 117 'and' 'and_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 118 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_1 = select i1 %and_ln28_2, float %conv_1_out_0_load_1, float %select_ln28" [pooling.cpp:28]   --->   Operation 118 'select' 'select_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 119 [1/1] (15.7ns)   --->   "%tmp_8 = fcmp ogt float %conv_1_out_1_load, %select_ln28_1" [pooling.cpp:28]   --->   Operation 119 'fcmp' 'tmp_8' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 120 [1/2] (1.42ns)   --->   "%conv_1_out_1_load_1 = load float* %conv_1_out_1_addr_1, align 4" [pooling.cpp:28]   --->   Operation 120 'load' 'conv_1_out_1_load_1' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_4 : Operation 121 [1/2] (1.42ns)   --->   "%conv_1_out_0_load_3 = load float* %conv_1_out_0_addr_3, align 4" [pooling.cpp:28]   --->   Operation 121 'load' 'conv_1_out_0_load_3' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_4 : Operation 122 [1/1] (0.00ns)   --->   "%bitcast_ln28_8 = bitcast float %conv_1_out_0_load_3 to i32" [pooling.cpp:28]   --->   Operation 122 'bitcast' 'bitcast_ln28_8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 123 [1/1] (0.00ns)   --->   "%tmp_13 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_8, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 123 'partselect' 'tmp_13' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 124 [1/1] (0.00ns)   --->   "%trunc_ln28_8 = trunc i32 %bitcast_ln28_8 to i23" [pooling.cpp:28]   --->   Operation 124 'trunc' 'trunc_ln28_8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 125 [1/1] (0.00ns)   --->   "%bitcast_ln28_9 = bitcast float %select_ln28_4 to i32" [pooling.cpp:28]   --->   Operation 125 'bitcast' 'bitcast_ln28_9' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 126 [1/1] (0.00ns)   --->   "%tmp_14 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_9, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 126 'partselect' 'tmp_14' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 127 [1/1] (0.00ns)   --->   "%trunc_ln28_9 = trunc i32 %bitcast_ln28_9 to i23" [pooling.cpp:28]   --->   Operation 127 'trunc' 'trunc_ln28_9' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 128 [1/1] (1.12ns)   --->   "%icmp_ln28_16 = icmp ne i8 %tmp_13, -1" [pooling.cpp:28]   --->   Operation 128 'icmp' 'icmp_ln28_16' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 129 [1/1] (1.48ns)   --->   "%icmp_ln28_17 = icmp eq i23 %trunc_ln28_8, 0" [pooling.cpp:28]   --->   Operation 129 'icmp' 'icmp_ln28_17' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_9)   --->   "%or_ln28_8 = or i1 %icmp_ln28_17, %icmp_ln28_16" [pooling.cpp:28]   --->   Operation 130 'or' 'or_ln28_8' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 131 [1/1] (1.12ns)   --->   "%icmp_ln28_18 = icmp ne i8 %tmp_14, -1" [pooling.cpp:28]   --->   Operation 131 'icmp' 'icmp_ln28_18' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 132 [1/1] (1.48ns)   --->   "%icmp_ln28_19 = icmp eq i23 %trunc_ln28_9, 0" [pooling.cpp:28]   --->   Operation 132 'icmp' 'icmp_ln28_19' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_9)   --->   "%or_ln28_9 = or i1 %icmp_ln28_19, %icmp_ln28_18" [pooling.cpp:28]   --->   Operation 133 'or' 'or_ln28_9' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_9)   --->   "%and_ln28_8 = and i1 %or_ln28_8, %or_ln28_9" [pooling.cpp:28]   --->   Operation 134 'and' 'and_ln28_8' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 135 [1/1] (15.7ns)   --->   "%tmp_15 = fcmp ogt float %conv_1_out_0_load_3, %select_ln28_4" [pooling.cpp:28]   --->   Operation 135 'fcmp' 'tmp_15' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 136 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln28_9 = and i1 %and_ln28_8, %tmp_15" [pooling.cpp:28]   --->   Operation 136 'and' 'and_ln28_9' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 137 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_5 = select i1 %and_ln28_9, float %conv_1_out_0_load_3, float %select_ln28_4" [pooling.cpp:28]   --->   Operation 137 'select' 'select_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 138 [1/1] (15.7ns)   --->   "%tmp_18 = fcmp ogt float %conv_1_out_1_load_2, %select_ln28_5" [pooling.cpp:28]   --->   Operation 138 'fcmp' 'tmp_18' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 139 [1/2] (1.42ns)   --->   "%conv_1_out_1_load_3 = load float* %conv_1_out_1_addr_3, align 4" [pooling.cpp:28]   --->   Operation 139 'load' 'conv_1_out_1_load_3' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_4 : Operation 140 [1/2] (1.42ns)   --->   "%conv_1_out_2_load_1 = load float* %conv_1_out_2_addr_1, align 4" [pooling.cpp:28]   --->   Operation 140 'load' 'conv_1_out_2_load_1' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_4 : Operation 141 [1/1] (0.00ns)   --->   "%bitcast_ln28_15 = bitcast float %conv_1_out_2_load_1 to i32" [pooling.cpp:28]   --->   Operation 141 'bitcast' 'bitcast_ln28_15' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 142 [1/1] (0.00ns)   --->   "%tmp_24 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_15, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 142 'partselect' 'tmp_24' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 143 [1/1] (0.00ns)   --->   "%trunc_ln28_15 = trunc i32 %bitcast_ln28_15 to i23" [pooling.cpp:28]   --->   Operation 143 'trunc' 'trunc_ln28_15' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 144 [1/1] (0.00ns)   --->   "%bitcast_ln28_16 = bitcast float %select_ln28_8 to i32" [pooling.cpp:28]   --->   Operation 144 'bitcast' 'bitcast_ln28_16' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 145 [1/1] (0.00ns)   --->   "%tmp_25 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_16, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 145 'partselect' 'tmp_25' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 146 [1/1] (0.00ns)   --->   "%trunc_ln28_16 = trunc i32 %bitcast_ln28_16 to i23" [pooling.cpp:28]   --->   Operation 146 'trunc' 'trunc_ln28_16' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 147 [1/1] (1.12ns)   --->   "%icmp_ln28_30 = icmp ne i8 %tmp_24, -1" [pooling.cpp:28]   --->   Operation 147 'icmp' 'icmp_ln28_30' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 148 [1/1] (1.48ns)   --->   "%icmp_ln28_31 = icmp eq i23 %trunc_ln28_15, 0" [pooling.cpp:28]   --->   Operation 148 'icmp' 'icmp_ln28_31' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_16)   --->   "%or_ln28_15 = or i1 %icmp_ln28_31, %icmp_ln28_30" [pooling.cpp:28]   --->   Operation 149 'or' 'or_ln28_15' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 150 [1/1] (1.12ns)   --->   "%icmp_ln28_32 = icmp ne i8 %tmp_25, -1" [pooling.cpp:28]   --->   Operation 150 'icmp' 'icmp_ln28_32' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 151 [1/1] (1.48ns)   --->   "%icmp_ln28_33 = icmp eq i23 %trunc_ln28_16, 0" [pooling.cpp:28]   --->   Operation 151 'icmp' 'icmp_ln28_33' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 152 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_16)   --->   "%or_ln28_16 = or i1 %icmp_ln28_33, %icmp_ln28_32" [pooling.cpp:28]   --->   Operation 152 'or' 'or_ln28_16' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 153 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_16)   --->   "%and_ln28_15 = and i1 %or_ln28_15, %or_ln28_16" [pooling.cpp:28]   --->   Operation 153 'and' 'and_ln28_15' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 154 [1/1] (15.7ns)   --->   "%tmp_26 = fcmp ogt float %conv_1_out_2_load_1, %select_ln28_8" [pooling.cpp:28]   --->   Operation 154 'fcmp' 'tmp_26' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 155 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln28_16 = and i1 %and_ln28_15, %tmp_26" [pooling.cpp:28]   --->   Operation 155 'and' 'and_ln28_16' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 156 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_9 = select i1 %and_ln28_16, float %conv_1_out_2_load_1, float %select_ln28_8" [pooling.cpp:28]   --->   Operation 156 'select' 'select_ln28_9' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 157 [1/1] (15.7ns)   --->   "%tmp_29 = fcmp ogt float %conv_1_out_3_load, %select_ln28_9" [pooling.cpp:28]   --->   Operation 157 'fcmp' 'tmp_29' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 158 [1/2] (1.42ns)   --->   "%conv_1_out_3_load_1 = load float* %conv_1_out_3_addr_1, align 4" [pooling.cpp:28]   --->   Operation 158 'load' 'conv_1_out_3_load_1' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_4 : Operation 159 [1/2] (1.42ns)   --->   "%conv_1_out_2_load_3 = load float* %conv_1_out_2_addr_3, align 4" [pooling.cpp:28]   --->   Operation 159 'load' 'conv_1_out_2_load_3' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_4 : Operation 160 [1/1] (0.00ns)   --->   "%bitcast_ln28_22 = bitcast float %conv_1_out_2_load_3 to i32" [pooling.cpp:28]   --->   Operation 160 'bitcast' 'bitcast_ln28_22' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 161 [1/1] (0.00ns)   --->   "%tmp_35 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_22, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 161 'partselect' 'tmp_35' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 162 [1/1] (0.00ns)   --->   "%trunc_ln28_22 = trunc i32 %bitcast_ln28_22 to i23" [pooling.cpp:28]   --->   Operation 162 'trunc' 'trunc_ln28_22' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 163 [1/1] (0.00ns)   --->   "%bitcast_ln28_23 = bitcast float %select_ln28_12 to i32" [pooling.cpp:28]   --->   Operation 163 'bitcast' 'bitcast_ln28_23' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 164 [1/1] (0.00ns)   --->   "%tmp_36 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_23, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 164 'partselect' 'tmp_36' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 165 [1/1] (0.00ns)   --->   "%trunc_ln28_23 = trunc i32 %bitcast_ln28_23 to i23" [pooling.cpp:28]   --->   Operation 165 'trunc' 'trunc_ln28_23' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 166 [1/1] (1.12ns)   --->   "%icmp_ln28_44 = icmp ne i8 %tmp_35, -1" [pooling.cpp:28]   --->   Operation 166 'icmp' 'icmp_ln28_44' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 167 [1/1] (1.48ns)   --->   "%icmp_ln28_45 = icmp eq i23 %trunc_ln28_22, 0" [pooling.cpp:28]   --->   Operation 167 'icmp' 'icmp_ln28_45' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 168 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_23)   --->   "%or_ln28_22 = or i1 %icmp_ln28_45, %icmp_ln28_44" [pooling.cpp:28]   --->   Operation 168 'or' 'or_ln28_22' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 169 [1/1] (1.12ns)   --->   "%icmp_ln28_46 = icmp ne i8 %tmp_36, -1" [pooling.cpp:28]   --->   Operation 169 'icmp' 'icmp_ln28_46' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 170 [1/1] (1.48ns)   --->   "%icmp_ln28_47 = icmp eq i23 %trunc_ln28_23, 0" [pooling.cpp:28]   --->   Operation 170 'icmp' 'icmp_ln28_47' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_23)   --->   "%or_ln28_23 = or i1 %icmp_ln28_47, %icmp_ln28_46" [pooling.cpp:28]   --->   Operation 171 'or' 'or_ln28_23' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 172 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_23)   --->   "%and_ln28_22 = and i1 %or_ln28_22, %or_ln28_23" [pooling.cpp:28]   --->   Operation 172 'and' 'and_ln28_22' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 173 [1/1] (15.7ns)   --->   "%tmp_37 = fcmp ogt float %conv_1_out_2_load_3, %select_ln28_12" [pooling.cpp:28]   --->   Operation 173 'fcmp' 'tmp_37' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 174 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln28_23 = and i1 %and_ln28_22, %tmp_37" [pooling.cpp:28]   --->   Operation 174 'and' 'and_ln28_23' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 175 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_13 = select i1 %and_ln28_23, float %conv_1_out_2_load_3, float %select_ln28_12" [pooling.cpp:28]   --->   Operation 175 'select' 'select_ln28_13' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 176 [1/1] (15.7ns)   --->   "%tmp_40 = fcmp ogt float %conv_1_out_3_load_2, %select_ln28_13" [pooling.cpp:28]   --->   Operation 176 'fcmp' 'tmp_40' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 177 [1/2] (1.42ns)   --->   "%conv_1_out_3_load_3 = load float* %conv_1_out_3_addr_3, align 4" [pooling.cpp:28]   --->   Operation 177 'load' 'conv_1_out_3_load_3' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>

State 5 <SV = 4> <Delay = 21.1>
ST_5 : Operation 178 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str2) nounwind" [pooling.cpp:11]   --->   Operation 178 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 179 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str2) nounwind" [pooling.cpp:11]   --->   Operation 179 'specregionbegin' 'tmp' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 180 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [pooling.cpp:12]   --->   Operation 180 'specpipeline' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 181 [1/1] (0.00ns)   --->   "%max_pool_1_out_0_ad = getelementptr [4 x float]* %max_pool_1_out_0, i64 0, i64 %zext_ln28" [pooling.cpp:35]   --->   Operation 181 'getelementptr' 'max_pool_1_out_0_ad' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 182 [1/1] (0.00ns)   --->   "%max_pool_1_out_0_ad_1 = getelementptr [4 x float]* %max_pool_1_out_0, i64 0, i64 %zext_ln28_1" [pooling.cpp:35]   --->   Operation 182 'getelementptr' 'max_pool_1_out_0_ad_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 183 [1/1] (0.00ns)   --->   "%max_pool_1_out_1_ad = getelementptr [4 x float]* %max_pool_1_out_1, i64 0, i64 %zext_ln28" [pooling.cpp:35]   --->   Operation 183 'getelementptr' 'max_pool_1_out_1_ad' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 184 [1/1] (0.00ns)   --->   "%max_pool_1_out_1_ad_1 = getelementptr [4 x float]* %max_pool_1_out_1, i64 0, i64 %zext_ln28_1" [pooling.cpp:35]   --->   Operation 184 'getelementptr' 'max_pool_1_out_1_ad_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 185 [1/1] (0.00ns)   --->   "%bitcast_ln28_3 = bitcast float %conv_1_out_1_load to i32" [pooling.cpp:28]   --->   Operation 185 'bitcast' 'bitcast_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 186 [1/1] (0.00ns)   --->   "%tmp_6 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_3, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 186 'partselect' 'tmp_6' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 187 [1/1] (0.00ns)   --->   "%trunc_ln28_3 = trunc i32 %bitcast_ln28_3 to i23" [pooling.cpp:28]   --->   Operation 187 'trunc' 'trunc_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 188 [1/1] (0.00ns)   --->   "%bitcast_ln28_4 = bitcast float %select_ln28_1 to i32" [pooling.cpp:28]   --->   Operation 188 'bitcast' 'bitcast_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 189 [1/1] (0.00ns)   --->   "%tmp_7 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_4, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 189 'partselect' 'tmp_7' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 190 [1/1] (0.00ns)   --->   "%trunc_ln28_4 = trunc i32 %bitcast_ln28_4 to i23" [pooling.cpp:28]   --->   Operation 190 'trunc' 'trunc_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 191 [1/1] (1.12ns)   --->   "%icmp_ln28_6 = icmp ne i8 %tmp_6, -1" [pooling.cpp:28]   --->   Operation 191 'icmp' 'icmp_ln28_6' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 192 [1/1] (1.48ns)   --->   "%icmp_ln28_7 = icmp eq i23 %trunc_ln28_3, 0" [pooling.cpp:28]   --->   Operation 192 'icmp' 'icmp_ln28_7' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 193 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_4)   --->   "%or_ln28_3 = or i1 %icmp_ln28_7, %icmp_ln28_6" [pooling.cpp:28]   --->   Operation 193 'or' 'or_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 194 [1/1] (1.12ns)   --->   "%icmp_ln28_8 = icmp ne i8 %tmp_7, -1" [pooling.cpp:28]   --->   Operation 194 'icmp' 'icmp_ln28_8' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 195 [1/1] (1.48ns)   --->   "%icmp_ln28_9 = icmp eq i23 %trunc_ln28_4, 0" [pooling.cpp:28]   --->   Operation 195 'icmp' 'icmp_ln28_9' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 196 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_4)   --->   "%or_ln28_4 = or i1 %icmp_ln28_9, %icmp_ln28_8" [pooling.cpp:28]   --->   Operation 196 'or' 'or_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 197 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_4)   --->   "%and_ln28_3 = and i1 %or_ln28_3, %or_ln28_4" [pooling.cpp:28]   --->   Operation 197 'and' 'and_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 198 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln28_4 = and i1 %and_ln28_3, %tmp_8" [pooling.cpp:28]   --->   Operation 198 'and' 'and_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 199 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_2 = select i1 %and_ln28_4, float %conv_1_out_1_load, float %select_ln28_1" [pooling.cpp:28]   --->   Operation 199 'select' 'select_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 200 [1/1] (0.00ns)   --->   "%bitcast_ln28_5 = bitcast float %conv_1_out_1_load_1 to i32" [pooling.cpp:28]   --->   Operation 200 'bitcast' 'bitcast_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 201 [1/1] (0.00ns)   --->   "%tmp_9 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_5, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 201 'partselect' 'tmp_9' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 202 [1/1] (0.00ns)   --->   "%trunc_ln28_5 = trunc i32 %bitcast_ln28_5 to i23" [pooling.cpp:28]   --->   Operation 202 'trunc' 'trunc_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 203 [1/1] (0.00ns)   --->   "%bitcast_ln28_6 = bitcast float %select_ln28_2 to i32" [pooling.cpp:28]   --->   Operation 203 'bitcast' 'bitcast_ln28_6' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 204 [1/1] (0.00ns)   --->   "%tmp_s = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_6, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 204 'partselect' 'tmp_s' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 205 [1/1] (0.00ns)   --->   "%trunc_ln28_6 = trunc i32 %bitcast_ln28_6 to i23" [pooling.cpp:28]   --->   Operation 205 'trunc' 'trunc_ln28_6' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 206 [1/1] (1.12ns)   --->   "%icmp_ln28_10 = icmp ne i8 %tmp_9, -1" [pooling.cpp:28]   --->   Operation 206 'icmp' 'icmp_ln28_10' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 207 [1/1] (1.48ns)   --->   "%icmp_ln28_11 = icmp eq i23 %trunc_ln28_5, 0" [pooling.cpp:28]   --->   Operation 207 'icmp' 'icmp_ln28_11' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 208 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_6)   --->   "%or_ln28_5 = or i1 %icmp_ln28_11, %icmp_ln28_10" [pooling.cpp:28]   --->   Operation 208 'or' 'or_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 209 [1/1] (1.12ns)   --->   "%icmp_ln28_12 = icmp ne i8 %tmp_s, -1" [pooling.cpp:28]   --->   Operation 209 'icmp' 'icmp_ln28_12' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 210 [1/1] (1.48ns)   --->   "%icmp_ln28_13 = icmp eq i23 %trunc_ln28_6, 0" [pooling.cpp:28]   --->   Operation 210 'icmp' 'icmp_ln28_13' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 211 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_6)   --->   "%or_ln28_6 = or i1 %icmp_ln28_13, %icmp_ln28_12" [pooling.cpp:28]   --->   Operation 211 'or' 'or_ln28_6' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 212 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_6)   --->   "%and_ln28_5 = and i1 %or_ln28_5, %or_ln28_6" [pooling.cpp:28]   --->   Operation 212 'and' 'and_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 213 [1/1] (15.7ns)   --->   "%tmp_10 = fcmp ogt float %conv_1_out_1_load_1, %select_ln28_2" [pooling.cpp:28]   --->   Operation 213 'fcmp' 'tmp_10' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 214 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln28_6 = and i1 %and_ln28_5, %tmp_10" [pooling.cpp:28]   --->   Operation 214 'and' 'and_ln28_6' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 215 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_3 = select i1 %and_ln28_6, float %conv_1_out_1_load_1, float %select_ln28_2" [pooling.cpp:28]   --->   Operation 215 'select' 'select_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 216 [1/1] (1.42ns)   --->   "store float %select_ln28_3, float* %max_pool_1_out_0_ad, align 4" [pooling.cpp:35]   --->   Operation 216 'store' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_5 : Operation 217 [1/1] (0.00ns)   --->   "%bitcast_ln28_10 = bitcast float %conv_1_out_1_load_2 to i32" [pooling.cpp:28]   --->   Operation 217 'bitcast' 'bitcast_ln28_10' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 218 [1/1] (0.00ns)   --->   "%tmp_16 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_10, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 218 'partselect' 'tmp_16' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 219 [1/1] (0.00ns)   --->   "%trunc_ln28_10 = trunc i32 %bitcast_ln28_10 to i23" [pooling.cpp:28]   --->   Operation 219 'trunc' 'trunc_ln28_10' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 220 [1/1] (0.00ns)   --->   "%bitcast_ln28_11 = bitcast float %select_ln28_5 to i32" [pooling.cpp:28]   --->   Operation 220 'bitcast' 'bitcast_ln28_11' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 221 [1/1] (0.00ns)   --->   "%tmp_17 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_11, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 221 'partselect' 'tmp_17' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 222 [1/1] (0.00ns)   --->   "%trunc_ln28_11 = trunc i32 %bitcast_ln28_11 to i23" [pooling.cpp:28]   --->   Operation 222 'trunc' 'trunc_ln28_11' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 223 [1/1] (1.12ns)   --->   "%icmp_ln28_20 = icmp ne i8 %tmp_16, -1" [pooling.cpp:28]   --->   Operation 223 'icmp' 'icmp_ln28_20' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 224 [1/1] (1.48ns)   --->   "%icmp_ln28_21 = icmp eq i23 %trunc_ln28_10, 0" [pooling.cpp:28]   --->   Operation 224 'icmp' 'icmp_ln28_21' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 225 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_11)   --->   "%or_ln28_10 = or i1 %icmp_ln28_21, %icmp_ln28_20" [pooling.cpp:28]   --->   Operation 225 'or' 'or_ln28_10' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 226 [1/1] (1.12ns)   --->   "%icmp_ln28_22 = icmp ne i8 %tmp_17, -1" [pooling.cpp:28]   --->   Operation 226 'icmp' 'icmp_ln28_22' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 227 [1/1] (1.48ns)   --->   "%icmp_ln28_23 = icmp eq i23 %trunc_ln28_11, 0" [pooling.cpp:28]   --->   Operation 227 'icmp' 'icmp_ln28_23' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 228 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_11)   --->   "%or_ln28_11 = or i1 %icmp_ln28_23, %icmp_ln28_22" [pooling.cpp:28]   --->   Operation 228 'or' 'or_ln28_11' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 229 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_11)   --->   "%and_ln28_10 = and i1 %or_ln28_10, %or_ln28_11" [pooling.cpp:28]   --->   Operation 229 'and' 'and_ln28_10' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 230 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln28_11 = and i1 %and_ln28_10, %tmp_18" [pooling.cpp:28]   --->   Operation 230 'and' 'and_ln28_11' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 231 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_6 = select i1 %and_ln28_11, float %conv_1_out_1_load_2, float %select_ln28_5" [pooling.cpp:28]   --->   Operation 231 'select' 'select_ln28_6' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 232 [1/1] (0.00ns)   --->   "%bitcast_ln28_12 = bitcast float %conv_1_out_1_load_3 to i32" [pooling.cpp:28]   --->   Operation 232 'bitcast' 'bitcast_ln28_12' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 233 [1/1] (0.00ns)   --->   "%tmp_19 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_12, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 233 'partselect' 'tmp_19' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 234 [1/1] (0.00ns)   --->   "%trunc_ln28_12 = trunc i32 %bitcast_ln28_12 to i23" [pooling.cpp:28]   --->   Operation 234 'trunc' 'trunc_ln28_12' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 235 [1/1] (0.00ns)   --->   "%bitcast_ln28_13 = bitcast float %select_ln28_6 to i32" [pooling.cpp:28]   --->   Operation 235 'bitcast' 'bitcast_ln28_13' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 236 [1/1] (0.00ns)   --->   "%tmp_20 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_13, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 236 'partselect' 'tmp_20' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 237 [1/1] (0.00ns)   --->   "%trunc_ln28_13 = trunc i32 %bitcast_ln28_13 to i23" [pooling.cpp:28]   --->   Operation 237 'trunc' 'trunc_ln28_13' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 238 [1/1] (1.12ns)   --->   "%icmp_ln28_24 = icmp ne i8 %tmp_19, -1" [pooling.cpp:28]   --->   Operation 238 'icmp' 'icmp_ln28_24' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 239 [1/1] (1.48ns)   --->   "%icmp_ln28_25 = icmp eq i23 %trunc_ln28_12, 0" [pooling.cpp:28]   --->   Operation 239 'icmp' 'icmp_ln28_25' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 240 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_13)   --->   "%or_ln28_12 = or i1 %icmp_ln28_25, %icmp_ln28_24" [pooling.cpp:28]   --->   Operation 240 'or' 'or_ln28_12' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 241 [1/1] (1.12ns)   --->   "%icmp_ln28_26 = icmp ne i8 %tmp_20, -1" [pooling.cpp:28]   --->   Operation 241 'icmp' 'icmp_ln28_26' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 242 [1/1] (1.48ns)   --->   "%icmp_ln28_27 = icmp eq i23 %trunc_ln28_13, 0" [pooling.cpp:28]   --->   Operation 242 'icmp' 'icmp_ln28_27' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 243 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_13)   --->   "%or_ln28_13 = or i1 %icmp_ln28_27, %icmp_ln28_26" [pooling.cpp:28]   --->   Operation 243 'or' 'or_ln28_13' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 244 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_13)   --->   "%and_ln28_12 = and i1 %or_ln28_12, %or_ln28_13" [pooling.cpp:28]   --->   Operation 244 'and' 'and_ln28_12' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 245 [1/1] (15.7ns)   --->   "%tmp_21 = fcmp ogt float %conv_1_out_1_load_3, %select_ln28_6" [pooling.cpp:28]   --->   Operation 245 'fcmp' 'tmp_21' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 246 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln28_13 = and i1 %and_ln28_12, %tmp_21" [pooling.cpp:28]   --->   Operation 246 'and' 'and_ln28_13' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 247 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_7 = select i1 %and_ln28_13, float %conv_1_out_1_load_3, float %select_ln28_6" [pooling.cpp:28]   --->   Operation 247 'select' 'select_ln28_7' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 248 [1/1] (1.42ns)   --->   "store float %select_ln28_7, float* %max_pool_1_out_0_ad_1, align 4" [pooling.cpp:35]   --->   Operation 248 'store' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_5 : Operation 249 [1/1] (0.00ns)   --->   "%bitcast_ln28_17 = bitcast float %conv_1_out_3_load to i32" [pooling.cpp:28]   --->   Operation 249 'bitcast' 'bitcast_ln28_17' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 250 [1/1] (0.00ns)   --->   "%tmp_27 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_17, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 250 'partselect' 'tmp_27' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 251 [1/1] (0.00ns)   --->   "%trunc_ln28_17 = trunc i32 %bitcast_ln28_17 to i23" [pooling.cpp:28]   --->   Operation 251 'trunc' 'trunc_ln28_17' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 252 [1/1] (0.00ns)   --->   "%bitcast_ln28_18 = bitcast float %select_ln28_9 to i32" [pooling.cpp:28]   --->   Operation 252 'bitcast' 'bitcast_ln28_18' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 253 [1/1] (0.00ns)   --->   "%tmp_28 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_18, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 253 'partselect' 'tmp_28' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 254 [1/1] (0.00ns)   --->   "%trunc_ln28_18 = trunc i32 %bitcast_ln28_18 to i23" [pooling.cpp:28]   --->   Operation 254 'trunc' 'trunc_ln28_18' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 255 [1/1] (1.12ns)   --->   "%icmp_ln28_34 = icmp ne i8 %tmp_27, -1" [pooling.cpp:28]   --->   Operation 255 'icmp' 'icmp_ln28_34' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 256 [1/1] (1.48ns)   --->   "%icmp_ln28_35 = icmp eq i23 %trunc_ln28_17, 0" [pooling.cpp:28]   --->   Operation 256 'icmp' 'icmp_ln28_35' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 257 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_18)   --->   "%or_ln28_17 = or i1 %icmp_ln28_35, %icmp_ln28_34" [pooling.cpp:28]   --->   Operation 257 'or' 'or_ln28_17' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 258 [1/1] (1.12ns)   --->   "%icmp_ln28_36 = icmp ne i8 %tmp_28, -1" [pooling.cpp:28]   --->   Operation 258 'icmp' 'icmp_ln28_36' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 259 [1/1] (1.48ns)   --->   "%icmp_ln28_37 = icmp eq i23 %trunc_ln28_18, 0" [pooling.cpp:28]   --->   Operation 259 'icmp' 'icmp_ln28_37' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 260 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_18)   --->   "%or_ln28_18 = or i1 %icmp_ln28_37, %icmp_ln28_36" [pooling.cpp:28]   --->   Operation 260 'or' 'or_ln28_18' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 261 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_18)   --->   "%and_ln28_17 = and i1 %or_ln28_17, %or_ln28_18" [pooling.cpp:28]   --->   Operation 261 'and' 'and_ln28_17' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 262 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln28_18 = and i1 %and_ln28_17, %tmp_29" [pooling.cpp:28]   --->   Operation 262 'and' 'and_ln28_18' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 263 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_10 = select i1 %and_ln28_18, float %conv_1_out_3_load, float %select_ln28_9" [pooling.cpp:28]   --->   Operation 263 'select' 'select_ln28_10' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 264 [1/1] (0.00ns)   --->   "%bitcast_ln28_19 = bitcast float %conv_1_out_3_load_1 to i32" [pooling.cpp:28]   --->   Operation 264 'bitcast' 'bitcast_ln28_19' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 265 [1/1] (0.00ns)   --->   "%tmp_30 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_19, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 265 'partselect' 'tmp_30' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 266 [1/1] (0.00ns)   --->   "%trunc_ln28_19 = trunc i32 %bitcast_ln28_19 to i23" [pooling.cpp:28]   --->   Operation 266 'trunc' 'trunc_ln28_19' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 267 [1/1] (0.00ns)   --->   "%bitcast_ln28_20 = bitcast float %select_ln28_10 to i32" [pooling.cpp:28]   --->   Operation 267 'bitcast' 'bitcast_ln28_20' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 268 [1/1] (0.00ns)   --->   "%tmp_31 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_20, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 268 'partselect' 'tmp_31' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 269 [1/1] (0.00ns)   --->   "%trunc_ln28_20 = trunc i32 %bitcast_ln28_20 to i23" [pooling.cpp:28]   --->   Operation 269 'trunc' 'trunc_ln28_20' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 270 [1/1] (1.12ns)   --->   "%icmp_ln28_38 = icmp ne i8 %tmp_30, -1" [pooling.cpp:28]   --->   Operation 270 'icmp' 'icmp_ln28_38' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 271 [1/1] (1.48ns)   --->   "%icmp_ln28_39 = icmp eq i23 %trunc_ln28_19, 0" [pooling.cpp:28]   --->   Operation 271 'icmp' 'icmp_ln28_39' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 272 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_20)   --->   "%or_ln28_19 = or i1 %icmp_ln28_39, %icmp_ln28_38" [pooling.cpp:28]   --->   Operation 272 'or' 'or_ln28_19' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 273 [1/1] (1.12ns)   --->   "%icmp_ln28_40 = icmp ne i8 %tmp_31, -1" [pooling.cpp:28]   --->   Operation 273 'icmp' 'icmp_ln28_40' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 274 [1/1] (1.48ns)   --->   "%icmp_ln28_41 = icmp eq i23 %trunc_ln28_20, 0" [pooling.cpp:28]   --->   Operation 274 'icmp' 'icmp_ln28_41' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 275 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_20)   --->   "%or_ln28_20 = or i1 %icmp_ln28_41, %icmp_ln28_40" [pooling.cpp:28]   --->   Operation 275 'or' 'or_ln28_20' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 276 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_20)   --->   "%and_ln28_19 = and i1 %or_ln28_19, %or_ln28_20" [pooling.cpp:28]   --->   Operation 276 'and' 'and_ln28_19' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 277 [1/1] (15.7ns)   --->   "%tmp_32 = fcmp ogt float %conv_1_out_3_load_1, %select_ln28_10" [pooling.cpp:28]   --->   Operation 277 'fcmp' 'tmp_32' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 278 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln28_20 = and i1 %and_ln28_19, %tmp_32" [pooling.cpp:28]   --->   Operation 278 'and' 'and_ln28_20' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 279 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_11 = select i1 %and_ln28_20, float %conv_1_out_3_load_1, float %select_ln28_10" [pooling.cpp:28]   --->   Operation 279 'select' 'select_ln28_11' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 280 [1/1] (1.42ns)   --->   "store float %select_ln28_11, float* %max_pool_1_out_1_ad, align 4" [pooling.cpp:35]   --->   Operation 280 'store' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_5 : Operation 281 [1/1] (0.00ns)   --->   "%bitcast_ln28_24 = bitcast float %conv_1_out_3_load_2 to i32" [pooling.cpp:28]   --->   Operation 281 'bitcast' 'bitcast_ln28_24' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 282 [1/1] (0.00ns)   --->   "%tmp_38 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_24, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 282 'partselect' 'tmp_38' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 283 [1/1] (0.00ns)   --->   "%trunc_ln28_24 = trunc i32 %bitcast_ln28_24 to i23" [pooling.cpp:28]   --->   Operation 283 'trunc' 'trunc_ln28_24' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 284 [1/1] (0.00ns)   --->   "%bitcast_ln28_25 = bitcast float %select_ln28_13 to i32" [pooling.cpp:28]   --->   Operation 284 'bitcast' 'bitcast_ln28_25' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 285 [1/1] (0.00ns)   --->   "%tmp_39 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_25, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 285 'partselect' 'tmp_39' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 286 [1/1] (0.00ns)   --->   "%trunc_ln28_25 = trunc i32 %bitcast_ln28_25 to i23" [pooling.cpp:28]   --->   Operation 286 'trunc' 'trunc_ln28_25' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 287 [1/1] (1.12ns)   --->   "%icmp_ln28_48 = icmp ne i8 %tmp_38, -1" [pooling.cpp:28]   --->   Operation 287 'icmp' 'icmp_ln28_48' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 288 [1/1] (1.48ns)   --->   "%icmp_ln28_49 = icmp eq i23 %trunc_ln28_24, 0" [pooling.cpp:28]   --->   Operation 288 'icmp' 'icmp_ln28_49' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 289 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_25)   --->   "%or_ln28_24 = or i1 %icmp_ln28_49, %icmp_ln28_48" [pooling.cpp:28]   --->   Operation 289 'or' 'or_ln28_24' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 290 [1/1] (1.12ns)   --->   "%icmp_ln28_50 = icmp ne i8 %tmp_39, -1" [pooling.cpp:28]   --->   Operation 290 'icmp' 'icmp_ln28_50' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 291 [1/1] (1.48ns)   --->   "%icmp_ln28_51 = icmp eq i23 %trunc_ln28_25, 0" [pooling.cpp:28]   --->   Operation 291 'icmp' 'icmp_ln28_51' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 292 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_25)   --->   "%or_ln28_25 = or i1 %icmp_ln28_51, %icmp_ln28_50" [pooling.cpp:28]   --->   Operation 292 'or' 'or_ln28_25' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 293 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_25)   --->   "%and_ln28_24 = and i1 %or_ln28_24, %or_ln28_25" [pooling.cpp:28]   --->   Operation 293 'and' 'and_ln28_24' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 294 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln28_25 = and i1 %and_ln28_24, %tmp_40" [pooling.cpp:28]   --->   Operation 294 'and' 'and_ln28_25' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 295 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_14 = select i1 %and_ln28_25, float %conv_1_out_3_load_2, float %select_ln28_13" [pooling.cpp:28]   --->   Operation 295 'select' 'select_ln28_14' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 296 [1/1] (0.00ns)   --->   "%bitcast_ln28_26 = bitcast float %conv_1_out_3_load_3 to i32" [pooling.cpp:28]   --->   Operation 296 'bitcast' 'bitcast_ln28_26' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 297 [1/1] (0.00ns)   --->   "%tmp_41 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_26, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 297 'partselect' 'tmp_41' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 298 [1/1] (0.00ns)   --->   "%trunc_ln28_26 = trunc i32 %bitcast_ln28_26 to i23" [pooling.cpp:28]   --->   Operation 298 'trunc' 'trunc_ln28_26' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 299 [1/1] (0.00ns)   --->   "%bitcast_ln28_27 = bitcast float %select_ln28_14 to i32" [pooling.cpp:28]   --->   Operation 299 'bitcast' 'bitcast_ln28_27' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 300 [1/1] (0.00ns)   --->   "%tmp_42 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_27, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 300 'partselect' 'tmp_42' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 301 [1/1] (0.00ns)   --->   "%trunc_ln28_27 = trunc i32 %bitcast_ln28_27 to i23" [pooling.cpp:28]   --->   Operation 301 'trunc' 'trunc_ln28_27' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 302 [1/1] (1.12ns)   --->   "%icmp_ln28_52 = icmp ne i8 %tmp_41, -1" [pooling.cpp:28]   --->   Operation 302 'icmp' 'icmp_ln28_52' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 303 [1/1] (1.48ns)   --->   "%icmp_ln28_53 = icmp eq i23 %trunc_ln28_26, 0" [pooling.cpp:28]   --->   Operation 303 'icmp' 'icmp_ln28_53' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 304 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_27)   --->   "%or_ln28_26 = or i1 %icmp_ln28_53, %icmp_ln28_52" [pooling.cpp:28]   --->   Operation 304 'or' 'or_ln28_26' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 305 [1/1] (1.12ns)   --->   "%icmp_ln28_54 = icmp ne i8 %tmp_42, -1" [pooling.cpp:28]   --->   Operation 305 'icmp' 'icmp_ln28_54' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 306 [1/1] (1.48ns)   --->   "%icmp_ln28_55 = icmp eq i23 %trunc_ln28_27, 0" [pooling.cpp:28]   --->   Operation 306 'icmp' 'icmp_ln28_55' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 307 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_27)   --->   "%or_ln28_27 = or i1 %icmp_ln28_55, %icmp_ln28_54" [pooling.cpp:28]   --->   Operation 307 'or' 'or_ln28_27' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 308 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_27)   --->   "%and_ln28_26 = and i1 %or_ln28_26, %or_ln28_27" [pooling.cpp:28]   --->   Operation 308 'and' 'and_ln28_26' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 309 [1/1] (15.7ns)   --->   "%tmp_43 = fcmp ogt float %conv_1_out_3_load_3, %select_ln28_14" [pooling.cpp:28]   --->   Operation 309 'fcmp' 'tmp_43' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 310 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln28_27 = and i1 %and_ln28_26, %tmp_43" [pooling.cpp:28]   --->   Operation 310 'and' 'and_ln28_27' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 311 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_15 = select i1 %and_ln28_27, float %conv_1_out_3_load_3, float %select_ln28_14" [pooling.cpp:28]   --->   Operation 311 'select' 'select_ln28_15' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 312 [1/1] (1.42ns)   --->   "store float %select_ln28_15, float* %max_pool_1_out_1_ad_1, align 4" [pooling.cpp:35]   --->   Operation 312 'store' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_5 : Operation 313 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str2, i32 %tmp) nounwind" [pooling.cpp:38]   --->   Operation 313 'specregionend' 'empty_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 314 [1/1] (0.00ns)   --->   "br label %1" [pooling.cpp:10]   --->   Operation 314 'br' <Predicate = (!icmp_ln10)> <Delay = 0.00>

State 6 <SV = 2> <Delay = 0.00>
ST_6 : Operation 315 [1/1] (0.00ns)   --->   "ret void" [pooling.cpp:39]   --->   Operation 315 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 40ns, clock uncertainty: 5ns.

 <State 1>: 1.18ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('f') with incoming values : ('f', pooling.cpp:10) [16]  (1.18 ns)

 <State 2>: 1.43ns
The critical path consists of the following:
	'phi' operation ('f') with incoming values : ('f', pooling.cpp:10) [16]  (0 ns)
	'getelementptr' operation ('conv_1_out_0_addr', pooling.cpp:28) [26]  (0 ns)
	'load' operation ('conv_1_out_0_load', pooling.cpp:28) on array 'conv_1_out_0' [51]  (1.43 ns)

 <State 3>: 17.8ns
The critical path consists of the following:
	'load' operation ('conv_1_out_0_load', pooling.cpp:28) on array 'conv_1_out_0' [51]  (1.43 ns)
	'fcmp' operation ('tmp_2', pooling.cpp:28) [58]  (15.8 ns)
	'and' operation ('and_ln28', pooling.cpp:28) [59]  (0 ns)
	'select' operation ('select_ln28', pooling.cpp:28) [60]  (0.616 ns)

 <State 4>: 34.2ns
The critical path consists of the following:
	'load' operation ('conv_1_out_0_load_1', pooling.cpp:28) on array 'conv_1_out_0' [61]  (1.43 ns)
	'fcmp' operation ('tmp_5', pooling.cpp:28) [75]  (15.8 ns)
	'and' operation ('and_ln28_2', pooling.cpp:28) [76]  (0.616 ns)
	'select' operation ('select_ln28_1', pooling.cpp:28) [77]  (0.613 ns)
	'fcmp' operation ('tmp_8', pooling.cpp:28) [92]  (15.8 ns)

 <State 5>: 21.1ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln28_7', pooling.cpp:28) [86]  (1.49 ns)
	'or' operation ('or_ln28_3', pooling.cpp:28) [87]  (0 ns)
	'and' operation ('and_ln28_3', pooling.cpp:28) [91]  (0 ns)
	'and' operation ('and_ln28_4', pooling.cpp:28) [93]  (0.616 ns)
	'select' operation ('select_ln28_2', pooling.cpp:28) [94]  (0.613 ns)
	'fcmp' operation ('tmp_10', pooling.cpp:28) [109]  (15.8 ns)
	'and' operation ('and_ln28_6', pooling.cpp:28) [110]  (0.616 ns)
	'select' operation ('select_ln28_3', pooling.cpp:28) [111]  (0.613 ns)
	'store' operation ('store_ln35', pooling.cpp:35) of variable 'select_ln28_3', pooling.cpp:28 on array 'max_pool_1_out_0' [112]  (1.43 ns)

 <State 6>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
