-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity max_pool_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    conv_1_out_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    conv_1_out_0_ce0 : OUT STD_LOGIC;
    conv_1_out_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_1_out_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    conv_1_out_0_ce1 : OUT STD_LOGIC;
    conv_1_out_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_1_out_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    conv_1_out_1_ce0 : OUT STD_LOGIC;
    conv_1_out_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_1_out_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    conv_1_out_1_ce1 : OUT STD_LOGIC;
    conv_1_out_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_1_out_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    conv_1_out_2_ce0 : OUT STD_LOGIC;
    conv_1_out_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_1_out_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    conv_1_out_2_ce1 : OUT STD_LOGIC;
    conv_1_out_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_1_out_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    conv_1_out_3_ce0 : OUT STD_LOGIC;
    conv_1_out_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_1_out_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    conv_1_out_3_ce1 : OUT STD_LOGIC;
    conv_1_out_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    max_pool_1_out_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    max_pool_1_out_0_ce0 : OUT STD_LOGIC;
    max_pool_1_out_0_we0 : OUT STD_LOGIC;
    max_pool_1_out_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    max_pool_1_out_0_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    max_pool_1_out_0_ce1 : OUT STD_LOGIC;
    max_pool_1_out_0_we1 : OUT STD_LOGIC;
    max_pool_1_out_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    max_pool_1_out_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    max_pool_1_out_1_ce0 : OUT STD_LOGIC;
    max_pool_1_out_1_we0 : OUT STD_LOGIC;
    max_pool_1_out_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    max_pool_1_out_1_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    max_pool_1_out_1_ce1 : OUT STD_LOGIC;
    max_pool_1_out_1_we1 : OUT STD_LOGIC;
    max_pool_1_out_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of max_pool_1 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "max_pool_1,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx485t-ffg1157-1,HLS_INPUT_CLOCK=40.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=34.204000,HLS_SYN_LAT=7,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=536,HLS_SYN_LUT=2387,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_800000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000100000000000000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv62_1 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal f_0_reg_278 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln10_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln10_reg_1668 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln10_reg_1668_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal f_fu_338_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal f_reg_1672 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal zext_ln28_fu_344_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln28_reg_1677 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln28_reg_1677_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln28_fu_352_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln28_reg_1688 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln28_1_fu_370_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln28_1_reg_1729 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal select_ln28_fu_430_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_reg_1775 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_out_1_load_reg_1782 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_4_fu_480_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_4_reg_1789 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_out_1_load_2_reg_1796 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_8_fu_530_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_8_reg_1803 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_out_3_load_reg_1810 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_12_fu_580_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_12_reg_1817 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_out_3_load_2_reg_1824 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_1_fu_671_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_1_reg_1831 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1837 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal conv_1_out_1_load_1_reg_1842 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_5_fu_762_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_5_reg_1849 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_1855 : STD_LOGIC_VECTOR (0 downto 0);
    signal conv_1_out_1_load_3_reg_1860 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_9_fu_853_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_9_reg_1867 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1873 : STD_LOGIC_VECTOR (0 downto 0);
    signal conv_1_out_3_load_1_reg_1878 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_13_fu_944_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_13_reg_1885 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_reg_1891 : STD_LOGIC_VECTOR (0 downto 0);
    signal conv_1_out_3_load_3_reg_1896 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_phi_mux_f_0_phi_fu_282_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_44_fu_358_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln28_2_fu_380_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_289_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_295_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_295_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_301_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_301_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_307_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_307_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_314_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_314_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_2_fu_1033_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_319_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_319_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_6_fu_1212_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_323_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_323_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_10_fu_1391_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_328_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_328_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_14_fu_1570_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln28_fu_377_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal bitcast_ln28_fu_388_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_392_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_fu_402_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_1_fu_412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_fu_418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_fu_424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_7_fu_438_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_442_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_7_fu_452_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_15_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_14_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_7_fu_468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_7_fu_474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_14_fu_488_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_492_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_14_fu_502_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_29_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_28_fu_506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_14_fu_518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_14_fu_524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_21_fu_538_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_542_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_21_fu_552_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_43_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_42_fu_556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_21_fu_568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_21_fu_574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_1_fu_588_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_2_fu_606_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_592_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_1_fu_602_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_3_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_2_fu_623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_609_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_2_fu_619_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_5_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_4_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_1_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_2_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_1_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_2_fu_665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_8_fu_679_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_9_fu_697_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_683_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_8_fu_693_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_17_fu_720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_16_fu_714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_700_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_9_fu_710_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_19_fu_738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_18_fu_732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_8_fu_726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_9_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_8_fu_750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_9_fu_756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_15_fu_770_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_16_fu_788_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_774_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_15_fu_784_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_31_fu_811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_30_fu_805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_791_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_16_fu_801_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_33_fu_829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_32_fu_823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_15_fu_817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_16_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_15_fu_841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_16_fu_847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_22_fu_861_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_23_fu_879_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_865_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_22_fu_875_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_45_fu_902_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_44_fu_896_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_882_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_23_fu_892_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_47_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_46_fu_914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_22_fu_908_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_23_fu_926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_22_fu_932_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_23_fu_938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_3_fu_952_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_4_fu_969_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_955_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_3_fu_965_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_7_fu_992_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_6_fu_986_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_972_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_4_fu_982_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_9_fu_1010_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_8_fu_1004_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_3_fu_998_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_4_fu_1016_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_3_fu_1022_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_4_fu_1028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_5_fu_1040_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_6_fu_1057_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1043_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_5_fu_1053_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_11_fu_1081_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_10_fu_1075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_1061_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_6_fu_1071_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_13_fu_1099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_12_fu_1093_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_5_fu_1087_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_6_fu_1105_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_5_fu_1111_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_6_fu_1117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_10_fu_1131_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_11_fu_1148_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_1134_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_10_fu_1144_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_21_fu_1171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_20_fu_1165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_1151_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_11_fu_1161_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_23_fu_1189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_22_fu_1183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_10_fu_1177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_11_fu_1195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_10_fu_1201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_11_fu_1207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_12_fu_1219_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_13_fu_1236_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_1222_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_12_fu_1232_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_25_fu_1260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_24_fu_1254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_1240_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_13_fu_1250_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_27_fu_1278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_26_fu_1272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_12_fu_1266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_13_fu_1284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_12_fu_1290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_13_fu_1296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_17_fu_1310_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_18_fu_1327_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_1313_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_17_fu_1323_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_35_fu_1350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_34_fu_1344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_1330_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_18_fu_1340_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_37_fu_1368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_36_fu_1362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_17_fu_1356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_18_fu_1374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_17_fu_1380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_18_fu_1386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_19_fu_1398_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_20_fu_1415_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_fu_1401_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_19_fu_1411_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_39_fu_1439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_38_fu_1433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_1419_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_20_fu_1429_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_41_fu_1457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_40_fu_1451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_19_fu_1445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_20_fu_1463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_19_fu_1469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_20_fu_1475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_24_fu_1489_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_25_fu_1506_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_fu_1492_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_24_fu_1502_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_49_fu_1529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_48_fu_1523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_1509_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_25_fu_1519_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_51_fu_1547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_50_fu_1541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_24_fu_1535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_25_fu_1553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_24_fu_1559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_25_fu_1565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_26_fu_1577_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_27_fu_1594_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_fu_1580_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_26_fu_1590_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_53_fu_1618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_52_fu_1612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_1598_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_27_fu_1608_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_55_fu_1636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_54_fu_1630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_26_fu_1624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_27_fu_1642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_26_fu_1648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_27_fu_1654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component max_pool_1_fcmp_3bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    max_pool_1_fcmp_3bkb_U1 : component max_pool_1_fcmp_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => conv_1_out_0_q0,
        din1 => grp_fu_289_p1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_289_p2);

    max_pool_1_fcmp_3bkb_U2 : component max_pool_1_fcmp_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_295_p0,
        din1 => grp_fu_295_p1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_295_p2);

    max_pool_1_fcmp_3bkb_U3 : component max_pool_1_fcmp_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_301_p0,
        din1 => grp_fu_301_p1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_301_p2);

    max_pool_1_fcmp_3bkb_U4 : component max_pool_1_fcmp_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_307_p0,
        din1 => grp_fu_307_p1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_307_p2);

    max_pool_1_fcmp_3bkb_U5 : component max_pool_1_fcmp_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_314_p0,
        din1 => grp_fu_314_p1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_314_p2);

    max_pool_1_fcmp_3bkb_U6 : component max_pool_1_fcmp_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_319_p0,
        din1 => grp_fu_319_p1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_319_p2);

    max_pool_1_fcmp_3bkb_U7 : component max_pool_1_fcmp_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_323_p0,
        din1 => grp_fu_323_p1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_323_p2);

    max_pool_1_fcmp_3bkb_U8 : component max_pool_1_fcmp_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_328_p0,
        din1 => grp_fu_328_p1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_328_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    f_0_reg_278_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_reg_1668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                f_0_reg_278 <= f_reg_1672;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                f_0_reg_278 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_reg_1668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                conv_1_out_1_load_1_reg_1842 <= conv_1_out_1_q0;
                conv_1_out_1_load_3_reg_1860 <= conv_1_out_1_q1;
                conv_1_out_3_load_1_reg_1878 <= conv_1_out_3_q0;
                conv_1_out_3_load_3_reg_1896 <= conv_1_out_3_q1;
                tmp_18_reg_1855 <= grp_fu_307_p2;
                tmp_29_reg_1873 <= grp_fu_319_p2;
                tmp_40_reg_1891 <= grp_fu_328_p2;
                tmp_8_reg_1837 <= grp_fu_295_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_reg_1668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                conv_1_out_1_load_2_reg_1796 <= conv_1_out_1_q1;
                conv_1_out_1_load_reg_1782 <= conv_1_out_1_q0;
                conv_1_out_3_load_2_reg_1824 <= conv_1_out_3_q1;
                conv_1_out_3_load_reg_1810 <= conv_1_out_3_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                f_reg_1672 <= f_fu_338_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln10_reg_1668 <= icmp_ln10_fu_332_p2;
                icmp_ln10_reg_1668_pp0_iter1_reg <= icmp_ln10_reg_1668;
                    zext_ln28_reg_1677_pp0_iter1_reg(1 downto 0) <= zext_ln28_reg_1677(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_reg_1668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                select_ln28_12_reg_1817 <= select_ln28_12_fu_580_p3;
                select_ln28_4_reg_1789 <= select_ln28_4_fu_480_p3;
                select_ln28_8_reg_1803 <= select_ln28_8_fu_530_p3;
                select_ln28_reg_1775 <= select_ln28_fu_430_p3;
                    zext_ln28_1_reg_1729(1 downto 0) <= zext_ln28_1_fu_370_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_reg_1668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln28_13_reg_1885 <= select_ln28_13_fu_944_p3;
                select_ln28_1_reg_1831 <= select_ln28_1_fu_671_p3;
                select_ln28_5_reg_1849 <= select_ln28_5_fu_762_p3;
                select_ln28_9_reg_1867 <= select_ln28_9_fu_853_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_fu_332_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                xor_ln28_reg_1688 <= xor_ln28_fu_352_p2;
                    zext_ln28_reg_1677(1 downto 0) <= zext_ln28_fu_344_p1(1 downto 0);
            end if;
        end if;
    end process;
    zext_ln28_reg_1677(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    zext_ln28_reg_1677_pp0_iter1_reg(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    zext_ln28_1_reg_1729(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln10_fu_332_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln10_fu_332_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((icmp_ln10_fu_332_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    and_ln28_10_fu_1201_p2 <= (or_ln28_11_fu_1195_p2 and or_ln28_10_fu_1177_p2);
    and_ln28_11_fu_1207_p2 <= (tmp_18_reg_1855 and and_ln28_10_fu_1201_p2);
    and_ln28_12_fu_1290_p2 <= (or_ln28_13_fu_1284_p2 and or_ln28_12_fu_1266_p2);
    and_ln28_13_fu_1296_p2 <= (grp_fu_319_p2 and and_ln28_12_fu_1290_p2);
    and_ln28_14_fu_524_p2 <= (or_ln28_14_fu_518_p2 and grp_fu_301_p2);
    and_ln28_15_fu_841_p2 <= (or_ln28_16_fu_835_p2 and or_ln28_15_fu_817_p2);
    and_ln28_16_fu_847_p2 <= (grp_fu_314_p2 and and_ln28_15_fu_841_p2);
    and_ln28_17_fu_1380_p2 <= (or_ln28_18_fu_1374_p2 and or_ln28_17_fu_1356_p2);
    and_ln28_18_fu_1386_p2 <= (tmp_29_reg_1873 and and_ln28_17_fu_1380_p2);
    and_ln28_19_fu_1469_p2 <= (or_ln28_20_fu_1463_p2 and or_ln28_19_fu_1445_p2);
    and_ln28_1_fu_659_p2 <= (or_ln28_2_fu_653_p2 and or_ln28_1_fu_635_p2);
    and_ln28_20_fu_1475_p2 <= (grp_fu_323_p2 and and_ln28_19_fu_1469_p2);
    and_ln28_21_fu_574_p2 <= (or_ln28_21_fu_568_p2 and grp_fu_307_p2);
    and_ln28_22_fu_932_p2 <= (or_ln28_23_fu_926_p2 and or_ln28_22_fu_908_p2);
    and_ln28_23_fu_938_p2 <= (grp_fu_323_p2 and and_ln28_22_fu_932_p2);
    and_ln28_24_fu_1559_p2 <= (or_ln28_25_fu_1553_p2 and or_ln28_24_fu_1535_p2);
    and_ln28_25_fu_1565_p2 <= (tmp_40_reg_1891 and and_ln28_24_fu_1559_p2);
    and_ln28_26_fu_1648_p2 <= (or_ln28_27_fu_1642_p2 and or_ln28_26_fu_1624_p2);
    and_ln28_27_fu_1654_p2 <= (grp_fu_328_p2 and and_ln28_26_fu_1648_p2);
    and_ln28_2_fu_665_p2 <= (grp_fu_289_p2 and and_ln28_1_fu_659_p2);
    and_ln28_3_fu_1022_p2 <= (or_ln28_4_fu_1016_p2 and or_ln28_3_fu_998_p2);
    and_ln28_4_fu_1028_p2 <= (tmp_8_reg_1837 and and_ln28_3_fu_1022_p2);
    and_ln28_5_fu_1111_p2 <= (or_ln28_6_fu_1105_p2 and or_ln28_5_fu_1087_p2);
    and_ln28_6_fu_1117_p2 <= (grp_fu_314_p2 and and_ln28_5_fu_1111_p2);
    and_ln28_7_fu_474_p2 <= (or_ln28_7_fu_468_p2 and grp_fu_295_p2);
    and_ln28_8_fu_750_p2 <= (or_ln28_9_fu_744_p2 and or_ln28_8_fu_726_p2);
    and_ln28_9_fu_756_p2 <= (grp_fu_301_p2 and and_ln28_8_fu_750_p2);
    and_ln28_fu_424_p2 <= (or_ln28_fu_418_p2 and grp_fu_289_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state6 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln10_fu_332_p2)
    begin
        if ((icmp_ln10_fu_332_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_f_0_phi_fu_282_p4_assign_proc : process(f_0_reg_278, icmp_ln10_reg_1668, ap_CS_fsm_pp0_stage0, f_reg_1672, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln10_reg_1668 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_f_0_phi_fu_282_p4 <= f_reg_1672;
        else 
            ap_phi_mux_f_0_phi_fu_282_p4 <= f_0_reg_278;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln28_10_fu_1131_p1 <= conv_1_out_1_load_2_reg_1796;
    bitcast_ln28_11_fu_1148_p1 <= select_ln28_5_reg_1849;
    bitcast_ln28_12_fu_1219_p1 <= conv_1_out_1_load_3_reg_1860;
    bitcast_ln28_13_fu_1236_p1 <= select_ln28_6_fu_1212_p3;
    bitcast_ln28_14_fu_488_p1 <= conv_1_out_2_q0;
    bitcast_ln28_15_fu_770_p1 <= conv_1_out_2_q0;
    bitcast_ln28_16_fu_788_p1 <= select_ln28_8_reg_1803;
    bitcast_ln28_17_fu_1310_p1 <= conv_1_out_3_load_reg_1810;
    bitcast_ln28_18_fu_1327_p1 <= select_ln28_9_reg_1867;
    bitcast_ln28_19_fu_1398_p1 <= conv_1_out_3_load_1_reg_1878;
    bitcast_ln28_1_fu_588_p1 <= conv_1_out_0_q0;
    bitcast_ln28_20_fu_1415_p1 <= select_ln28_10_fu_1391_p3;
    bitcast_ln28_21_fu_538_p1 <= conv_1_out_2_q1;
    bitcast_ln28_22_fu_861_p1 <= conv_1_out_2_q1;
    bitcast_ln28_23_fu_879_p1 <= select_ln28_12_reg_1817;
    bitcast_ln28_24_fu_1489_p1 <= conv_1_out_3_load_2_reg_1824;
    bitcast_ln28_25_fu_1506_p1 <= select_ln28_13_reg_1885;
    bitcast_ln28_26_fu_1577_p1 <= conv_1_out_3_load_3_reg_1896;
    bitcast_ln28_27_fu_1594_p1 <= select_ln28_14_fu_1570_p3;
    bitcast_ln28_2_fu_606_p1 <= select_ln28_reg_1775;
    bitcast_ln28_3_fu_952_p1 <= conv_1_out_1_load_reg_1782;
    bitcast_ln28_4_fu_969_p1 <= select_ln28_1_reg_1831;
    bitcast_ln28_5_fu_1040_p1 <= conv_1_out_1_load_1_reg_1842;
    bitcast_ln28_6_fu_1057_p1 <= select_ln28_2_fu_1033_p3;
    bitcast_ln28_7_fu_438_p1 <= conv_1_out_0_q1;
    bitcast_ln28_8_fu_679_p1 <= conv_1_out_0_q1;
    bitcast_ln28_9_fu_697_p1 <= select_ln28_4_reg_1789;
    bitcast_ln28_fu_388_p1 <= conv_1_out_0_q0;

    conv_1_out_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln28_fu_344_p1, zext_ln28_1_fu_370_p1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_out_0_address0 <= zext_ln28_1_fu_370_p1(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_out_0_address0 <= zext_ln28_fu_344_p1(3 - 1 downto 0);
            else 
                conv_1_out_0_address0 <= "XXX";
            end if;
        else 
            conv_1_out_0_address0 <= "XXX";
        end if; 
    end process;


    conv_1_out_0_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, tmp_44_fu_358_p3, ap_block_pp0_stage1, zext_ln28_2_fu_380_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_out_0_address1 <= zext_ln28_2_fu_380_p1(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_out_0_address1 <= tmp_44_fu_358_p3(3 - 1 downto 0);
            else 
                conv_1_out_0_address1 <= "XXX";
            end if;
        else 
            conv_1_out_0_address1 <= "XXX";
        end if; 
    end process;


    conv_1_out_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            conv_1_out_0_ce0 <= ap_const_logic_1;
        else 
            conv_1_out_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            conv_1_out_0_ce1 <= ap_const_logic_1;
        else 
            conv_1_out_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln28_fu_344_p1, zext_ln28_1_fu_370_p1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_out_1_address0 <= zext_ln28_1_fu_370_p1(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_out_1_address0 <= zext_ln28_fu_344_p1(3 - 1 downto 0);
            else 
                conv_1_out_1_address0 <= "XXX";
            end if;
        else 
            conv_1_out_1_address0 <= "XXX";
        end if; 
    end process;


    conv_1_out_1_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, tmp_44_fu_358_p3, ap_block_pp0_stage1, zext_ln28_2_fu_380_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_out_1_address1 <= zext_ln28_2_fu_380_p1(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_out_1_address1 <= tmp_44_fu_358_p3(3 - 1 downto 0);
            else 
                conv_1_out_1_address1 <= "XXX";
            end if;
        else 
            conv_1_out_1_address1 <= "XXX";
        end if; 
    end process;


    conv_1_out_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            conv_1_out_1_ce0 <= ap_const_logic_1;
        else 
            conv_1_out_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            conv_1_out_1_ce1 <= ap_const_logic_1;
        else 
            conv_1_out_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln28_fu_344_p1, zext_ln28_1_fu_370_p1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_out_2_address0 <= zext_ln28_1_fu_370_p1(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_out_2_address0 <= zext_ln28_fu_344_p1(3 - 1 downto 0);
            else 
                conv_1_out_2_address0 <= "XXX";
            end if;
        else 
            conv_1_out_2_address0 <= "XXX";
        end if; 
    end process;


    conv_1_out_2_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, tmp_44_fu_358_p3, ap_block_pp0_stage1, zext_ln28_2_fu_380_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_out_2_address1 <= zext_ln28_2_fu_380_p1(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_out_2_address1 <= tmp_44_fu_358_p3(3 - 1 downto 0);
            else 
                conv_1_out_2_address1 <= "XXX";
            end if;
        else 
            conv_1_out_2_address1 <= "XXX";
        end if; 
    end process;


    conv_1_out_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            conv_1_out_2_ce0 <= ap_const_logic_1;
        else 
            conv_1_out_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            conv_1_out_2_ce1 <= ap_const_logic_1;
        else 
            conv_1_out_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln28_fu_344_p1, zext_ln28_1_fu_370_p1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_out_3_address0 <= zext_ln28_1_fu_370_p1(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_out_3_address0 <= zext_ln28_fu_344_p1(3 - 1 downto 0);
            else 
                conv_1_out_3_address0 <= "XXX";
            end if;
        else 
            conv_1_out_3_address0 <= "XXX";
        end if; 
    end process;


    conv_1_out_3_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, tmp_44_fu_358_p3, ap_block_pp0_stage1, zext_ln28_2_fu_380_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_out_3_address1 <= zext_ln28_2_fu_380_p1(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_out_3_address1 <= tmp_44_fu_358_p3(3 - 1 downto 0);
            else 
                conv_1_out_3_address1 <= "XXX";
            end if;
        else 
            conv_1_out_3_address1 <= "XXX";
        end if; 
    end process;


    conv_1_out_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            conv_1_out_3_ce0 <= ap_const_logic_1;
        else 
            conv_1_out_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            conv_1_out_3_ce1 <= ap_const_logic_1;
        else 
            conv_1_out_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    f_fu_338_p2 <= std_logic_vector(unsigned(ap_phi_mux_f_0_phi_fu_282_p4) + unsigned(ap_const_lv2_1));

    grp_fu_289_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, select_ln28_reg_1775, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_289_p1 <= select_ln28_reg_1775;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_289_p1 <= ap_const_lv32_800000;
        else 
            grp_fu_289_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_295_p0_assign_proc : process(conv_1_out_0_q1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, conv_1_out_1_load_reg_1782, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_295_p0 <= conv_1_out_1_load_reg_1782;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_295_p0 <= conv_1_out_0_q1;
        else 
            grp_fu_295_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_295_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, select_ln28_1_fu_671_p3, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_295_p1 <= select_ln28_1_fu_671_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_295_p1 <= ap_const_lv32_800000;
        else 
            grp_fu_295_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_301_p0_assign_proc : process(conv_1_out_0_q1, conv_1_out_2_q0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_301_p0 <= conv_1_out_0_q1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_301_p0 <= conv_1_out_2_q0;
        else 
            grp_fu_301_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_301_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, select_ln28_4_reg_1789, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_301_p1 <= select_ln28_4_reg_1789;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_301_p1 <= ap_const_lv32_800000;
        else 
            grp_fu_301_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_307_p0_assign_proc : process(conv_1_out_2_q1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, conv_1_out_1_load_2_reg_1796, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_307_p0 <= conv_1_out_1_load_2_reg_1796;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_307_p0 <= conv_1_out_2_q1;
        else 
            grp_fu_307_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_307_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, select_ln28_5_fu_762_p3, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_307_p1 <= select_ln28_5_fu_762_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_307_p1 <= ap_const_lv32_800000;
        else 
            grp_fu_307_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_314_p0_assign_proc : process(conv_1_out_2_q0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, conv_1_out_1_load_1_reg_1842, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_314_p0 <= conv_1_out_1_load_1_reg_1842;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_314_p0 <= conv_1_out_2_q0;
            else 
                grp_fu_314_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_314_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_314_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, select_ln28_8_reg_1803, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, select_ln28_2_fu_1033_p3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_314_p1 <= select_ln28_2_fu_1033_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_314_p1 <= select_ln28_8_reg_1803;
            else 
                grp_fu_314_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_314_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_319_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, conv_1_out_3_load_reg_1810, ap_enable_reg_pp0_iter1, conv_1_out_1_load_3_reg_1860, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_319_p0 <= conv_1_out_1_load_3_reg_1860;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_319_p0 <= conv_1_out_3_load_reg_1810;
            else 
                grp_fu_319_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_319_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_319_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, select_ln28_9_fu_853_p3, ap_block_pp0_stage0, ap_block_pp0_stage1, select_ln28_6_fu_1212_p3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_319_p1 <= select_ln28_6_fu_1212_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_319_p1 <= select_ln28_9_fu_853_p3;
            else 
                grp_fu_319_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_319_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_323_p0_assign_proc : process(conv_1_out_2_q1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, conv_1_out_3_load_1_reg_1878, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_323_p0 <= conv_1_out_3_load_1_reg_1878;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_323_p0 <= conv_1_out_2_q1;
            else 
                grp_fu_323_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_323_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_323_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, select_ln28_12_reg_1817, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, select_ln28_10_fu_1391_p3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_323_p1 <= select_ln28_10_fu_1391_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_323_p1 <= select_ln28_12_reg_1817;
            else 
                grp_fu_323_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_323_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_328_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, conv_1_out_3_load_2_reg_1824, ap_enable_reg_pp0_iter1, conv_1_out_3_load_3_reg_1896, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_328_p0 <= conv_1_out_3_load_3_reg_1896;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_328_p0 <= conv_1_out_3_load_2_reg_1824;
            else 
                grp_fu_328_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_328_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_328_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, select_ln28_13_fu_944_p3, ap_block_pp0_stage0, ap_block_pp0_stage1, select_ln28_14_fu_1570_p3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_328_p1 <= select_ln28_14_fu_1570_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_328_p1 <= select_ln28_13_fu_944_p3;
            else 
                grp_fu_328_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_328_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln10_fu_332_p2 <= "1" when (ap_phi_mux_f_0_phi_fu_282_p4 = ap_const_lv2_2) else "0";
    icmp_ln28_10_fu_1075_p2 <= "0" when (tmp_9_fu_1043_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_11_fu_1081_p2 <= "1" when (trunc_ln28_5_fu_1053_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_12_fu_1093_p2 <= "0" when (tmp_s_fu_1061_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_13_fu_1099_p2 <= "1" when (trunc_ln28_6_fu_1071_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_14_fu_456_p2 <= "0" when (tmp_11_fu_442_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_15_fu_462_p2 <= "1" when (trunc_ln28_7_fu_452_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_16_fu_714_p2 <= "0" when (tmp_13_fu_683_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_17_fu_720_p2 <= "1" when (trunc_ln28_8_fu_693_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_18_fu_732_p2 <= "0" when (tmp_14_fu_700_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_19_fu_738_p2 <= "1" when (trunc_ln28_9_fu_710_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_1_fu_412_p2 <= "1" when (trunc_ln28_fu_402_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_20_fu_1165_p2 <= "0" when (tmp_16_fu_1134_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_21_fu_1171_p2 <= "1" when (trunc_ln28_10_fu_1144_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_22_fu_1183_p2 <= "0" when (tmp_17_fu_1151_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_23_fu_1189_p2 <= "1" when (trunc_ln28_11_fu_1161_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_24_fu_1254_p2 <= "0" when (tmp_19_fu_1222_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_25_fu_1260_p2 <= "1" when (trunc_ln28_12_fu_1232_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_26_fu_1272_p2 <= "0" when (tmp_20_fu_1240_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_27_fu_1278_p2 <= "1" when (trunc_ln28_13_fu_1250_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_28_fu_506_p2 <= "0" when (tmp_22_fu_492_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_29_fu_512_p2 <= "1" when (trunc_ln28_14_fu_502_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_2_fu_623_p2 <= "0" when (tmp_3_fu_592_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_30_fu_805_p2 <= "0" when (tmp_24_fu_774_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_31_fu_811_p2 <= "1" when (trunc_ln28_15_fu_784_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_32_fu_823_p2 <= "0" when (tmp_25_fu_791_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_33_fu_829_p2 <= "1" when (trunc_ln28_16_fu_801_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_34_fu_1344_p2 <= "0" when (tmp_27_fu_1313_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_35_fu_1350_p2 <= "1" when (trunc_ln28_17_fu_1323_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_36_fu_1362_p2 <= "0" when (tmp_28_fu_1330_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_37_fu_1368_p2 <= "1" when (trunc_ln28_18_fu_1340_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_38_fu_1433_p2 <= "0" when (tmp_30_fu_1401_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_39_fu_1439_p2 <= "1" when (trunc_ln28_19_fu_1411_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_3_fu_629_p2 <= "1" when (trunc_ln28_1_fu_602_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_40_fu_1451_p2 <= "0" when (tmp_31_fu_1419_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_41_fu_1457_p2 <= "1" when (trunc_ln28_20_fu_1429_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_42_fu_556_p2 <= "0" when (tmp_33_fu_542_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_43_fu_562_p2 <= "1" when (trunc_ln28_21_fu_552_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_44_fu_896_p2 <= "0" when (tmp_35_fu_865_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_45_fu_902_p2 <= "1" when (trunc_ln28_22_fu_875_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_46_fu_914_p2 <= "0" when (tmp_36_fu_882_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_47_fu_920_p2 <= "1" when (trunc_ln28_23_fu_892_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_48_fu_1523_p2 <= "0" when (tmp_38_fu_1492_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_49_fu_1529_p2 <= "1" when (trunc_ln28_24_fu_1502_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_4_fu_641_p2 <= "0" when (tmp_4_fu_609_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_50_fu_1541_p2 <= "0" when (tmp_39_fu_1509_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_51_fu_1547_p2 <= "1" when (trunc_ln28_25_fu_1519_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_52_fu_1612_p2 <= "0" when (tmp_41_fu_1580_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_53_fu_1618_p2 <= "1" when (trunc_ln28_26_fu_1590_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_54_fu_1630_p2 <= "0" when (tmp_42_fu_1598_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_55_fu_1636_p2 <= "1" when (trunc_ln28_27_fu_1608_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_5_fu_647_p2 <= "1" when (trunc_ln28_2_fu_619_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_6_fu_986_p2 <= "0" when (tmp_6_fu_955_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_7_fu_992_p2 <= "1" when (trunc_ln28_3_fu_965_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_8_fu_1004_p2 <= "0" when (tmp_7_fu_972_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_9_fu_1010_p2 <= "1" when (trunc_ln28_4_fu_982_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_fu_406_p2 <= "0" when (tmp_1_fu_392_p4 = ap_const_lv8_FF) else "1";
    max_pool_1_out_0_address0 <= zext_ln28_reg_1677_pp0_iter1_reg(2 - 1 downto 0);
    max_pool_1_out_0_address1 <= zext_ln28_1_reg_1729(2 - 1 downto 0);

    max_pool_1_out_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            max_pool_1_out_0_ce0 <= ap_const_logic_1;
        else 
            max_pool_1_out_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            max_pool_1_out_0_ce1 <= ap_const_logic_1;
        else 
            max_pool_1_out_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_1_out_0_d0 <= 
        conv_1_out_1_load_1_reg_1842 when (and_ln28_6_fu_1117_p2(0) = '1') else 
        select_ln28_2_fu_1033_p3;
    max_pool_1_out_0_d1 <= 
        conv_1_out_1_load_3_reg_1860 when (and_ln28_13_fu_1296_p2(0) = '1') else 
        select_ln28_6_fu_1212_p3;

    max_pool_1_out_0_we0_assign_proc : process(icmp_ln10_reg_1668_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln10_reg_1668_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            max_pool_1_out_0_we0 <= ap_const_logic_1;
        else 
            max_pool_1_out_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_0_we1_assign_proc : process(icmp_ln10_reg_1668_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln10_reg_1668_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            max_pool_1_out_0_we1 <= ap_const_logic_1;
        else 
            max_pool_1_out_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_1_out_1_address0 <= zext_ln28_reg_1677_pp0_iter1_reg(2 - 1 downto 0);
    max_pool_1_out_1_address1 <= zext_ln28_1_reg_1729(2 - 1 downto 0);

    max_pool_1_out_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            max_pool_1_out_1_ce0 <= ap_const_logic_1;
        else 
            max_pool_1_out_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            max_pool_1_out_1_ce1 <= ap_const_logic_1;
        else 
            max_pool_1_out_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_1_out_1_d0 <= 
        conv_1_out_3_load_1_reg_1878 when (and_ln28_20_fu_1475_p2(0) = '1') else 
        select_ln28_10_fu_1391_p3;
    max_pool_1_out_1_d1 <= 
        conv_1_out_3_load_3_reg_1896 when (and_ln28_27_fu_1654_p2(0) = '1') else 
        select_ln28_14_fu_1570_p3;

    max_pool_1_out_1_we0_assign_proc : process(icmp_ln10_reg_1668_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln10_reg_1668_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            max_pool_1_out_1_we0 <= ap_const_logic_1;
        else 
            max_pool_1_out_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_1_we1_assign_proc : process(icmp_ln10_reg_1668_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln10_reg_1668_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            max_pool_1_out_1_we1 <= ap_const_logic_1;
        else 
            max_pool_1_out_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln28_10_fu_1177_p2 <= (icmp_ln28_21_fu_1171_p2 or icmp_ln28_20_fu_1165_p2);
    or_ln28_11_fu_1195_p2 <= (icmp_ln28_23_fu_1189_p2 or icmp_ln28_22_fu_1183_p2);
    or_ln28_12_fu_1266_p2 <= (icmp_ln28_25_fu_1260_p2 or icmp_ln28_24_fu_1254_p2);
    or_ln28_13_fu_1284_p2 <= (icmp_ln28_27_fu_1278_p2 or icmp_ln28_26_fu_1272_p2);
    or_ln28_14_fu_518_p2 <= (icmp_ln28_29_fu_512_p2 or icmp_ln28_28_fu_506_p2);
    or_ln28_15_fu_817_p2 <= (icmp_ln28_31_fu_811_p2 or icmp_ln28_30_fu_805_p2);
    or_ln28_16_fu_835_p2 <= (icmp_ln28_33_fu_829_p2 or icmp_ln28_32_fu_823_p2);
    or_ln28_17_fu_1356_p2 <= (icmp_ln28_35_fu_1350_p2 or icmp_ln28_34_fu_1344_p2);
    or_ln28_18_fu_1374_p2 <= (icmp_ln28_37_fu_1368_p2 or icmp_ln28_36_fu_1362_p2);
    or_ln28_19_fu_1445_p2 <= (icmp_ln28_39_fu_1439_p2 or icmp_ln28_38_fu_1433_p2);
    or_ln28_1_fu_635_p2 <= (icmp_ln28_3_fu_629_p2 or icmp_ln28_2_fu_623_p2);
    or_ln28_20_fu_1463_p2 <= (icmp_ln28_41_fu_1457_p2 or icmp_ln28_40_fu_1451_p2);
    or_ln28_21_fu_568_p2 <= (icmp_ln28_43_fu_562_p2 or icmp_ln28_42_fu_556_p2);
    or_ln28_22_fu_908_p2 <= (icmp_ln28_45_fu_902_p2 or icmp_ln28_44_fu_896_p2);
    or_ln28_23_fu_926_p2 <= (icmp_ln28_47_fu_920_p2 or icmp_ln28_46_fu_914_p2);
    or_ln28_24_fu_1535_p2 <= (icmp_ln28_49_fu_1529_p2 or icmp_ln28_48_fu_1523_p2);
    or_ln28_25_fu_1553_p2 <= (icmp_ln28_51_fu_1547_p2 or icmp_ln28_50_fu_1541_p2);
    or_ln28_26_fu_1624_p2 <= (icmp_ln28_53_fu_1618_p2 or icmp_ln28_52_fu_1612_p2);
    or_ln28_27_fu_1642_p2 <= (icmp_ln28_55_fu_1636_p2 or icmp_ln28_54_fu_1630_p2);
    or_ln28_2_fu_653_p2 <= (icmp_ln28_5_fu_647_p2 or icmp_ln28_4_fu_641_p2);
    or_ln28_3_fu_998_p2 <= (icmp_ln28_7_fu_992_p2 or icmp_ln28_6_fu_986_p2);
    or_ln28_4_fu_1016_p2 <= (icmp_ln28_9_fu_1010_p2 or icmp_ln28_8_fu_1004_p2);
    or_ln28_5_fu_1087_p2 <= (icmp_ln28_11_fu_1081_p2 or icmp_ln28_10_fu_1075_p2);
    or_ln28_6_fu_1105_p2 <= (icmp_ln28_13_fu_1099_p2 or icmp_ln28_12_fu_1093_p2);
    or_ln28_7_fu_468_p2 <= (icmp_ln28_15_fu_462_p2 or icmp_ln28_14_fu_456_p2);
    or_ln28_8_fu_726_p2 <= (icmp_ln28_17_fu_720_p2 or icmp_ln28_16_fu_714_p2);
    or_ln28_9_fu_744_p2 <= (icmp_ln28_19_fu_738_p2 or icmp_ln28_18_fu_732_p2);
    or_ln28_fu_418_p2 <= (icmp_ln28_fu_406_p2 or icmp_ln28_1_fu_412_p2);
    select_ln28_10_fu_1391_p3 <= 
        conv_1_out_3_load_reg_1810 when (and_ln28_18_fu_1386_p2(0) = '1') else 
        select_ln28_9_reg_1867;
    select_ln28_12_fu_580_p3 <= 
        conv_1_out_2_q1 when (and_ln28_21_fu_574_p2(0) = '1') else 
        ap_const_lv32_800000;
    select_ln28_13_fu_944_p3 <= 
        conv_1_out_2_q1 when (and_ln28_23_fu_938_p2(0) = '1') else 
        select_ln28_12_reg_1817;
    select_ln28_14_fu_1570_p3 <= 
        conv_1_out_3_load_2_reg_1824 when (and_ln28_25_fu_1565_p2(0) = '1') else 
        select_ln28_13_reg_1885;
    select_ln28_1_fu_671_p3 <= 
        conv_1_out_0_q0 when (and_ln28_2_fu_665_p2(0) = '1') else 
        select_ln28_reg_1775;
    select_ln28_2_fu_1033_p3 <= 
        conv_1_out_1_load_reg_1782 when (and_ln28_4_fu_1028_p2(0) = '1') else 
        select_ln28_1_reg_1831;
    select_ln28_4_fu_480_p3 <= 
        conv_1_out_0_q1 when (and_ln28_7_fu_474_p2(0) = '1') else 
        ap_const_lv32_800000;
    select_ln28_5_fu_762_p3 <= 
        conv_1_out_0_q1 when (and_ln28_9_fu_756_p2(0) = '1') else 
        select_ln28_4_reg_1789;
    select_ln28_6_fu_1212_p3 <= 
        conv_1_out_1_load_2_reg_1796 when (and_ln28_11_fu_1207_p2(0) = '1') else 
        select_ln28_5_reg_1849;
    select_ln28_8_fu_530_p3 <= 
        conv_1_out_2_q0 when (and_ln28_14_fu_524_p2(0) = '1') else 
        ap_const_lv32_800000;
    select_ln28_9_fu_853_p3 <= 
        conv_1_out_2_q0 when (and_ln28_16_fu_847_p2(0) = '1') else 
        select_ln28_8_reg_1803;
    select_ln28_fu_430_p3 <= 
        conv_1_out_0_q0 when (and_ln28_fu_424_p2(0) = '1') else 
        ap_const_lv32_800000;
        sext_ln28_fu_377_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xor_ln28_reg_1688),3));

    tmp_11_fu_442_p4 <= bitcast_ln28_7_fu_438_p1(30 downto 23);
    tmp_13_fu_683_p4 <= bitcast_ln28_8_fu_679_p1(30 downto 23);
    tmp_14_fu_700_p4 <= bitcast_ln28_9_fu_697_p1(30 downto 23);
    tmp_16_fu_1134_p4 <= bitcast_ln28_10_fu_1131_p1(30 downto 23);
    tmp_17_fu_1151_p4 <= bitcast_ln28_11_fu_1148_p1(30 downto 23);
    tmp_19_fu_1222_p4 <= bitcast_ln28_12_fu_1219_p1(30 downto 23);
    tmp_1_fu_392_p4 <= bitcast_ln28_fu_388_p1(30 downto 23);
    tmp_20_fu_1240_p4 <= bitcast_ln28_13_fu_1236_p1(30 downto 23);
    tmp_22_fu_492_p4 <= bitcast_ln28_14_fu_488_p1(30 downto 23);
    tmp_24_fu_774_p4 <= bitcast_ln28_15_fu_770_p1(30 downto 23);
    tmp_25_fu_791_p4 <= bitcast_ln28_16_fu_788_p1(30 downto 23);
    tmp_27_fu_1313_p4 <= bitcast_ln28_17_fu_1310_p1(30 downto 23);
    tmp_28_fu_1330_p4 <= bitcast_ln28_18_fu_1327_p1(30 downto 23);
    tmp_30_fu_1401_p4 <= bitcast_ln28_19_fu_1398_p1(30 downto 23);
    tmp_31_fu_1419_p4 <= bitcast_ln28_20_fu_1415_p1(30 downto 23);
    tmp_33_fu_542_p4 <= bitcast_ln28_21_fu_538_p1(30 downto 23);
    tmp_35_fu_865_p4 <= bitcast_ln28_22_fu_861_p1(30 downto 23);
    tmp_36_fu_882_p4 <= bitcast_ln28_23_fu_879_p1(30 downto 23);
    tmp_38_fu_1492_p4 <= bitcast_ln28_24_fu_1489_p1(30 downto 23);
    tmp_39_fu_1509_p4 <= bitcast_ln28_25_fu_1506_p1(30 downto 23);
    tmp_3_fu_592_p4 <= bitcast_ln28_1_fu_588_p1(30 downto 23);
    tmp_41_fu_1580_p4 <= bitcast_ln28_26_fu_1577_p1(30 downto 23);
    tmp_42_fu_1598_p4 <= bitcast_ln28_27_fu_1594_p1(30 downto 23);
    tmp_44_fu_358_p3 <= (ap_const_lv62_1 & ap_phi_mux_f_0_phi_fu_282_p4);
    tmp_4_fu_609_p4 <= bitcast_ln28_2_fu_606_p1(30 downto 23);
    tmp_6_fu_955_p4 <= bitcast_ln28_3_fu_952_p1(30 downto 23);
    tmp_7_fu_972_p4 <= bitcast_ln28_4_fu_969_p1(30 downto 23);
    tmp_9_fu_1043_p4 <= bitcast_ln28_5_fu_1040_p1(30 downto 23);
    tmp_s_fu_1061_p4 <= bitcast_ln28_6_fu_1057_p1(30 downto 23);
    trunc_ln28_10_fu_1144_p1 <= bitcast_ln28_10_fu_1131_p1(23 - 1 downto 0);
    trunc_ln28_11_fu_1161_p1 <= bitcast_ln28_11_fu_1148_p1(23 - 1 downto 0);
    trunc_ln28_12_fu_1232_p1 <= bitcast_ln28_12_fu_1219_p1(23 - 1 downto 0);
    trunc_ln28_13_fu_1250_p1 <= bitcast_ln28_13_fu_1236_p1(23 - 1 downto 0);
    trunc_ln28_14_fu_502_p1 <= bitcast_ln28_14_fu_488_p1(23 - 1 downto 0);
    trunc_ln28_15_fu_784_p1 <= bitcast_ln28_15_fu_770_p1(23 - 1 downto 0);
    trunc_ln28_16_fu_801_p1 <= bitcast_ln28_16_fu_788_p1(23 - 1 downto 0);
    trunc_ln28_17_fu_1323_p1 <= bitcast_ln28_17_fu_1310_p1(23 - 1 downto 0);
    trunc_ln28_18_fu_1340_p1 <= bitcast_ln28_18_fu_1327_p1(23 - 1 downto 0);
    trunc_ln28_19_fu_1411_p1 <= bitcast_ln28_19_fu_1398_p1(23 - 1 downto 0);
    trunc_ln28_1_fu_602_p1 <= bitcast_ln28_1_fu_588_p1(23 - 1 downto 0);
    trunc_ln28_20_fu_1429_p1 <= bitcast_ln28_20_fu_1415_p1(23 - 1 downto 0);
    trunc_ln28_21_fu_552_p1 <= bitcast_ln28_21_fu_538_p1(23 - 1 downto 0);
    trunc_ln28_22_fu_875_p1 <= bitcast_ln28_22_fu_861_p1(23 - 1 downto 0);
    trunc_ln28_23_fu_892_p1 <= bitcast_ln28_23_fu_879_p1(23 - 1 downto 0);
    trunc_ln28_24_fu_1502_p1 <= bitcast_ln28_24_fu_1489_p1(23 - 1 downto 0);
    trunc_ln28_25_fu_1519_p1 <= bitcast_ln28_25_fu_1506_p1(23 - 1 downto 0);
    trunc_ln28_26_fu_1590_p1 <= bitcast_ln28_26_fu_1577_p1(23 - 1 downto 0);
    trunc_ln28_27_fu_1608_p1 <= bitcast_ln28_27_fu_1594_p1(23 - 1 downto 0);
    trunc_ln28_2_fu_619_p1 <= bitcast_ln28_2_fu_606_p1(23 - 1 downto 0);
    trunc_ln28_3_fu_965_p1 <= bitcast_ln28_3_fu_952_p1(23 - 1 downto 0);
    trunc_ln28_4_fu_982_p1 <= bitcast_ln28_4_fu_969_p1(23 - 1 downto 0);
    trunc_ln28_5_fu_1053_p1 <= bitcast_ln28_5_fu_1040_p1(23 - 1 downto 0);
    trunc_ln28_6_fu_1071_p1 <= bitcast_ln28_6_fu_1057_p1(23 - 1 downto 0);
    trunc_ln28_7_fu_452_p1 <= bitcast_ln28_7_fu_438_p1(23 - 1 downto 0);
    trunc_ln28_8_fu_693_p1 <= bitcast_ln28_8_fu_679_p1(23 - 1 downto 0);
    trunc_ln28_9_fu_710_p1 <= bitcast_ln28_9_fu_697_p1(23 - 1 downto 0);
    trunc_ln28_fu_402_p1 <= bitcast_ln28_fu_388_p1(23 - 1 downto 0);
    xor_ln28_fu_352_p2 <= (ap_phi_mux_f_0_phi_fu_282_p4 xor ap_const_lv2_2);
    zext_ln28_1_fu_370_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln28_reg_1688),64));
    zext_ln28_2_fu_380_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln28_fu_377_p1),64));
    zext_ln28_fu_344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_f_0_phi_fu_282_p4),64));
end behav;
