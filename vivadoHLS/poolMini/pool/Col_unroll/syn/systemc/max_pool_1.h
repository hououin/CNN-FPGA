// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "max_pool_1_fcmp_3bkb.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > conv_1_out_address0;
    sc_out< sc_logic > conv_1_out_ce0;
    sc_in< sc_lv<32> > conv_1_out_q0;
    sc_out< sc_lv<3> > max_pool_1_out_address0;
    sc_out< sc_logic > max_pool_1_out_ce0;
    sc_out< sc_logic > max_pool_1_out_we0;
    sc_out< sc_lv<32> > max_pool_1_out_d0;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U1;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<2> > f_fu_230_p2;
    sc_signal< sc_lv<2> > f_reg_604;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<6> > zext_ln13_fu_236_p1;
    sc_signal< sc_lv<6> > zext_ln13_reg_609;
    sc_signal< sc_lv<1> > icmp_ln10_fu_224_p2;
    sc_signal< sc_lv<5> > zext_ln13_1_fu_240_p1;
    sc_signal< sc_lv<5> > zext_ln13_1_reg_615;
    sc_signal< sc_lv<2> > r_fu_250_p2;
    sc_signal< sc_lv<2> > r_reg_623;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<2> > shl_ln25_fu_256_p2;
    sc_signal< sc_lv<2> > shl_ln25_reg_628;
    sc_signal< sc_lv<1> > icmp_ln13_fu_244_p2;
    sc_signal< sc_lv<3> > max_pool_1_out_addr_reg_634;
    sc_signal< sc_lv<3> > max_pool_1_out_addr_1_reg_639;
    sc_signal< sc_lv<2> > add_ln20_fu_313_p2;
    sc_signal< sc_lv<2> > add_ln20_reg_647;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<2> > add_ln25_fu_319_p2;
    sc_signal< sc_lv<2> > add_ln25_reg_652;
    sc_signal< sc_lv<1> > icmp_ln20_fu_307_p2;
    sc_signal< sc_lv<2> > add_ln23_fu_330_p2;
    sc_signal< sc_lv<2> > add_ln23_reg_660;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln23_fu_324_p2;
    sc_signal< sc_lv<32> > select_ln28_fu_443_p3;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<2> > add_ln20_1_fu_457_p2;
    sc_signal< sc_lv<2> > add_ln20_1_reg_678;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<2> > add_ln25_1_fu_463_p2;
    sc_signal< sc_lv<2> > add_ln25_1_reg_683;
    sc_signal< sc_lv<1> > icmp_ln20_1_fu_451_p2;
    sc_signal< sc_lv<2> > add_ln23_1_fu_474_p2;
    sc_signal< sc_lv<2> > add_ln23_1_reg_691;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > icmp_ln23_1_fu_468_p2;
    sc_signal< sc_lv<32> > select_ln28_1_fu_593_p3;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<2> > f_0_reg_100;
    sc_signal< sc_lv<2> > r_0_reg_112;
    sc_signal< sc_lv<32> > max_0_0_reg_123;
    sc_signal< sc_lv<2> > mpr_0_0_reg_136;
    sc_signal< sc_lv<32> > max_1_0_reg_147;
    sc_signal< sc_lv<2> > mpc_0_0_reg_159;
    sc_signal< sc_lv<32> > max_0_1_reg_170;
    sc_signal< sc_lv<2> > mpr_0_1_reg_183;
    sc_signal< sc_lv<32> > max_1_1_reg_194;
    sc_signal< sc_lv<2> > mpc_0_1_reg_206;
    sc_signal< sc_lv<64> > zext_ln35_fu_278_p1;
    sc_signal< sc_lv<64> > zext_ln35_1_fu_302_p1;
    sc_signal< sc_lv<64> > zext_ln28_1_fu_354_p1;
    sc_signal< sc_lv<64> > zext_ln28_3_fu_504_p1;
    sc_signal< sc_lv<32> > grp_fu_217_p1;
    sc_signal< sc_lv<4> > tmp_11_fu_270_p3;
    sc_signal< sc_lv<4> > tmp_10_fu_262_p3;
    sc_signal< sc_lv<4> > or_ln35_fu_283_p2;
    sc_signal< sc_lv<5> > tmp_14_cast_fu_289_p3;
    sc_signal< sc_lv<5> > add_ln35_fu_297_p2;
    sc_signal< sc_lv<5> > tmp_12_fu_336_p4;
    sc_signal< sc_lv<6> > zext_ln28_fu_345_p1;
    sc_signal< sc_lv<6> > add_ln28_fu_349_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_fu_359_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_1_fu_377_p1;
    sc_signal< sc_lv<8> > tmp_1_fu_363_p4;
    sc_signal< sc_lv<23> > trunc_ln28_fu_373_p1;
    sc_signal< sc_lv<1> > icmp_ln28_1_fu_401_p2;
    sc_signal< sc_lv<1> > icmp_ln28_fu_395_p2;
    sc_signal< sc_lv<8> > tmp_6_fu_381_p4;
    sc_signal< sc_lv<23> > trunc_ln28_1_fu_391_p1;
    sc_signal< sc_lv<1> > icmp_ln28_3_fu_419_p2;
    sc_signal< sc_lv<1> > icmp_ln28_2_fu_413_p2;
    sc_signal< sc_lv<1> > or_ln28_fu_407_p2;
    sc_signal< sc_lv<1> > or_ln28_1_fu_425_p2;
    sc_signal< sc_lv<1> > and_ln28_fu_431_p2;
    sc_signal< sc_lv<1> > grp_fu_217_p2;
    sc_signal< sc_lv<1> > and_ln28_1_fu_437_p2;
    sc_signal< sc_lv<2> > xor_ln26_fu_480_p2;
    sc_signal< sc_lv<5> > tmp_13_fu_486_p4;
    sc_signal< sc_lv<6> > zext_ln28_2_fu_495_p1;
    sc_signal< sc_lv<6> > add_ln28_1_fu_499_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_2_fu_509_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_3_fu_527_p1;
    sc_signal< sc_lv<8> > tmp_8_fu_513_p4;
    sc_signal< sc_lv<23> > trunc_ln28_2_fu_523_p1;
    sc_signal< sc_lv<1> > icmp_ln28_5_fu_551_p2;
    sc_signal< sc_lv<1> > icmp_ln28_4_fu_545_p2;
    sc_signal< sc_lv<8> > tmp_9_fu_531_p4;
    sc_signal< sc_lv<23> > trunc_ln28_3_fu_541_p1;
    sc_signal< sc_lv<1> > icmp_ln28_7_fu_569_p2;
    sc_signal< sc_lv<1> > icmp_ln28_6_fu_563_p2;
    sc_signal< sc_lv<1> > or_ln28_2_fu_557_p2;
    sc_signal< sc_lv<1> > or_ln28_3_fu_575_p2;
    sc_signal< sc_lv<1> > and_ln28_2_fu_581_p2;
    sc_signal< sc_lv<1> > and_ln28_3_fu_587_p2;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln20_1_fu_457_p2();
    void thread_add_ln20_fu_313_p2();
    void thread_add_ln23_1_fu_474_p2();
    void thread_add_ln23_fu_330_p2();
    void thread_add_ln25_1_fu_463_p2();
    void thread_add_ln25_fu_319_p2();
    void thread_add_ln28_1_fu_499_p2();
    void thread_add_ln28_fu_349_p2();
    void thread_add_ln35_fu_297_p2();
    void thread_and_ln28_1_fu_437_p2();
    void thread_and_ln28_2_fu_581_p2();
    void thread_and_ln28_3_fu_587_p2();
    void thread_and_ln28_fu_431_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bitcast_ln28_1_fu_377_p1();
    void thread_bitcast_ln28_2_fu_509_p1();
    void thread_bitcast_ln28_3_fu_527_p1();
    void thread_bitcast_ln28_fu_359_p1();
    void thread_conv_1_out_address0();
    void thread_conv_1_out_ce0();
    void thread_f_fu_230_p2();
    void thread_grp_fu_217_p1();
    void thread_icmp_ln10_fu_224_p2();
    void thread_icmp_ln13_fu_244_p2();
    void thread_icmp_ln20_1_fu_451_p2();
    void thread_icmp_ln20_fu_307_p2();
    void thread_icmp_ln23_1_fu_468_p2();
    void thread_icmp_ln23_fu_324_p2();
    void thread_icmp_ln28_1_fu_401_p2();
    void thread_icmp_ln28_2_fu_413_p2();
    void thread_icmp_ln28_3_fu_419_p2();
    void thread_icmp_ln28_4_fu_545_p2();
    void thread_icmp_ln28_5_fu_551_p2();
    void thread_icmp_ln28_6_fu_563_p2();
    void thread_icmp_ln28_7_fu_569_p2();
    void thread_icmp_ln28_fu_395_p2();
    void thread_max_pool_1_out_address0();
    void thread_max_pool_1_out_ce0();
    void thread_max_pool_1_out_d0();
    void thread_max_pool_1_out_we0();
    void thread_or_ln28_1_fu_425_p2();
    void thread_or_ln28_2_fu_557_p2();
    void thread_or_ln28_3_fu_575_p2();
    void thread_or_ln28_fu_407_p2();
    void thread_or_ln35_fu_283_p2();
    void thread_r_fu_250_p2();
    void thread_select_ln28_1_fu_593_p3();
    void thread_select_ln28_fu_443_p3();
    void thread_shl_ln25_fu_256_p2();
    void thread_tmp_10_fu_262_p3();
    void thread_tmp_11_fu_270_p3();
    void thread_tmp_12_fu_336_p4();
    void thread_tmp_13_fu_486_p4();
    void thread_tmp_14_cast_fu_289_p3();
    void thread_tmp_1_fu_363_p4();
    void thread_tmp_6_fu_381_p4();
    void thread_tmp_8_fu_513_p4();
    void thread_tmp_9_fu_531_p4();
    void thread_trunc_ln28_1_fu_391_p1();
    void thread_trunc_ln28_2_fu_523_p1();
    void thread_trunc_ln28_3_fu_541_p1();
    void thread_trunc_ln28_fu_373_p1();
    void thread_xor_ln26_fu_480_p2();
    void thread_zext_ln13_1_fu_240_p1();
    void thread_zext_ln13_fu_236_p1();
    void thread_zext_ln28_1_fu_354_p1();
    void thread_zext_ln28_2_fu_495_p1();
    void thread_zext_ln28_3_fu_504_p1();
    void thread_zext_ln28_fu_345_p1();
    void thread_zext_ln35_1_fu_302_p1();
    void thread_zext_ln35_fu_278_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
