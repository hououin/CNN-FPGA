// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "max_pool_1_fcmp_3bkb.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<3> > conv_1_out_0_address0;
    sc_out< sc_logic > conv_1_out_0_ce0;
    sc_in< sc_lv<32> > conv_1_out_0_q0;
    sc_out< sc_lv<3> > conv_1_out_1_address0;
    sc_out< sc_logic > conv_1_out_1_ce0;
    sc_in< sc_lv<32> > conv_1_out_1_q0;
    sc_out< sc_lv<3> > conv_1_out_2_address0;
    sc_out< sc_logic > conv_1_out_2_ce0;
    sc_in< sc_lv<32> > conv_1_out_2_q0;
    sc_out< sc_lv<3> > conv_1_out_3_address0;
    sc_out< sc_logic > conv_1_out_3_ce0;
    sc_in< sc_lv<32> > conv_1_out_3_q0;
    sc_out< sc_lv<3> > max_pool_1_out_address0;
    sc_out< sc_logic > max_pool_1_out_ce0;
    sc_out< sc_logic > max_pool_1_out_we0;
    sc_out< sc_lv<32> > max_pool_1_out_d0;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U1;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<2> > f_fu_266_p2;
    sc_signal< sc_lv<2> > f_reg_656;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > zext_ln13_fu_272_p1;
    sc_signal< sc_lv<4> > zext_ln13_reg_661;
    sc_signal< sc_lv<1> > icmp_ln10_fu_260_p2;
    sc_signal< sc_lv<5> > zext_ln13_1_fu_276_p1;
    sc_signal< sc_lv<5> > zext_ln13_1_reg_667;
    sc_signal< sc_lv<2> > r_fu_286_p2;
    sc_signal< sc_lv<2> > r_reg_675;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<2> > shl_ln25_fu_292_p2;
    sc_signal< sc_lv<2> > shl_ln25_reg_680;
    sc_signal< sc_lv<1> > icmp_ln13_fu_280_p2;
    sc_signal< sc_lv<3> > max_pool_1_out_addr_reg_686;
    sc_signal< sc_lv<3> > max_pool_1_out_addr_1_reg_691;
    sc_signal< sc_lv<2> > add_ln20_fu_349_p2;
    sc_signal< sc_lv<2> > add_ln20_reg_699;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln20_fu_343_p2;
    sc_signal< sc_lv<32> > conv_1_out_0_load_reg_714;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > conv_1_out_1_load_reg_719;
    sc_signal< sc_lv<2> > add_ln23_fu_389_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > select_ln28_fu_490_p3;
    sc_signal< sc_lv<1> > icmp_ln23_fu_383_p2;
    sc_signal< sc_lv<2> > add_ln20_1_fu_504_p2;
    sc_signal< sc_lv<2> > add_ln20_1_reg_740;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > icmp_ln20_1_fu_498_p2;
    sc_signal< sc_lv<32> > conv_1_out_2_load_reg_755;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > conv_1_out_3_load_reg_760;
    sc_signal< sc_lv<2> > add_ln23_1_fu_544_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > select_ln28_1_fu_645_p3;
    sc_signal< sc_lv<1> > icmp_ln23_1_fu_538_p2;
    sc_signal< sc_lv<2> > f_0_reg_137;
    sc_signal< sc_lv<2> > r_0_reg_149;
    sc_signal< sc_lv<32> > max_0_0_reg_160;
    sc_signal< sc_lv<2> > mpr_0_0_reg_173;
    sc_signal< sc_lv<32> > max_1_0_reg_184;
    sc_signal< sc_lv<2> > mpc_0_0_reg_196;
    sc_signal< sc_lv<32> > max_0_1_reg_207;
    sc_signal< sc_lv<2> > mpr_0_1_reg_220;
    sc_signal< sc_lv<32> > max_1_1_reg_231;
    sc_signal< sc_lv<2> > mpc_0_1_reg_243;
    sc_signal< sc_lv<64> > zext_ln35_fu_314_p1;
    sc_signal< sc_lv<64> > zext_ln35_1_fu_338_p1;
    sc_signal< sc_lv<64> > zext_ln28_1_fu_377_p1;
    sc_signal< sc_lv<64> > zext_ln28_3_fu_532_p1;
    sc_signal< sc_lv<32> > grp_fu_254_p0;
    sc_signal< sc_lv<32> > select_ln28_2_fu_399_p3;
    sc_signal< sc_lv<32> > select_ln28_3_fu_554_p3;
    sc_signal< sc_lv<32> > grp_fu_254_p1;
    sc_signal< sc_lv<4> > tmp_11_fu_306_p3;
    sc_signal< sc_lv<4> > tmp_10_fu_298_p3;
    sc_signal< sc_lv<4> > or_ln35_fu_319_p2;
    sc_signal< sc_lv<5> > tmp_14_cast_fu_325_p3;
    sc_signal< sc_lv<5> > add_ln35_fu_333_p2;
    sc_signal< sc_lv<2> > add_ln25_fu_355_p2;
    sc_signal< sc_lv<3> > tmp_12_fu_360_p3;
    sc_signal< sc_lv<4> > zext_ln28_fu_368_p1;
    sc_signal< sc_lv<4> > add_ln28_fu_372_p2;
    sc_signal< sc_lv<1> > trunc_ln28_fu_395_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_fu_406_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_1_fu_424_p1;
    sc_signal< sc_lv<8> > tmp_1_fu_410_p4;
    sc_signal< sc_lv<23> > trunc_ln28_1_fu_420_p1;
    sc_signal< sc_lv<1> > icmp_ln28_1_fu_448_p2;
    sc_signal< sc_lv<1> > icmp_ln28_fu_442_p2;
    sc_signal< sc_lv<8> > tmp_6_fu_428_p4;
    sc_signal< sc_lv<23> > trunc_ln28_2_fu_438_p1;
    sc_signal< sc_lv<1> > icmp_ln28_3_fu_466_p2;
    sc_signal< sc_lv<1> > icmp_ln28_2_fu_460_p2;
    sc_signal< sc_lv<1> > or_ln28_fu_454_p2;
    sc_signal< sc_lv<1> > or_ln28_1_fu_472_p2;
    sc_signal< sc_lv<1> > and_ln28_fu_478_p2;
    sc_signal< sc_lv<1> > grp_fu_254_p2;
    sc_signal< sc_lv<1> > and_ln28_1_fu_484_p2;
    sc_signal< sc_lv<2> > add_ln25_1_fu_510_p2;
    sc_signal< sc_lv<3> > tmp_13_fu_515_p3;
    sc_signal< sc_lv<4> > zext_ln28_2_fu_523_p1;
    sc_signal< sc_lv<4> > add_ln28_1_fu_527_p2;
    sc_signal< sc_lv<1> > trunc_ln28_3_fu_550_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_2_fu_561_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_3_fu_579_p1;
    sc_signal< sc_lv<8> > tmp_8_fu_565_p4;
    sc_signal< sc_lv<23> > trunc_ln28_4_fu_575_p1;
    sc_signal< sc_lv<1> > icmp_ln28_5_fu_603_p2;
    sc_signal< sc_lv<1> > icmp_ln28_4_fu_597_p2;
    sc_signal< sc_lv<8> > tmp_9_fu_583_p4;
    sc_signal< sc_lv<23> > trunc_ln28_5_fu_593_p1;
    sc_signal< sc_lv<1> > icmp_ln28_7_fu_621_p2;
    sc_signal< sc_lv<1> > icmp_ln28_6_fu_615_p2;
    sc_signal< sc_lv<1> > or_ln28_2_fu_609_p2;
    sc_signal< sc_lv<1> > or_ln28_3_fu_627_p2;
    sc_signal< sc_lv<1> > and_ln28_2_fu_633_p2;
    sc_signal< sc_lv<1> > and_ln28_3_fu_639_p2;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln20_1_fu_504_p2();
    void thread_add_ln20_fu_349_p2();
    void thread_add_ln23_1_fu_544_p2();
    void thread_add_ln23_fu_389_p2();
    void thread_add_ln25_1_fu_510_p2();
    void thread_add_ln25_fu_355_p2();
    void thread_add_ln28_1_fu_527_p2();
    void thread_add_ln28_fu_372_p2();
    void thread_add_ln35_fu_333_p2();
    void thread_and_ln28_1_fu_484_p2();
    void thread_and_ln28_2_fu_633_p2();
    void thread_and_ln28_3_fu_639_p2();
    void thread_and_ln28_fu_478_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bitcast_ln28_1_fu_424_p1();
    void thread_bitcast_ln28_2_fu_561_p1();
    void thread_bitcast_ln28_3_fu_579_p1();
    void thread_bitcast_ln28_fu_406_p1();
    void thread_conv_1_out_0_address0();
    void thread_conv_1_out_0_ce0();
    void thread_conv_1_out_1_address0();
    void thread_conv_1_out_1_ce0();
    void thread_conv_1_out_2_address0();
    void thread_conv_1_out_2_ce0();
    void thread_conv_1_out_3_address0();
    void thread_conv_1_out_3_ce0();
    void thread_f_fu_266_p2();
    void thread_grp_fu_254_p0();
    void thread_grp_fu_254_p1();
    void thread_icmp_ln10_fu_260_p2();
    void thread_icmp_ln13_fu_280_p2();
    void thread_icmp_ln20_1_fu_498_p2();
    void thread_icmp_ln20_fu_343_p2();
    void thread_icmp_ln23_1_fu_538_p2();
    void thread_icmp_ln23_fu_383_p2();
    void thread_icmp_ln28_1_fu_448_p2();
    void thread_icmp_ln28_2_fu_460_p2();
    void thread_icmp_ln28_3_fu_466_p2();
    void thread_icmp_ln28_4_fu_597_p2();
    void thread_icmp_ln28_5_fu_603_p2();
    void thread_icmp_ln28_6_fu_615_p2();
    void thread_icmp_ln28_7_fu_621_p2();
    void thread_icmp_ln28_fu_442_p2();
    void thread_max_pool_1_out_address0();
    void thread_max_pool_1_out_ce0();
    void thread_max_pool_1_out_d0();
    void thread_max_pool_1_out_we0();
    void thread_or_ln28_1_fu_472_p2();
    void thread_or_ln28_2_fu_609_p2();
    void thread_or_ln28_3_fu_627_p2();
    void thread_or_ln28_fu_454_p2();
    void thread_or_ln35_fu_319_p2();
    void thread_r_fu_286_p2();
    void thread_select_ln28_1_fu_645_p3();
    void thread_select_ln28_2_fu_399_p3();
    void thread_select_ln28_3_fu_554_p3();
    void thread_select_ln28_fu_490_p3();
    void thread_shl_ln25_fu_292_p2();
    void thread_tmp_10_fu_298_p3();
    void thread_tmp_11_fu_306_p3();
    void thread_tmp_12_fu_360_p3();
    void thread_tmp_13_fu_515_p3();
    void thread_tmp_14_cast_fu_325_p3();
    void thread_tmp_1_fu_410_p4();
    void thread_tmp_6_fu_428_p4();
    void thread_tmp_8_fu_565_p4();
    void thread_tmp_9_fu_583_p4();
    void thread_trunc_ln28_1_fu_420_p1();
    void thread_trunc_ln28_2_fu_438_p1();
    void thread_trunc_ln28_3_fu_550_p1();
    void thread_trunc_ln28_4_fu_575_p1();
    void thread_trunc_ln28_5_fu_593_p1();
    void thread_trunc_ln28_fu_395_p1();
    void thread_zext_ln13_1_fu_276_p1();
    void thread_zext_ln13_fu_272_p1();
    void thread_zext_ln28_1_fu_377_p1();
    void thread_zext_ln28_2_fu_523_p1();
    void thread_zext_ln28_3_fu_532_p1();
    void thread_zext_ln28_fu_368_p1();
    void thread_zext_ln35_1_fu_338_p1();
    void thread_zext_ln35_fu_314_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
