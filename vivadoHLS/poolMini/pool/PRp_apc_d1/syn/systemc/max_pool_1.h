// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "max_pool_1_fcmp_3bkb.h"
#include "max_pool_1_mux_42cud.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 38
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<3> > conv_1_out_0_address0;
    sc_out< sc_logic > conv_1_out_0_ce0;
    sc_in< sc_lv<32> > conv_1_out_0_q0;
    sc_out< sc_lv<3> > conv_1_out_0_address1;
    sc_out< sc_logic > conv_1_out_0_ce1;
    sc_in< sc_lv<32> > conv_1_out_0_q1;
    sc_out< sc_lv<3> > conv_1_out_1_address0;
    sc_out< sc_logic > conv_1_out_1_ce0;
    sc_in< sc_lv<32> > conv_1_out_1_q0;
    sc_out< sc_lv<3> > conv_1_out_1_address1;
    sc_out< sc_logic > conv_1_out_1_ce1;
    sc_in< sc_lv<32> > conv_1_out_1_q1;
    sc_out< sc_lv<3> > conv_1_out_2_address0;
    sc_out< sc_logic > conv_1_out_2_ce0;
    sc_in< sc_lv<32> > conv_1_out_2_q0;
    sc_out< sc_lv<3> > conv_1_out_2_address1;
    sc_out< sc_logic > conv_1_out_2_ce1;
    sc_in< sc_lv<32> > conv_1_out_2_q1;
    sc_out< sc_lv<3> > conv_1_out_3_address0;
    sc_out< sc_logic > conv_1_out_3_ce0;
    sc_in< sc_lv<32> > conv_1_out_3_q0;
    sc_out< sc_lv<3> > conv_1_out_3_address1;
    sc_out< sc_logic > conv_1_out_3_ce1;
    sc_in< sc_lv<32> > conv_1_out_3_q1;
    sc_out< sc_lv<2> > max_pool_1_out_0_address0;
    sc_out< sc_logic > max_pool_1_out_0_ce0;
    sc_out< sc_logic > max_pool_1_out_0_we0;
    sc_out< sc_lv<32> > max_pool_1_out_0_d0;
    sc_out< sc_lv<2> > max_pool_1_out_1_address0;
    sc_out< sc_logic > max_pool_1_out_1_ce0;
    sc_out< sc_logic > max_pool_1_out_1_we0;
    sc_out< sc_lv<32> > max_pool_1_out_1_d0;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U1;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U2;
    max_pool_1_mux_42cud<1,1,32,32,32,32,2,32>* max_pool_1_mux_42cud_U3;
    max_pool_1_mux_42cud<1,1,32,32,32,32,2,32>* max_pool_1_mux_42cud_U4;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > max_0_reg_260;
    sc_signal< sc_lv<2> > mpr_0_reg_274;
    sc_signal< sc_lv<1> > icmp_ln10_fu_304_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > add_ln10_fu_310_p2;
    sc_signal< sc_lv<4> > add_ln10_reg_763;
    sc_signal< sc_lv<1> > icmp_ln13_fu_322_p2;
    sc_signal< sc_lv<1> > icmp_ln13_reg_768;
    sc_signal< sc_lv<2> > select_ln28_3_fu_336_p3;
    sc_signal< sc_lv<2> > select_ln28_3_reg_773;
    sc_signal< sc_lv<4> > zext_ln28_fu_344_p1;
    sc_signal< sc_lv<4> > zext_ln28_reg_778;
    sc_signal< sc_lv<2> > select_ln25_fu_392_p3;
    sc_signal< sc_lv<2> > select_ln25_reg_783;
    sc_signal< sc_lv<2> > select_ln25_1_fu_410_p3;
    sc_signal< sc_lv<2> > select_ln25_1_reg_789;
    sc_signal< sc_lv<1> > select_ln25_2_fu_418_p3;
    sc_signal< sc_lv<1> > select_ln25_2_reg_794;
    sc_signal< sc_lv<2> > select_ln13_fu_426_p3;
    sc_signal< sc_lv<2> > select_ln13_reg_798;
    sc_signal< sc_lv<3> > conv_1_out_0_addr_reg_803;
    sc_signal< sc_lv<3> > conv_1_out_1_addr_reg_808;
    sc_signal< sc_lv<3> > conv_1_out_2_addr_reg_813;
    sc_signal< sc_lv<3> > conv_1_out_3_addr_reg_818;
    sc_signal< sc_lv<3> > conv_1_out_0_addr_1_reg_823;
    sc_signal< sc_lv<3> > conv_1_out_1_addr_1_reg_828;
    sc_signal< sc_lv<3> > conv_1_out_2_addr_1_reg_833;
    sc_signal< sc_lv<3> > conv_1_out_3_addr_1_reg_838;
    sc_signal< sc_lv<1> > icmp_ln20_fu_492_p2;
    sc_signal< sc_lv<1> > icmp_ln20_reg_843;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln20_reg_843_pp0_iter1_reg;
    sc_signal< sc_lv<2> > mpr_fu_498_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<2> > add_ln28_fu_504_p2;
    sc_signal< sc_lv<2> > add_ln28_reg_852;
    sc_signal< sc_lv<2> > add_ln28_reg_852_pp0_iter1_reg;
    sc_signal< sc_lv<32> > tmp_1_fu_509_p6;
    sc_signal< sc_lv<32> > tmp_1_reg_858;
    sc_signal< sc_lv<32> > select_ln28_1_fu_711_p3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<2> > c_fu_741_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<4> > select_ln13_1_fu_752_p3;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<4> > indvar_flatten15_reg_204;
    sc_signal< sc_lv<2> > f_0_reg_215;
    sc_signal< sc_lv<4> > indvar_flatten_reg_226;
    sc_signal< sc_lv<2> > r_0_reg_238;
    sc_signal< sc_lv<2> > c_0_reg_249;
    sc_signal< sc_lv<64> > zext_ln28_1_fu_452_p1;
    sc_signal< sc_lv<64> > zext_ln28_3_fu_484_p1;
    sc_signal< sc_lv<64> > zext_ln35_1_fu_735_p1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<32> > tmp_8_fu_613_p6;
    sc_signal< sc_lv<32> > select_ln28_fu_605_p3;
    sc_signal< sc_lv<2> > f_fu_316_p2;
    sc_signal< sc_lv<2> > shl_ln25_fu_298_p2;
    sc_signal< sc_lv<1> > trunc_ln25_fu_294_p1;
    sc_signal< sc_lv<1> > xor_ln28_fu_356_p2;
    sc_signal< sc_lv<1> > icmp_ln16_fu_368_p2;
    sc_signal< sc_lv<2> > select_ln28_2_fu_328_p3;
    sc_signal< sc_lv<1> > and_ln28_5_fu_374_p2;
    sc_signal< sc_lv<1> > or_ln25_fu_386_p2;
    sc_signal< sc_lv<2> > r_fu_380_p2;
    sc_signal< sc_lv<2> > shl_ln25_1_fu_404_p2;
    sc_signal< sc_lv<2> > select_ln28_4_fu_348_p3;
    sc_signal< sc_lv<1> > trunc_ln25_1_fu_400_p1;
    sc_signal< sc_lv<1> > and_ln28_4_fu_362_p2;
    sc_signal< sc_lv<1> > trunc_ln26_fu_434_p1;
    sc_signal< sc_lv<3> > tmp_2_fu_444_p3;
    sc_signal< sc_lv<2> > shl_ln26_fu_438_p2;
    sc_signal< sc_lv<2> > or_ln26_fu_460_p2;
    sc_signal< sc_lv<3> > tmp_11_fu_466_p3;
    sc_signal< sc_lv<4> > zext_ln28_2_fu_474_p1;
    sc_signal< sc_lv<4> > add_ln28_1_fu_478_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_fu_522_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_1_fu_539_p1;
    sc_signal< sc_lv<8> > tmp_5_fu_525_p4;
    sc_signal< sc_lv<23> > trunc_ln28_fu_535_p1;
    sc_signal< sc_lv<1> > icmp_ln28_1_fu_563_p2;
    sc_signal< sc_lv<1> > icmp_ln28_fu_557_p2;
    sc_signal< sc_lv<8> > tmp_6_fu_543_p4;
    sc_signal< sc_lv<23> > trunc_ln28_1_fu_553_p1;
    sc_signal< sc_lv<1> > icmp_ln28_3_fu_581_p2;
    sc_signal< sc_lv<1> > icmp_ln28_2_fu_575_p2;
    sc_signal< sc_lv<1> > or_ln28_fu_569_p2;
    sc_signal< sc_lv<1> > or_ln28_1_fu_587_p2;
    sc_signal< sc_lv<1> > and_ln28_fu_593_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_285_p2;
    sc_signal< sc_lv<1> > and_ln28_1_fu_599_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_2_fu_627_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_3_fu_645_p1;
    sc_signal< sc_lv<8> > tmp_9_fu_631_p4;
    sc_signal< sc_lv<23> > trunc_ln28_2_fu_641_p1;
    sc_signal< sc_lv<1> > icmp_ln28_5_fu_669_p2;
    sc_signal< sc_lv<1> > icmp_ln28_4_fu_663_p2;
    sc_signal< sc_lv<8> > tmp_s_fu_649_p4;
    sc_signal< sc_lv<23> > trunc_ln28_3_fu_659_p1;
    sc_signal< sc_lv<1> > icmp_ln28_7_fu_687_p2;
    sc_signal< sc_lv<1> > icmp_ln28_6_fu_681_p2;
    sc_signal< sc_lv<1> > or_ln28_2_fu_675_p2;
    sc_signal< sc_lv<1> > or_ln28_3_fu_693_p2;
    sc_signal< sc_lv<1> > and_ln28_2_fu_699_p2;
    sc_signal< sc_lv<1> > tmp_10_fu_290_p2;
    sc_signal< sc_lv<1> > and_ln28_3_fu_705_p2;
    sc_signal< sc_lv<3> > tmp_12_fu_719_p3;
    sc_signal< sc_lv<4> > zext_ln35_fu_726_p1;
    sc_signal< sc_lv<4> > add_ln35_fu_730_p2;
    sc_signal< sc_lv<4> > add_ln13_1_fu_746_p2;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln10_fu_310_p2();
    void thread_add_ln13_1_fu_746_p2();
    void thread_add_ln28_1_fu_478_p2();
    void thread_add_ln28_fu_504_p2();
    void thread_add_ln35_fu_730_p2();
    void thread_and_ln28_1_fu_599_p2();
    void thread_and_ln28_2_fu_699_p2();
    void thread_and_ln28_3_fu_705_p2();
    void thread_and_ln28_4_fu_362_p2();
    void thread_and_ln28_5_fu_374_p2();
    void thread_and_ln28_fu_593_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_bitcast_ln28_1_fu_539_p1();
    void thread_bitcast_ln28_2_fu_627_p1();
    void thread_bitcast_ln28_3_fu_645_p1();
    void thread_bitcast_ln28_fu_522_p1();
    void thread_c_fu_741_p2();
    void thread_conv_1_out_0_address0();
    void thread_conv_1_out_0_address1();
    void thread_conv_1_out_0_ce0();
    void thread_conv_1_out_0_ce1();
    void thread_conv_1_out_1_address0();
    void thread_conv_1_out_1_address1();
    void thread_conv_1_out_1_ce0();
    void thread_conv_1_out_1_ce1();
    void thread_conv_1_out_2_address0();
    void thread_conv_1_out_2_address1();
    void thread_conv_1_out_2_ce0();
    void thread_conv_1_out_2_ce1();
    void thread_conv_1_out_3_address0();
    void thread_conv_1_out_3_address1();
    void thread_conv_1_out_3_ce0();
    void thread_conv_1_out_3_ce1();
    void thread_f_fu_316_p2();
    void thread_icmp_ln10_fu_304_p2();
    void thread_icmp_ln13_fu_322_p2();
    void thread_icmp_ln16_fu_368_p2();
    void thread_icmp_ln20_fu_492_p2();
    void thread_icmp_ln28_1_fu_563_p2();
    void thread_icmp_ln28_2_fu_575_p2();
    void thread_icmp_ln28_3_fu_581_p2();
    void thread_icmp_ln28_4_fu_663_p2();
    void thread_icmp_ln28_5_fu_669_p2();
    void thread_icmp_ln28_6_fu_681_p2();
    void thread_icmp_ln28_7_fu_687_p2();
    void thread_icmp_ln28_fu_557_p2();
    void thread_max_pool_1_out_0_address0();
    void thread_max_pool_1_out_0_ce0();
    void thread_max_pool_1_out_0_d0();
    void thread_max_pool_1_out_0_we0();
    void thread_max_pool_1_out_1_address0();
    void thread_max_pool_1_out_1_ce0();
    void thread_max_pool_1_out_1_d0();
    void thread_max_pool_1_out_1_we0();
    void thread_mpr_fu_498_p2();
    void thread_or_ln25_fu_386_p2();
    void thread_or_ln26_fu_460_p2();
    void thread_or_ln28_1_fu_587_p2();
    void thread_or_ln28_2_fu_675_p2();
    void thread_or_ln28_3_fu_693_p2();
    void thread_or_ln28_fu_569_p2();
    void thread_r_fu_380_p2();
    void thread_select_ln13_1_fu_752_p3();
    void thread_select_ln13_fu_426_p3();
    void thread_select_ln25_1_fu_410_p3();
    void thread_select_ln25_2_fu_418_p3();
    void thread_select_ln25_fu_392_p3();
    void thread_select_ln28_1_fu_711_p3();
    void thread_select_ln28_2_fu_328_p3();
    void thread_select_ln28_3_fu_336_p3();
    void thread_select_ln28_4_fu_348_p3();
    void thread_select_ln28_fu_605_p3();
    void thread_shl_ln25_1_fu_404_p2();
    void thread_shl_ln25_fu_298_p2();
    void thread_shl_ln26_fu_438_p2();
    void thread_tmp_11_fu_466_p3();
    void thread_tmp_12_fu_719_p3();
    void thread_tmp_2_fu_444_p3();
    void thread_tmp_5_fu_525_p4();
    void thread_tmp_6_fu_543_p4();
    void thread_tmp_9_fu_631_p4();
    void thread_tmp_s_fu_649_p4();
    void thread_trunc_ln25_1_fu_400_p1();
    void thread_trunc_ln25_fu_294_p1();
    void thread_trunc_ln26_fu_434_p1();
    void thread_trunc_ln28_1_fu_553_p1();
    void thread_trunc_ln28_2_fu_641_p1();
    void thread_trunc_ln28_3_fu_659_p1();
    void thread_trunc_ln28_fu_535_p1();
    void thread_xor_ln28_fu_356_p2();
    void thread_zext_ln28_1_fu_452_p1();
    void thread_zext_ln28_2_fu_474_p1();
    void thread_zext_ln28_3_fu_484_p1();
    void thread_zext_ln28_fu_344_p1();
    void thread_zext_ln35_1_fu_735_p1();
    void thread_zext_ln35_fu_726_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
