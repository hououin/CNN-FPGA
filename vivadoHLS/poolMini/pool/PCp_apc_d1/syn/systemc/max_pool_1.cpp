// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "max_pool_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic max_pool_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic max_pool_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> max_pool_1::ap_ST_fsm_state1 = "1";
const sc_lv<4> max_pool_1::ap_ST_fsm_state2 = "10";
const sc_lv<4> max_pool_1::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> max_pool_1::ap_ST_fsm_state5 = "1000";
const sc_lv<32> max_pool_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool max_pool_1::ap_const_boolean_1 = true;
const sc_lv<32> max_pool_1::ap_const_lv32_1 = "1";
const sc_lv<1> max_pool_1::ap_const_lv1_0 = "0";
const sc_lv<32> max_pool_1::ap_const_lv32_2 = "10";
const bool max_pool_1::ap_const_boolean_0 = false;
const sc_lv<32> max_pool_1::ap_const_lv32_3 = "11";
const sc_lv<1> max_pool_1::ap_const_lv1_1 = "1";
const sc_lv<4> max_pool_1::ap_const_lv4_0 = "0000";
const sc_lv<2> max_pool_1::ap_const_lv2_0 = "00";
const sc_lv<3> max_pool_1::ap_const_lv3_0 = "000";
const sc_lv<32> max_pool_1::ap_const_lv32_800000 = "100000000000000000000000";
const sc_lv<2> max_pool_1::ap_const_lv2_1 = "1";
const sc_lv<4> max_pool_1::ap_const_lv4_8 = "1000";
const sc_lv<4> max_pool_1::ap_const_lv4_1 = "1";
const sc_lv<4> max_pool_1::ap_const_lv4_4 = "100";
const sc_lv<2> max_pool_1::ap_const_lv2_2 = "10";
const sc_lv<3> max_pool_1::ap_const_lv3_4 = "100";
const sc_lv<3> max_pool_1::ap_const_lv3_1 = "1";
const sc_lv<32> max_pool_1::ap_const_lv32_17 = "10111";
const sc_lv<32> max_pool_1::ap_const_lv32_1E = "11110";
const sc_lv<8> max_pool_1::ap_const_lv8_FF = "11111111";
const sc_lv<23> max_pool_1::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<5> max_pool_1::ap_const_lv5_2 = "10";

max_pool_1::max_pool_1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    max_pool_1_fcmp_3bkb_U1 = new max_pool_1_fcmp_3bkb<1,1,32,32,1>("max_pool_1_fcmp_3bkb_U1");
    max_pool_1_fcmp_3bkb_U1->din0(max_fu_484_p6);
    max_pool_1_fcmp_3bkb_U1->din1(max_1_reg_235);
    max_pool_1_fcmp_3bkb_U1->opcode(ap_var_for_const0);
    max_pool_1_fcmp_3bkb_U1->dout(tmp_8_fu_259_p2);
    max_pool_1_mux_42cud_U2 = new max_pool_1_mux_42cud<1,1,32,32,32,32,2,32>("max_pool_1_mux_42cud_U2");
    max_pool_1_mux_42cud_U2->din0(conv_1_out_0_q0);
    max_pool_1_mux_42cud_U2->din1(conv_1_out_1_q0);
    max_pool_1_mux_42cud_U2->din2(conv_1_out_2_q0);
    max_pool_1_mux_42cud_U2->din3(conv_1_out_3_q0);
    max_pool_1_mux_42cud_U2->din4(max_fu_484_p5);
    max_pool_1_mux_42cud_U2->dout(max_fu_484_p6);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln10_fu_276_p2);
    sensitive << ( indvar_flatten23_reg_157 );

    SC_METHOD(thread_add_ln13_1_fu_622_p2);
    sensitive << ( indvar_flatten7_reg_179 );

    SC_METHOD(thread_add_ln20_fu_410_p2);
    sensitive << ( indvar_flatten_reg_213 );

    SC_METHOD(thread_add_ln28_1_fu_461_p2);
    sensitive << ( zext_ln28_reg_654 );
    sensitive << ( zext_ln28_2_fu_457_p1 );

    SC_METHOD(thread_add_ln35_1_fu_607_p2);
    sensitive << ( zext_ln28_1_reg_659 );
    sensitive << ( tmp_10_cast_fu_599_p3 );

    SC_METHOD(thread_add_ln35_fu_594_p2);
    sensitive << ( zext_ln35_reg_675 );
    sensitive << ( zext_ln35_1_fu_591_p1 );

    SC_METHOD(thread_and_ln28_1_fu_577_p2);
    sensitive << ( and_ln28_fu_571_p2 );
    sensitive << ( tmp_8_fu_259_p2 );

    SC_METHOD(thread_and_ln28_2_fu_338_p2);
    sensitive << ( icmp_ln16_fu_332_p2 );
    sensitive << ( xor_ln28_fu_326_p2 );

    SC_METHOD(thread_and_ln28_fu_571_p2);
    sensitive << ( or_ln28_fu_547_p2 );
    sensitive << ( or_ln28_1_fu_565_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_00001);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( icmp_ln20_fu_404_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( icmp_ln10_fu_270_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_mpr_0_phi_fu_228_p4);
    sensitive << ( mpr_0_reg_224 );
    sensitive << ( icmp_ln20_reg_690 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln28_4_reg_699 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( icmp_ln10_fu_270_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_bitcast_ln28_1_fu_517_p1);
    sensitive << ( max_1_reg_235 );

    SC_METHOD(thread_bitcast_ln28_fu_499_p1);
    sensitive << ( max_fu_484_p6 );

    SC_METHOD(thread_c_fu_617_p2);
    sensitive << ( select_ln35_reg_664 );

    SC_METHOD(thread_conv_1_out_0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln28_3_fu_466_p1 );

    SC_METHOD(thread_conv_1_out_0_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_conv_1_out_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln28_3_fu_466_p1 );

    SC_METHOD(thread_conv_1_out_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_conv_1_out_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln28_3_fu_466_p1 );

    SC_METHOD(thread_conv_1_out_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_conv_1_out_3_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln28_3_fu_466_p1 );

    SC_METHOD(thread_conv_1_out_3_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_f_fu_282_p2);
    sensitive << ( f_0_reg_168 );

    SC_METHOD(thread_icmp_ln10_fu_270_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( indvar_flatten23_reg_157 );

    SC_METHOD(thread_icmp_ln13_fu_288_p2);
    sensitive << ( icmp_ln10_fu_270_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( indvar_flatten7_reg_179 );

    SC_METHOD(thread_icmp_ln16_fu_332_p2);
    sensitive << ( icmp_ln10_fu_270_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( c_0_reg_202 );

    SC_METHOD(thread_icmp_ln20_fu_404_p2);
    sensitive << ( indvar_flatten_reg_213 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln23_fu_422_p2);
    sensitive << ( mpc_0_reg_248 );
    sensitive << ( icmp_ln20_fu_404_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln28_1_fu_541_p2);
    sensitive << ( icmp_ln20_reg_690 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( trunc_ln28_fu_513_p1 );

    SC_METHOD(thread_icmp_ln28_2_fu_553_p2);
    sensitive << ( icmp_ln20_reg_690 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_7_fu_521_p4 );

    SC_METHOD(thread_icmp_ln28_3_fu_559_p2);
    sensitive << ( icmp_ln20_reg_690 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( trunc_ln28_1_fu_531_p1 );

    SC_METHOD(thread_icmp_ln28_fu_535_p2);
    sensitive << ( icmp_ln20_reg_690 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_6_fu_503_p4 );

    SC_METHOD(thread_j_fu_444_p2);
    sensitive << ( shl_ln26_reg_685 );
    sensitive << ( select_ln28_3_fu_428_p3 );

    SC_METHOD(thread_max_2_fu_583_p3);
    sensitive << ( max_1_reg_235 );
    sensitive << ( max_fu_484_p6 );
    sensitive << ( and_ln28_1_fu_577_p2 );

    SC_METHOD(thread_max_fu_484_p5);
    sensitive << ( select_ln35_2_reg_680 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln28_4_reg_699 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_max_pool_1_out_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln35_2_fu_612_p1 );

    SC_METHOD(thread_max_pool_1_out_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_max_pool_1_out_d0);
    sensitive << ( max_1_reg_235 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_max_pool_1_out_we0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_mpc_fu_474_p2);
    sensitive << ( select_ln28_3_fu_428_p3 );

    SC_METHOD(thread_mpr_fu_416_p2);
    sensitive << ( ap_phi_mux_mpr_0_phi_fu_228_p4 );

    SC_METHOD(thread_or_ln28_1_fu_565_p2);
    sensitive << ( icmp_ln28_3_fu_559_p2 );
    sensitive << ( icmp_ln28_2_fu_553_p2 );

    SC_METHOD(thread_or_ln28_fu_547_p2);
    sensitive << ( icmp_ln28_1_fu_541_p2 );
    sensitive << ( icmp_ln28_fu_535_p2 );

    SC_METHOD(thread_or_ln35_fu_350_p2);
    sensitive << ( icmp_ln13_fu_288_p2 );
    sensitive << ( and_ln28_2_fu_338_p2 );

    SC_METHOD(thread_r_fu_344_p2);
    sensitive << ( select_ln28_fu_294_p3 );

    SC_METHOD(thread_select_ln13_fu_628_p3);
    sensitive << ( icmp_ln13_reg_644 );
    sensitive << ( add_ln13_1_fu_622_p2 );

    SC_METHOD(thread_select_ln28_1_fu_302_p3);
    sensitive << ( icmp_ln13_fu_288_p2 );
    sensitive << ( f_0_reg_168 );
    sensitive << ( f_fu_282_p2 );

    SC_METHOD(thread_select_ln28_2_fu_318_p3);
    sensitive << ( icmp_ln13_fu_288_p2 );
    sensitive << ( shl_ln25_fu_264_p2 );

    SC_METHOD(thread_select_ln28_3_fu_428_p3);
    sensitive << ( mpc_0_reg_248 );
    sensitive << ( icmp_ln23_fu_422_p2 );

    SC_METHOD(thread_select_ln28_4_fu_436_p3);
    sensitive << ( ap_phi_mux_mpr_0_phi_fu_228_p4 );
    sensitive << ( icmp_ln23_fu_422_p2 );
    sensitive << ( mpr_fu_416_p2 );

    SC_METHOD(thread_select_ln28_fu_294_p3);
    sensitive << ( icmp_ln13_fu_288_p2 );
    sensitive << ( r_0_reg_191 );

    SC_METHOD(thread_select_ln35_1_fu_364_p3);
    sensitive << ( select_ln28_fu_294_p3 );
    sensitive << ( and_ln28_2_fu_338_p2 );
    sensitive << ( r_fu_344_p2 );

    SC_METHOD(thread_select_ln35_2_fu_390_p3);
    sensitive << ( and_ln28_2_fu_338_p2 );
    sensitive << ( shl_ln25_1_fu_384_p2 );
    sensitive << ( select_ln28_2_fu_318_p3 );

    SC_METHOD(thread_select_ln35_fu_356_p3);
    sensitive << ( c_0_reg_202 );
    sensitive << ( or_ln35_fu_350_p2 );

    SC_METHOD(thread_shl_ln25_1_fu_384_p2);
    sensitive << ( r_fu_344_p2 );

    SC_METHOD(thread_shl_ln25_fu_264_p2);
    sensitive << ( r_0_reg_191 );

    SC_METHOD(thread_shl_ln26_fu_398_p2);
    sensitive << ( select_ln35_fu_356_p3 );

    SC_METHOD(thread_tmp_10_cast_fu_599_p3);
    sensitive << ( add_ln35_fu_594_p2 );

    SC_METHOD(thread_tmp_6_fu_503_p4);
    sensitive << ( bitcast_ln28_fu_499_p1 );

    SC_METHOD(thread_tmp_7_fu_521_p4);
    sensitive << ( bitcast_ln28_1_fu_517_p1 );

    SC_METHOD(thread_tmp_fu_372_p3);
    sensitive << ( select_ln35_1_fu_364_p3 );

    SC_METHOD(thread_tmp_s_fu_449_p3);
    sensitive << ( j_fu_444_p2 );

    SC_METHOD(thread_trunc_ln28_1_fu_531_p1);
    sensitive << ( bitcast_ln28_1_fu_517_p1 );

    SC_METHOD(thread_trunc_ln28_fu_513_p1);
    sensitive << ( bitcast_ln28_fu_499_p1 );

    SC_METHOD(thread_xor_ln28_fu_326_p2);
    sensitive << ( icmp_ln13_fu_288_p2 );

    SC_METHOD(thread_zext_ln28_1_fu_314_p1);
    sensitive << ( select_ln28_1_fu_302_p3 );

    SC_METHOD(thread_zext_ln28_2_fu_457_p1);
    sensitive << ( tmp_s_fu_449_p3 );

    SC_METHOD(thread_zext_ln28_3_fu_466_p1);
    sensitive << ( add_ln28_1_fu_461_p2 );

    SC_METHOD(thread_zext_ln28_fu_310_p1);
    sensitive << ( select_ln28_1_fu_302_p3 );

    SC_METHOD(thread_zext_ln35_1_fu_591_p1);
    sensitive << ( select_ln35_reg_664 );

    SC_METHOD(thread_zext_ln35_2_fu_612_p1);
    sensitive << ( add_ln35_1_fu_607_p2 );

    SC_METHOD(thread_zext_ln35_fu_380_p1);
    sensitive << ( tmp_fu_372_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln10_fu_270_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln20_fu_404_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "max_pool_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, conv_1_out_0_address0, "(port)conv_1_out_0_address0");
    sc_trace(mVcdFile, conv_1_out_0_ce0, "(port)conv_1_out_0_ce0");
    sc_trace(mVcdFile, conv_1_out_0_q0, "(port)conv_1_out_0_q0");
    sc_trace(mVcdFile, conv_1_out_1_address0, "(port)conv_1_out_1_address0");
    sc_trace(mVcdFile, conv_1_out_1_ce0, "(port)conv_1_out_1_ce0");
    sc_trace(mVcdFile, conv_1_out_1_q0, "(port)conv_1_out_1_q0");
    sc_trace(mVcdFile, conv_1_out_2_address0, "(port)conv_1_out_2_address0");
    sc_trace(mVcdFile, conv_1_out_2_ce0, "(port)conv_1_out_2_ce0");
    sc_trace(mVcdFile, conv_1_out_2_q0, "(port)conv_1_out_2_q0");
    sc_trace(mVcdFile, conv_1_out_3_address0, "(port)conv_1_out_3_address0");
    sc_trace(mVcdFile, conv_1_out_3_ce0, "(port)conv_1_out_3_ce0");
    sc_trace(mVcdFile, conv_1_out_3_q0, "(port)conv_1_out_3_q0");
    sc_trace(mVcdFile, max_pool_1_out_address0, "(port)max_pool_1_out_address0");
    sc_trace(mVcdFile, max_pool_1_out_ce0, "(port)max_pool_1_out_ce0");
    sc_trace(mVcdFile, max_pool_1_out_we0, "(port)max_pool_1_out_we0");
    sc_trace(mVcdFile, max_pool_1_out_d0, "(port)max_pool_1_out_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_213, "indvar_flatten_reg_213");
    sc_trace(mVcdFile, mpr_0_reg_224, "mpr_0_reg_224");
    sc_trace(mVcdFile, max_1_reg_235, "max_1_reg_235");
    sc_trace(mVcdFile, mpc_0_reg_248, "mpc_0_reg_248");
    sc_trace(mVcdFile, icmp_ln10_fu_270_p2, "icmp_ln10_fu_270_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, add_ln10_fu_276_p2, "add_ln10_fu_276_p2");
    sc_trace(mVcdFile, add_ln10_reg_639, "add_ln10_reg_639");
    sc_trace(mVcdFile, icmp_ln13_fu_288_p2, "icmp_ln13_fu_288_p2");
    sc_trace(mVcdFile, icmp_ln13_reg_644, "icmp_ln13_reg_644");
    sc_trace(mVcdFile, select_ln28_1_fu_302_p3, "select_ln28_1_fu_302_p3");
    sc_trace(mVcdFile, select_ln28_1_reg_649, "select_ln28_1_reg_649");
    sc_trace(mVcdFile, zext_ln28_fu_310_p1, "zext_ln28_fu_310_p1");
    sc_trace(mVcdFile, zext_ln28_reg_654, "zext_ln28_reg_654");
    sc_trace(mVcdFile, zext_ln28_1_fu_314_p1, "zext_ln28_1_fu_314_p1");
    sc_trace(mVcdFile, zext_ln28_1_reg_659, "zext_ln28_1_reg_659");
    sc_trace(mVcdFile, select_ln35_fu_356_p3, "select_ln35_fu_356_p3");
    sc_trace(mVcdFile, select_ln35_reg_664, "select_ln35_reg_664");
    sc_trace(mVcdFile, select_ln35_1_fu_364_p3, "select_ln35_1_fu_364_p3");
    sc_trace(mVcdFile, select_ln35_1_reg_670, "select_ln35_1_reg_670");
    sc_trace(mVcdFile, zext_ln35_fu_380_p1, "zext_ln35_fu_380_p1");
    sc_trace(mVcdFile, zext_ln35_reg_675, "zext_ln35_reg_675");
    sc_trace(mVcdFile, select_ln35_2_fu_390_p3, "select_ln35_2_fu_390_p3");
    sc_trace(mVcdFile, select_ln35_2_reg_680, "select_ln35_2_reg_680");
    sc_trace(mVcdFile, shl_ln26_fu_398_p2, "shl_ln26_fu_398_p2");
    sc_trace(mVcdFile, shl_ln26_reg_685, "shl_ln26_reg_685");
    sc_trace(mVcdFile, icmp_ln20_fu_404_p2, "icmp_ln20_fu_404_p2");
    sc_trace(mVcdFile, icmp_ln20_reg_690, "icmp_ln20_reg_690");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, add_ln20_fu_410_p2, "add_ln20_fu_410_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln28_4_fu_436_p3, "select_ln28_4_fu_436_p3");
    sc_trace(mVcdFile, select_ln28_4_reg_699, "select_ln28_4_reg_699");
    sc_trace(mVcdFile, mpc_fu_474_p2, "mpc_fu_474_p2");
    sc_trace(mVcdFile, max_2_fu_583_p3, "max_2_fu_583_p3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, c_fu_617_p2, "c_fu_617_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, select_ln13_fu_628_p3, "select_ln13_fu_628_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, indvar_flatten23_reg_157, "indvar_flatten23_reg_157");
    sc_trace(mVcdFile, f_0_reg_168, "f_0_reg_168");
    sc_trace(mVcdFile, indvar_flatten7_reg_179, "indvar_flatten7_reg_179");
    sc_trace(mVcdFile, r_0_reg_191, "r_0_reg_191");
    sc_trace(mVcdFile, c_0_reg_202, "c_0_reg_202");
    sc_trace(mVcdFile, ap_phi_mux_mpr_0_phi_fu_228_p4, "ap_phi_mux_mpr_0_phi_fu_228_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, zext_ln28_3_fu_466_p1, "zext_ln28_3_fu_466_p1");
    sc_trace(mVcdFile, zext_ln35_2_fu_612_p1, "zext_ln35_2_fu_612_p1");
    sc_trace(mVcdFile, max_fu_484_p6, "max_fu_484_p6");
    sc_trace(mVcdFile, f_fu_282_p2, "f_fu_282_p2");
    sc_trace(mVcdFile, shl_ln25_fu_264_p2, "shl_ln25_fu_264_p2");
    sc_trace(mVcdFile, icmp_ln16_fu_332_p2, "icmp_ln16_fu_332_p2");
    sc_trace(mVcdFile, xor_ln28_fu_326_p2, "xor_ln28_fu_326_p2");
    sc_trace(mVcdFile, select_ln28_fu_294_p3, "select_ln28_fu_294_p3");
    sc_trace(mVcdFile, and_ln28_2_fu_338_p2, "and_ln28_2_fu_338_p2");
    sc_trace(mVcdFile, or_ln35_fu_350_p2, "or_ln35_fu_350_p2");
    sc_trace(mVcdFile, r_fu_344_p2, "r_fu_344_p2");
    sc_trace(mVcdFile, tmp_fu_372_p3, "tmp_fu_372_p3");
    sc_trace(mVcdFile, shl_ln25_1_fu_384_p2, "shl_ln25_1_fu_384_p2");
    sc_trace(mVcdFile, select_ln28_2_fu_318_p3, "select_ln28_2_fu_318_p3");
    sc_trace(mVcdFile, icmp_ln23_fu_422_p2, "icmp_ln23_fu_422_p2");
    sc_trace(mVcdFile, mpr_fu_416_p2, "mpr_fu_416_p2");
    sc_trace(mVcdFile, select_ln28_3_fu_428_p3, "select_ln28_3_fu_428_p3");
    sc_trace(mVcdFile, j_fu_444_p2, "j_fu_444_p2");
    sc_trace(mVcdFile, tmp_s_fu_449_p3, "tmp_s_fu_449_p3");
    sc_trace(mVcdFile, zext_ln28_2_fu_457_p1, "zext_ln28_2_fu_457_p1");
    sc_trace(mVcdFile, add_ln28_1_fu_461_p2, "add_ln28_1_fu_461_p2");
    sc_trace(mVcdFile, max_fu_484_p5, "max_fu_484_p5");
    sc_trace(mVcdFile, bitcast_ln28_fu_499_p1, "bitcast_ln28_fu_499_p1");
    sc_trace(mVcdFile, bitcast_ln28_1_fu_517_p1, "bitcast_ln28_1_fu_517_p1");
    sc_trace(mVcdFile, tmp_6_fu_503_p4, "tmp_6_fu_503_p4");
    sc_trace(mVcdFile, trunc_ln28_fu_513_p1, "trunc_ln28_fu_513_p1");
    sc_trace(mVcdFile, icmp_ln28_1_fu_541_p2, "icmp_ln28_1_fu_541_p2");
    sc_trace(mVcdFile, icmp_ln28_fu_535_p2, "icmp_ln28_fu_535_p2");
    sc_trace(mVcdFile, tmp_7_fu_521_p4, "tmp_7_fu_521_p4");
    sc_trace(mVcdFile, trunc_ln28_1_fu_531_p1, "trunc_ln28_1_fu_531_p1");
    sc_trace(mVcdFile, icmp_ln28_3_fu_559_p2, "icmp_ln28_3_fu_559_p2");
    sc_trace(mVcdFile, icmp_ln28_2_fu_553_p2, "icmp_ln28_2_fu_553_p2");
    sc_trace(mVcdFile, or_ln28_fu_547_p2, "or_ln28_fu_547_p2");
    sc_trace(mVcdFile, or_ln28_1_fu_565_p2, "or_ln28_1_fu_565_p2");
    sc_trace(mVcdFile, and_ln28_fu_571_p2, "and_ln28_fu_571_p2");
    sc_trace(mVcdFile, tmp_8_fu_259_p2, "tmp_8_fu_259_p2");
    sc_trace(mVcdFile, and_ln28_1_fu_577_p2, "and_ln28_1_fu_577_p2");
    sc_trace(mVcdFile, zext_ln35_1_fu_591_p1, "zext_ln35_1_fu_591_p1");
    sc_trace(mVcdFile, add_ln35_fu_594_p2, "add_ln35_fu_594_p2");
    sc_trace(mVcdFile, tmp_10_cast_fu_599_p3, "tmp_10_cast_fu_599_p3");
    sc_trace(mVcdFile, add_ln35_1_fu_607_p2, "add_ln35_1_fu_607_p2");
    sc_trace(mVcdFile, add_ln13_1_fu_622_p2, "add_ln13_1_fu_622_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_00001, "ap_block_pp0_stage0_00001");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("max_pool_1.hdltvin.dat");
    mHdltvoutHandle.open("max_pool_1.hdltvout.dat");
}

max_pool_1::~max_pool_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete max_pool_1_fcmp_3bkb_U1;
    delete max_pool_1_mux_42cud_U2;
}

void max_pool_1::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv5_2;
}

void max_pool_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln10_fu_270_p2.read(), ap_const_lv1_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln10_fu_270_p2.read(), ap_const_lv1_0))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        c_0_reg_202 = c_fu_617_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        c_0_reg_202 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        f_0_reg_168 = select_ln28_1_reg_649.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        f_0_reg_168 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        indvar_flatten23_reg_157 = add_ln10_reg_639.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten23_reg_157 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        indvar_flatten7_reg_179 = select_ln13_fu_628_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten7_reg_179 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_404_p2.read()))) {
        indvar_flatten_reg_213 = add_ln20_fu_410_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln10_fu_270_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_213 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_reg_690.read()))) {
        max_1_reg_235 = max_2_fu_583_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln10_fu_270_p2.read(), ap_const_lv1_0))) {
        max_1_reg_235 = ap_const_lv32_800000;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_404_p2.read()))) {
        mpc_0_reg_248 = mpc_fu_474_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln10_fu_270_p2.read(), ap_const_lv1_0))) {
        mpc_0_reg_248 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_reg_690.read()))) {
        mpr_0_reg_224 = select_ln28_4_reg_699.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln10_fu_270_p2.read(), ap_const_lv1_0))) {
        mpr_0_reg_224 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_0_reg_191 = select_ln35_1_reg_670.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        r_0_reg_191 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        add_ln10_reg_639 = add_ln10_fu_276_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln10_fu_270_p2.read(), ap_const_lv1_0))) {
        icmp_ln13_reg_644 = icmp_ln13_fu_288_p2.read();
        select_ln28_1_reg_649 = select_ln28_1_fu_302_p3.read();
        select_ln35_1_reg_670 = select_ln35_1_fu_364_p3.read();
        select_ln35_2_reg_680 = select_ln35_2_fu_390_p3.read();
        select_ln35_reg_664 = select_ln35_fu_356_p3.read();
        shl_ln26_reg_685 = shl_ln26_fu_398_p2.read();
        zext_ln28_1_reg_659 = zext_ln28_1_fu_314_p1.read();
        zext_ln28_reg_654 = zext_ln28_fu_310_p1.read();
        zext_ln35_reg_675 = zext_ln35_fu_380_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln20_reg_690 = icmp_ln20_fu_404_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_404_p2.read()))) {
        select_ln28_4_reg_699 = select_ln28_4_fu_436_p3.read();
    }
}

void max_pool_1::thread_add_ln10_fu_276_p2() {
    add_ln10_fu_276_p2 = (!ap_const_lv4_1.is_01() || !indvar_flatten23_reg_157.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_1) + sc_biguint<4>(indvar_flatten23_reg_157.read()));
}

void max_pool_1::thread_add_ln13_1_fu_622_p2() {
    add_ln13_1_fu_622_p2 = (!indvar_flatten7_reg_179.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(indvar_flatten7_reg_179.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void max_pool_1::thread_add_ln20_fu_410_p2() {
    add_ln20_fu_410_p2 = (!indvar_flatten_reg_213.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(indvar_flatten_reg_213.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void max_pool_1::thread_add_ln28_1_fu_461_p2() {
    add_ln28_1_fu_461_p2 = (!zext_ln28_2_fu_457_p1.read().is_01() || !zext_ln28_reg_654.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln28_2_fu_457_p1.read()) + sc_biguint<4>(zext_ln28_reg_654.read()));
}

void max_pool_1::thread_add_ln35_1_fu_607_p2() {
    add_ln35_1_fu_607_p2 = (!tmp_10_cast_fu_599_p3.read().is_01() || !zext_ln28_1_reg_659.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_10_cast_fu_599_p3.read()) + sc_biguint<5>(zext_ln28_1_reg_659.read()));
}

void max_pool_1::thread_add_ln35_fu_594_p2() {
    add_ln35_fu_594_p2 = (!zext_ln35_reg_675.read().is_01() || !zext_ln35_1_fu_591_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln35_reg_675.read()) + sc_biguint<4>(zext_ln35_1_fu_591_p1.read()));
}

void max_pool_1::thread_and_ln28_1_fu_577_p2() {
    and_ln28_1_fu_577_p2 = (and_ln28_fu_571_p2.read() & tmp_8_fu_259_p2.read());
}

void max_pool_1::thread_and_ln28_2_fu_338_p2() {
    and_ln28_2_fu_338_p2 = (icmp_ln16_fu_332_p2.read() & xor_ln28_fu_326_p2.read());
}

void max_pool_1::thread_and_ln28_fu_571_p2() {
    and_ln28_fu_571_p2 = (or_ln28_fu_547_p2.read() & or_ln28_1_fu_565_p2.read());
}

void max_pool_1::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void max_pool_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void max_pool_1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void max_pool_1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[3];
}

void max_pool_1::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool_1::thread_ap_block_pp0_stage0_00001() {
    ap_block_pp0_stage0_00001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool_1::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool_1::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool_1::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool_1::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool_1::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(icmp_ln20_fu_404_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void max_pool_1::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln10_fu_270_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void max_pool_1::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void max_pool_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void max_pool_1::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void max_pool_1::thread_ap_phi_mux_mpr_0_phi_fu_228_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_reg_690.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_mpr_0_phi_fu_228_p4 = select_ln28_4_reg_699.read();
    } else {
        ap_phi_mux_mpr_0_phi_fu_228_p4 = mpr_0_reg_224.read();
    }
}

void max_pool_1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln10_fu_270_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void max_pool_1::thread_bitcast_ln28_1_fu_517_p1() {
    bitcast_ln28_1_fu_517_p1 = max_1_reg_235.read();
}

void max_pool_1::thread_bitcast_ln28_fu_499_p1() {
    bitcast_ln28_fu_499_p1 = max_fu_484_p6.read();
}

void max_pool_1::thread_c_fu_617_p2() {
    c_fu_617_p2 = (!select_ln35_reg_664.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(select_ln35_reg_664.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void max_pool_1::thread_conv_1_out_0_address0() {
    conv_1_out_0_address0 =  (sc_lv<3>) (zext_ln28_3_fu_466_p1.read());
}

void max_pool_1::thread_conv_1_out_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        conv_1_out_0_ce0 = ap_const_logic_1;
    } else {
        conv_1_out_0_ce0 = ap_const_logic_0;
    }
}

void max_pool_1::thread_conv_1_out_1_address0() {
    conv_1_out_1_address0 =  (sc_lv<3>) (zext_ln28_3_fu_466_p1.read());
}

void max_pool_1::thread_conv_1_out_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        conv_1_out_1_ce0 = ap_const_logic_1;
    } else {
        conv_1_out_1_ce0 = ap_const_logic_0;
    }
}

void max_pool_1::thread_conv_1_out_2_address0() {
    conv_1_out_2_address0 =  (sc_lv<3>) (zext_ln28_3_fu_466_p1.read());
}

void max_pool_1::thread_conv_1_out_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        conv_1_out_2_ce0 = ap_const_logic_1;
    } else {
        conv_1_out_2_ce0 = ap_const_logic_0;
    }
}

void max_pool_1::thread_conv_1_out_3_address0() {
    conv_1_out_3_address0 =  (sc_lv<3>) (zext_ln28_3_fu_466_p1.read());
}

void max_pool_1::thread_conv_1_out_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        conv_1_out_3_ce0 = ap_const_logic_1;
    } else {
        conv_1_out_3_ce0 = ap_const_logic_0;
    }
}

void max_pool_1::thread_f_fu_282_p2() {
    f_fu_282_p2 = (!ap_const_lv2_1.is_01() || !f_0_reg_168.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(f_0_reg_168.read()));
}

void max_pool_1::thread_icmp_ln10_fu_270_p2() {
    icmp_ln10_fu_270_p2 = (!indvar_flatten23_reg_157.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten23_reg_157.read() == ap_const_lv4_8);
}

void max_pool_1::thread_icmp_ln13_fu_288_p2() {
    icmp_ln13_fu_288_p2 = (!indvar_flatten7_reg_179.read().is_01() || !ap_const_lv4_4.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten7_reg_179.read() == ap_const_lv4_4);
}

void max_pool_1::thread_icmp_ln16_fu_332_p2() {
    icmp_ln16_fu_332_p2 = (!c_0_reg_202.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(c_0_reg_202.read() == ap_const_lv2_2);
}

void max_pool_1::thread_icmp_ln20_fu_404_p2() {
    icmp_ln20_fu_404_p2 = (!indvar_flatten_reg_213.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_213.read() == ap_const_lv3_4);
}

void max_pool_1::thread_icmp_ln23_fu_422_p2() {
    icmp_ln23_fu_422_p2 = (!mpc_0_reg_248.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(mpc_0_reg_248.read() == ap_const_lv2_2);
}

void max_pool_1::thread_icmp_ln28_1_fu_541_p2() {
    icmp_ln28_1_fu_541_p2 = (!trunc_ln28_fu_513_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln28_fu_513_p1.read() == ap_const_lv23_0);
}

void max_pool_1::thread_icmp_ln28_2_fu_553_p2() {
    icmp_ln28_2_fu_553_p2 = (!tmp_7_fu_521_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_7_fu_521_p4.read() != ap_const_lv8_FF);
}

void max_pool_1::thread_icmp_ln28_3_fu_559_p2() {
    icmp_ln28_3_fu_559_p2 = (!trunc_ln28_1_fu_531_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln28_1_fu_531_p1.read() == ap_const_lv23_0);
}

void max_pool_1::thread_icmp_ln28_fu_535_p2() {
    icmp_ln28_fu_535_p2 = (!tmp_6_fu_503_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_6_fu_503_p4.read() != ap_const_lv8_FF);
}

void max_pool_1::thread_j_fu_444_p2() {
    j_fu_444_p2 = (!shl_ln26_reg_685.read().is_01() || !select_ln28_3_fu_428_p3.read().is_01())? sc_lv<2>(): (sc_biguint<2>(shl_ln26_reg_685.read()) + sc_biguint<2>(select_ln28_3_fu_428_p3.read()));
}

void max_pool_1::thread_max_2_fu_583_p3() {
    max_2_fu_583_p3 = (!and_ln28_1_fu_577_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln28_1_fu_577_p2.read()[0].to_bool())? max_fu_484_p6.read(): max_1_reg_235.read());
}

void max_pool_1::thread_max_fu_484_p5() {
    max_fu_484_p5 = (!select_ln35_2_reg_680.read().is_01() || !select_ln28_4_reg_699.read().is_01())? sc_lv<2>(): (sc_biguint<2>(select_ln35_2_reg_680.read()) + sc_biguint<2>(select_ln28_4_reg_699.read()));
}

void max_pool_1::thread_max_pool_1_out_address0() {
    max_pool_1_out_address0 =  (sc_lv<3>) (zext_ln35_2_fu_612_p1.read());
}

void max_pool_1::thread_max_pool_1_out_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        max_pool_1_out_ce0 = ap_const_logic_1;
    } else {
        max_pool_1_out_ce0 = ap_const_logic_0;
    }
}

void max_pool_1::thread_max_pool_1_out_d0() {
    max_pool_1_out_d0 = max_1_reg_235.read();
}

void max_pool_1::thread_max_pool_1_out_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        max_pool_1_out_we0 = ap_const_logic_1;
    } else {
        max_pool_1_out_we0 = ap_const_logic_0;
    }
}

void max_pool_1::thread_mpc_fu_474_p2() {
    mpc_fu_474_p2 = (!ap_const_lv2_1.is_01() || !select_ln28_3_fu_428_p3.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(select_ln28_3_fu_428_p3.read()));
}

void max_pool_1::thread_mpr_fu_416_p2() {
    mpr_fu_416_p2 = (!ap_const_lv2_1.is_01() || !ap_phi_mux_mpr_0_phi_fu_228_p4.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(ap_phi_mux_mpr_0_phi_fu_228_p4.read()));
}

void max_pool_1::thread_or_ln28_1_fu_565_p2() {
    or_ln28_1_fu_565_p2 = (icmp_ln28_3_fu_559_p2.read() | icmp_ln28_2_fu_553_p2.read());
}

void max_pool_1::thread_or_ln28_fu_547_p2() {
    or_ln28_fu_547_p2 = (icmp_ln28_1_fu_541_p2.read() | icmp_ln28_fu_535_p2.read());
}

void max_pool_1::thread_or_ln35_fu_350_p2() {
    or_ln35_fu_350_p2 = (and_ln28_2_fu_338_p2.read() | icmp_ln13_fu_288_p2.read());
}

void max_pool_1::thread_r_fu_344_p2() {
    r_fu_344_p2 = (!ap_const_lv2_1.is_01() || !select_ln28_fu_294_p3.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(select_ln28_fu_294_p3.read()));
}

void max_pool_1::thread_select_ln13_fu_628_p3() {
    select_ln13_fu_628_p3 = (!icmp_ln13_reg_644.read()[0].is_01())? sc_lv<4>(): ((icmp_ln13_reg_644.read()[0].to_bool())? ap_const_lv4_1: add_ln13_1_fu_622_p2.read());
}

void max_pool_1::thread_select_ln28_1_fu_302_p3() {
    select_ln28_1_fu_302_p3 = (!icmp_ln13_fu_288_p2.read()[0].is_01())? sc_lv<2>(): ((icmp_ln13_fu_288_p2.read()[0].to_bool())? f_fu_282_p2.read(): f_0_reg_168.read());
}

void max_pool_1::thread_select_ln28_2_fu_318_p3() {
    select_ln28_2_fu_318_p3 = (!icmp_ln13_fu_288_p2.read()[0].is_01())? sc_lv<2>(): ((icmp_ln13_fu_288_p2.read()[0].to_bool())? ap_const_lv2_0: shl_ln25_fu_264_p2.read());
}

void max_pool_1::thread_select_ln28_3_fu_428_p3() {
    select_ln28_3_fu_428_p3 = (!icmp_ln23_fu_422_p2.read()[0].is_01())? sc_lv<2>(): ((icmp_ln23_fu_422_p2.read()[0].to_bool())? ap_const_lv2_0: mpc_0_reg_248.read());
}

void max_pool_1::thread_select_ln28_4_fu_436_p3() {
    select_ln28_4_fu_436_p3 = (!icmp_ln23_fu_422_p2.read()[0].is_01())? sc_lv<2>(): ((icmp_ln23_fu_422_p2.read()[0].to_bool())? mpr_fu_416_p2.read(): ap_phi_mux_mpr_0_phi_fu_228_p4.read());
}

void max_pool_1::thread_select_ln28_fu_294_p3() {
    select_ln28_fu_294_p3 = (!icmp_ln13_fu_288_p2.read()[0].is_01())? sc_lv<2>(): ((icmp_ln13_fu_288_p2.read()[0].to_bool())? ap_const_lv2_0: r_0_reg_191.read());
}

void max_pool_1::thread_select_ln35_1_fu_364_p3() {
    select_ln35_1_fu_364_p3 = (!and_ln28_2_fu_338_p2.read()[0].is_01())? sc_lv<2>(): ((and_ln28_2_fu_338_p2.read()[0].to_bool())? r_fu_344_p2.read(): select_ln28_fu_294_p3.read());
}

void max_pool_1::thread_select_ln35_2_fu_390_p3() {
    select_ln35_2_fu_390_p3 = (!and_ln28_2_fu_338_p2.read()[0].is_01())? sc_lv<2>(): ((and_ln28_2_fu_338_p2.read()[0].to_bool())? shl_ln25_1_fu_384_p2.read(): select_ln28_2_fu_318_p3.read());
}

void max_pool_1::thread_select_ln35_fu_356_p3() {
    select_ln35_fu_356_p3 = (!or_ln35_fu_350_p2.read()[0].is_01())? sc_lv<2>(): ((or_ln35_fu_350_p2.read()[0].to_bool())? ap_const_lv2_0: c_0_reg_202.read());
}

void max_pool_1::thread_shl_ln25_1_fu_384_p2() {
    shl_ln25_1_fu_384_p2 = (!ap_const_lv2_1.is_01())? sc_lv<2>(): r_fu_344_p2.read() << (unsigned short)ap_const_lv2_1.to_uint();
}

void max_pool_1::thread_shl_ln25_fu_264_p2() {
    shl_ln25_fu_264_p2 = (!ap_const_lv2_1.is_01())? sc_lv<2>(): r_0_reg_191.read() << (unsigned short)ap_const_lv2_1.to_uint();
}

void max_pool_1::thread_shl_ln26_fu_398_p2() {
    shl_ln26_fu_398_p2 = (!ap_const_lv2_1.is_01())? sc_lv<2>(): select_ln35_fu_356_p3.read() << (unsigned short)ap_const_lv2_1.to_uint();
}

void max_pool_1::thread_tmp_10_cast_fu_599_p3() {
    tmp_10_cast_fu_599_p3 = esl_concat<4,1>(add_ln35_fu_594_p2.read(), ap_const_lv1_0);
}

void max_pool_1::thread_tmp_6_fu_503_p4() {
    tmp_6_fu_503_p4 = bitcast_ln28_fu_499_p1.read().range(30, 23);
}

void max_pool_1::thread_tmp_7_fu_521_p4() {
    tmp_7_fu_521_p4 = bitcast_ln28_1_fu_517_p1.read().range(30, 23);
}

void max_pool_1::thread_tmp_fu_372_p3() {
    tmp_fu_372_p3 = esl_concat<2,1>(select_ln35_1_fu_364_p3.read(), ap_const_lv1_0);
}

void max_pool_1::thread_tmp_s_fu_449_p3() {
    tmp_s_fu_449_p3 = esl_concat<2,1>(j_fu_444_p2.read(), ap_const_lv1_0);
}

void max_pool_1::thread_trunc_ln28_1_fu_531_p1() {
    trunc_ln28_1_fu_531_p1 = bitcast_ln28_1_fu_517_p1.read().range(23-1, 0);
}

void max_pool_1::thread_trunc_ln28_fu_513_p1() {
    trunc_ln28_fu_513_p1 = bitcast_ln28_fu_499_p1.read().range(23-1, 0);
}

void max_pool_1::thread_xor_ln28_fu_326_p2() {
    xor_ln28_fu_326_p2 = (icmp_ln13_fu_288_p2.read() ^ ap_const_lv1_1);
}

void max_pool_1::thread_zext_ln28_1_fu_314_p1() {
    zext_ln28_1_fu_314_p1 = esl_zext<5,2>(select_ln28_1_fu_302_p3.read());
}

void max_pool_1::thread_zext_ln28_2_fu_457_p1() {
    zext_ln28_2_fu_457_p1 = esl_zext<4,3>(tmp_s_fu_449_p3.read());
}

void max_pool_1::thread_zext_ln28_3_fu_466_p1() {
    zext_ln28_3_fu_466_p1 = esl_zext<64,4>(add_ln28_1_fu_461_p2.read());
}

void max_pool_1::thread_zext_ln28_fu_310_p1() {
    zext_ln28_fu_310_p1 = esl_zext<4,2>(select_ln28_1_fu_302_p3.read());
}

void max_pool_1::thread_zext_ln35_1_fu_591_p1() {
    zext_ln35_1_fu_591_p1 = esl_zext<4,2>(select_ln35_reg_664.read());
}

void max_pool_1::thread_zext_ln35_2_fu_612_p1() {
    zext_ln35_2_fu_612_p1 = esl_zext<64,5>(add_ln35_1_fu_607_p2.read());
}

void max_pool_1::thread_zext_ln35_fu_380_p1() {
    zext_ln35_fu_380_p1 = esl_zext<4,3>(tmp_fu_372_p3.read());
}

void max_pool_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln10_fu_270_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln20_fu_404_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln20_fu_404_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

void max_pool_1::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_1_out_0_address0\" :  \"" << conv_1_out_0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_1_out_0_ce0\" :  \"" << conv_1_out_0_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"conv_1_out_0_q0\" :  \"" << conv_1_out_0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_1_out_1_address0\" :  \"" << conv_1_out_1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_1_out_1_ce0\" :  \"" << conv_1_out_1_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"conv_1_out_1_q0\" :  \"" << conv_1_out_1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_1_out_2_address0\" :  \"" << conv_1_out_2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_1_out_2_ce0\" :  \"" << conv_1_out_2_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"conv_1_out_2_q0\" :  \"" << conv_1_out_2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_1_out_3_address0\" :  \"" << conv_1_out_3_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_1_out_3_ce0\" :  \"" << conv_1_out_3_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"conv_1_out_3_q0\" :  \"" << conv_1_out_3_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_1_out_address0\" :  \"" << max_pool_1_out_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_1_out_ce0\" :  \"" << max_pool_1_out_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_1_out_we0\" :  \"" << max_pool_1_out_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_1_out_d0\" :  \"" << max_pool_1_out_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

