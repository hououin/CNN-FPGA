// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv_1_HH_
#define _conv_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conv_1_fadd_32ns_bkb.h"
#include "conv_1_fmul_32ns_cud.h"
#include "conv_1_fcmp_32ns_dEe.h"
#include "conv_1_conv_weights.h"

namespace ap_rtl {

struct conv_1 : public sc_module {
    // Port declarations 24
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > input_0_address0;
    sc_out< sc_logic > input_0_ce0;
    sc_in< sc_lv<32> > input_0_q0;
    sc_out< sc_lv<4> > input_1_address0;
    sc_out< sc_logic > input_1_ce0;
    sc_in< sc_lv<32> > input_1_q0;
    sc_out< sc_lv<2> > conv_out_0_address0;
    sc_out< sc_logic > conv_out_0_ce0;
    sc_out< sc_logic > conv_out_0_we0;
    sc_out< sc_lv<32> > conv_out_0_d0;
    sc_out< sc_lv<2> > conv_out_1_address0;
    sc_out< sc_logic > conv_out_1_ce0;
    sc_out< sc_logic > conv_out_1_we0;
    sc_out< sc_lv<32> > conv_out_1_d0;
    sc_out< sc_lv<2> > conv_out_2_address0;
    sc_out< sc_logic > conv_out_2_ce0;
    sc_out< sc_logic > conv_out_2_we0;
    sc_out< sc_lv<32> > conv_out_2_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<5> > ap_var_for_const2;


    // Module declarations
    conv_1(sc_module_name name);
    SC_HAS_PROCESS(conv_1);

    ~conv_1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    conv_1_conv_weights* conv_weights_U;
    conv_1_fadd_32ns_bkb<1,2,32,32,32>* conv_1_fadd_32ns_bkb_U1;
    conv_1_fmul_32ns_cud<1,2,32,32,32>* conv_1_fmul_32ns_cud_U2;
    conv_1_fcmp_32ns_dEe<1,1,32,32,1>* conv_1_fcmp_32ns_dEe_U3;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > conv_weights_address0;
    sc_signal< sc_logic > conv_weights_ce0;
    sc_signal< sc_lv<32> > conv_weights_q0;
    sc_signal< sc_lv<5> > indvar_flatten29_reg_237;
    sc_signal< sc_lv<2> > wr_0_reg_248;
    sc_signal< sc_lv<4> > indvar_flatten_reg_259;
    sc_signal< sc_lv<2> > wc_0_reg_270;
    sc_signal< sc_lv<32> > w_sum_2_reg_281;
    sc_signal< sc_lv<2> > ch_0_reg_293;
    sc_signal< sc_lv<1> > icmp_ln8_fu_321_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > add_ln8_fu_327_p2;
    sc_signal< sc_lv<4> > add_ln8_reg_828;
    sc_signal< sc_lv<1> > icmp_ln11_fu_339_p2;
    sc_signal< sc_lv<1> > icmp_ln11_reg_833;
    sc_signal< sc_lv<2> > select_ln34_1_fu_353_p3;
    sc_signal< sc_lv<2> > select_ln34_1_reg_838;
    sc_signal< sc_lv<2> > select_ln34_2_fu_403_p3;
    sc_signal< sc_lv<2> > select_ln34_2_reg_845;
    sc_signal< sc_lv<2> > select_ln34_3_fu_411_p3;
    sc_signal< sc_lv<2> > select_ln34_3_reg_852;
    sc_signal< sc_lv<2> > conv_out_0_addr_reg_860;
    sc_signal< sc_lv<2> > conv_out_1_addr_reg_865;
    sc_signal< sc_lv<2> > conv_out_2_addr_reg_870;
    sc_signal< sc_lv<7> > zext_ln18_fu_436_p1;
    sc_signal< sc_lv<7> > zext_ln18_reg_875;
    sc_signal< sc_lv<1> > icmp_ln18_fu_458_p2;
    sc_signal< sc_lv<1> > icmp_ln18_reg_880;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln18_reg_880_pp0_iter1_reg;
    sc_signal< sc_lv<5> > add_ln18_fu_464_p2;
    sc_signal< sc_lv<5> > add_ln18_reg_884;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<2> > select_ln26_2_fu_490_p3;
    sc_signal< sc_lv<2> > select_ln26_2_reg_889;
    sc_signal< sc_lv<2> > select_ln26_5_fu_582_p3;
    sc_signal< sc_lv<2> > select_ln26_5_reg_894;
    sc_signal< sc_lv<2> > select_ln26_6_fu_590_p3;
    sc_signal< sc_lv<2> > select_ln26_6_reg_899;
    sc_signal< sc_lv<1> > trunc_ln26_2_fu_689_p1;
    sc_signal< sc_lv<1> > trunc_ln26_2_reg_919;
    sc_signal< sc_lv<4> > select_ln21_fu_699_p3;
    sc_signal< sc_lv<4> > select_ln21_reg_924;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state4_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<2> > ch_fu_715_p2;
    sc_signal< sc_lv<2> > ch_reg_939;
    sc_signal< sc_lv<32> > grp_fu_309_p2;
    sc_signal< sc_lv<32> > grp_fu_304_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<32> > merge_i_fu_744_p3;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<2> > f_fu_806_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<4> > select_ln11_fu_817_p3;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<4> > indvar_flatten54_reg_181;
    sc_signal< sc_lv<2> > r_0_reg_192;
    sc_signal< sc_lv<4> > indvar_flatten40_reg_203;
    sc_signal< sc_lv<2> > c_0_reg_215;
    sc_signal< sc_lv<2> > f_0_reg_226;
    sc_signal< sc_lv<5> > ap_phi_mux_indvar_flatten29_phi_fu_241_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<2> > ap_phi_mux_wr_0_phi_fu_252_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_indvar_flatten_phi_fu_263_p4;
    sc_signal< sc_lv<2> > ap_phi_mux_wc_0_phi_fu_274_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_w_sum_2_phi_fu_285_p4;
    sc_signal< sc_lv<2> > ap_phi_mux_ch_0_phi_fu_297_p4;
    sc_signal< sc_lv<64> > zext_ln34_2_fu_429_p1;
    sc_signal< sc_lv<64> > zext_ln26_3_fu_641_p1;
    sc_signal< sc_lv<64> > zext_ln26_5_fu_684_p1;
    sc_signal< sc_lv<32> > w_sum_1_fu_795_p3;
    sc_signal< sc_lv<32> > grp_fu_304_p0;
    sc_signal< sc_lv<32> > grp_fu_304_p1;
    sc_signal< sc_lv<32> > grp_fu_309_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<2> > r_fu_333_p2;
    sc_signal< sc_lv<3> > tmp_2_fu_361_p3;
    sc_signal< sc_lv<1> > icmp_ln14_fu_379_p2;
    sc_signal< sc_lv<1> > xor_ln34_fu_373_p2;
    sc_signal< sc_lv<2> > select_ln34_fu_345_p3;
    sc_signal< sc_lv<1> > and_ln34_fu_385_p2;
    sc_signal< sc_lv<1> > or_ln34_fu_397_p2;
    sc_signal< sc_lv<2> > c_fu_391_p2;
    sc_signal< sc_lv<4> > zext_ln34_1_fu_419_p1;
    sc_signal< sc_lv<4> > zext_ln34_fu_369_p1;
    sc_signal< sc_lv<4> > add_ln34_fu_423_p2;
    sc_signal< sc_lv<2> > add_ln26_fu_440_p2;
    sc_signal< sc_lv<2> > add_ln26_1_fu_445_p2;
    sc_signal< sc_lv<1> > icmp_ln21_fu_476_p2;
    sc_signal< sc_lv<2> > wr_fu_470_p2;
    sc_signal< sc_lv<4> > tmp_6_fu_502_p3;
    sc_signal< sc_lv<5> > zext_ln26_1_fu_510_p1;
    sc_signal< sc_lv<5> > zext_ln26_fu_498_p1;
    sc_signal< sc_lv<5> > sub_ln26_fu_514_p2;
    sc_signal< sc_lv<2> > add_ln26_2_fu_524_p2;
    sc_signal< sc_lv<4> > tmp_7_fu_537_p3;
    sc_signal< sc_lv<4> > tmp_3_fu_450_p3;
    sc_signal< sc_lv<1> > icmp_ln24_fu_558_p2;
    sc_signal< sc_lv<1> > xor_ln26_fu_552_p2;
    sc_signal< sc_lv<2> > select_ln26_1_fu_482_p3;
    sc_signal< sc_lv<1> > and_ln26_fu_564_p2;
    sc_signal< sc_lv<1> > or_ln26_fu_576_p2;
    sc_signal< sc_lv<2> > wc_fu_570_p2;
    sc_signal< sc_lv<6> > zext_ln26_2_fu_598_p1;
    sc_signal< sc_lv<6> > sext_ln26_fu_520_p1;
    sc_signal< sc_lv<6> > add_ln26_3_fu_602_p2;
    sc_signal< sc_lv<7> > tmp_9_fu_608_p3;
    sc_signal< sc_lv<2> > select_ln26_3_fu_529_p3;
    sc_signal< sc_lv<2> > add_ln26_4_fu_620_p2;
    sc_signal< sc_lv<4> > tmp_10_fu_625_p3;
    sc_signal< sc_lv<4> > select_ln26_4_fu_544_p3;
    sc_signal< sc_lv<4> > select_ln26_7_fu_633_p3;
    sc_signal< sc_lv<64> > zext_ln26_4_fu_647_p1;
    sc_signal< sc_lv<64> > sext_ln26_1_fu_616_p1;
    sc_signal< sc_lv<64> > add_ln26_5_fu_651_p2;
    sc_signal< sc_lv<5> > trunc_ln26_1_fu_661_p1;
    sc_signal< sc_lv<7> > p_shl_cast_fu_665_p3;
    sc_signal< sc_lv<7> > trunc_ln26_fu_657_p1;
    sc_signal< sc_lv<7> > sub_ln26_1_fu_673_p2;
    sc_signal< sc_lv<7> > add_ln26_6_fu_679_p2;
    sc_signal< sc_lv<4> > add_ln21_fu_693_p2;
    sc_signal< sc_lv<1> > icmp_ln7_1_fu_725_p2;
    sc_signal< sc_lv<1> > icmp_ln7_fu_720_p2;
    sc_signal< sc_lv<1> > empty_5_fu_738_p2;
    sc_signal< sc_lv<32> > select_ln7_i_fu_730_p3;
    sc_signal< sc_lv<32> > bitcast_ln33_fu_753_p1;
    sc_signal< sc_lv<8> > tmp_fu_757_p4;
    sc_signal< sc_lv<23> > trunc_ln33_fu_767_p1;
    sc_signal< sc_lv<1> > icmp_ln33_1_fu_777_p2;
    sc_signal< sc_lv<1> > icmp_ln33_fu_771_p2;
    sc_signal< sc_lv<1> > or_ln33_fu_783_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_315_p2;
    sc_signal< sc_lv<1> > and_ln33_fu_789_p2;
    sc_signal< sc_lv<4> > add_ln11_1_fu_811_p2;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_pp0_stage0;
    static const sc_lv<6> ap_ST_fsm_pp0_stage1;
    static const sc_lv<6> ap_ST_fsm_state7;
    static const sc_lv<6> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<5> ap_const_lv5_12;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<32> ap_const_lv32_40000000;
    static const sc_lv<32> ap_const_lv32_3F800000;
    static const sc_lv<32> ap_const_lv32_3FC00000;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_add_ln11_1_fu_811_p2();
    void thread_add_ln18_fu_464_p2();
    void thread_add_ln21_fu_693_p2();
    void thread_add_ln26_1_fu_445_p2();
    void thread_add_ln26_2_fu_524_p2();
    void thread_add_ln26_3_fu_602_p2();
    void thread_add_ln26_4_fu_620_p2();
    void thread_add_ln26_5_fu_651_p2();
    void thread_add_ln26_6_fu_679_p2();
    void thread_add_ln26_fu_440_p2();
    void thread_add_ln34_fu_423_p2();
    void thread_add_ln8_fu_327_p2();
    void thread_and_ln26_fu_564_p2();
    void thread_and_ln33_fu_789_p2();
    void thread_and_ln34_fu_385_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage1_iter0();
    void thread_ap_block_state5_pp0_stage0_iter1();
    void thread_ap_block_state6_pp0_stage1_iter1();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_ch_0_phi_fu_297_p4();
    void thread_ap_phi_mux_indvar_flatten29_phi_fu_241_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_263_p4();
    void thread_ap_phi_mux_w_sum_2_phi_fu_285_p4();
    void thread_ap_phi_mux_wc_0_phi_fu_274_p4();
    void thread_ap_phi_mux_wr_0_phi_fu_252_p4();
    void thread_ap_ready();
    void thread_bitcast_ln33_fu_753_p1();
    void thread_c_fu_391_p2();
    void thread_ch_fu_715_p2();
    void thread_conv_out_0_address0();
    void thread_conv_out_0_ce0();
    void thread_conv_out_0_d0();
    void thread_conv_out_0_we0();
    void thread_conv_out_1_address0();
    void thread_conv_out_1_ce0();
    void thread_conv_out_1_d0();
    void thread_conv_out_1_we0();
    void thread_conv_out_2_address0();
    void thread_conv_out_2_ce0();
    void thread_conv_out_2_d0();
    void thread_conv_out_2_we0();
    void thread_conv_weights_address0();
    void thread_conv_weights_ce0();
    void thread_empty_5_fu_738_p2();
    void thread_f_fu_806_p2();
    void thread_grp_fu_304_p0();
    void thread_grp_fu_304_p1();
    void thread_grp_fu_309_p1();
    void thread_icmp_ln11_fu_339_p2();
    void thread_icmp_ln14_fu_379_p2();
    void thread_icmp_ln18_fu_458_p2();
    void thread_icmp_ln21_fu_476_p2();
    void thread_icmp_ln24_fu_558_p2();
    void thread_icmp_ln33_1_fu_777_p2();
    void thread_icmp_ln33_fu_771_p2();
    void thread_icmp_ln7_1_fu_725_p2();
    void thread_icmp_ln7_fu_720_p2();
    void thread_icmp_ln8_fu_321_p2();
    void thread_input_0_address0();
    void thread_input_0_ce0();
    void thread_input_1_address0();
    void thread_input_1_ce0();
    void thread_merge_i_fu_744_p3();
    void thread_or_ln26_fu_576_p2();
    void thread_or_ln33_fu_783_p2();
    void thread_or_ln34_fu_397_p2();
    void thread_p_shl_cast_fu_665_p3();
    void thread_r_fu_333_p2();
    void thread_select_ln11_fu_817_p3();
    void thread_select_ln21_fu_699_p3();
    void thread_select_ln26_1_fu_482_p3();
    void thread_select_ln26_2_fu_490_p3();
    void thread_select_ln26_3_fu_529_p3();
    void thread_select_ln26_4_fu_544_p3();
    void thread_select_ln26_5_fu_582_p3();
    void thread_select_ln26_6_fu_590_p3();
    void thread_select_ln26_7_fu_633_p3();
    void thread_select_ln34_1_fu_353_p3();
    void thread_select_ln34_2_fu_403_p3();
    void thread_select_ln34_3_fu_411_p3();
    void thread_select_ln34_fu_345_p3();
    void thread_select_ln7_i_fu_730_p3();
    void thread_sext_ln26_1_fu_616_p1();
    void thread_sext_ln26_fu_520_p1();
    void thread_sub_ln26_1_fu_673_p2();
    void thread_sub_ln26_fu_514_p2();
    void thread_tmp_10_fu_625_p3();
    void thread_tmp_2_fu_361_p3();
    void thread_tmp_3_fu_450_p3();
    void thread_tmp_6_fu_502_p3();
    void thread_tmp_7_fu_537_p3();
    void thread_tmp_9_fu_608_p3();
    void thread_tmp_fu_757_p4();
    void thread_trunc_ln26_1_fu_661_p1();
    void thread_trunc_ln26_2_fu_689_p1();
    void thread_trunc_ln26_fu_657_p1();
    void thread_trunc_ln33_fu_767_p1();
    void thread_w_sum_1_fu_795_p3();
    void thread_wc_fu_570_p2();
    void thread_wr_fu_470_p2();
    void thread_xor_ln26_fu_552_p2();
    void thread_xor_ln34_fu_373_p2();
    void thread_zext_ln18_fu_436_p1();
    void thread_zext_ln26_1_fu_510_p1();
    void thread_zext_ln26_2_fu_598_p1();
    void thread_zext_ln26_3_fu_641_p1();
    void thread_zext_ln26_4_fu_647_p1();
    void thread_zext_ln26_5_fu_684_p1();
    void thread_zext_ln26_fu_498_p1();
    void thread_zext_ln34_1_fu_419_p1();
    void thread_zext_ln34_2_fu_429_p1();
    void thread_zext_ln34_fu_369_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
