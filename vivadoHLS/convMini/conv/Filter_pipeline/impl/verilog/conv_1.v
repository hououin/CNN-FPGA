// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv_1,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx485t-ffg1157-1,HLS_INPUT_CLOCK=40.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=33.795000,HLS_SYN_LAT=122,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=12,HLS_SYN_FF=1517,HLS_SYN_LUT=2164,HLS_VERSION=2020_1}" *)

module conv_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        conv_out_address0,
        conv_out_ce0,
        conv_out_we0,
        conv_out_d0
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_pp0_stage0 = 11'd2;
parameter    ap_ST_fsm_pp0_stage1 = 11'd4;
parameter    ap_ST_fsm_pp0_stage2 = 11'd8;
parameter    ap_ST_fsm_pp0_stage3 = 11'd16;
parameter    ap_ST_fsm_pp0_stage4 = 11'd32;
parameter    ap_ST_fsm_pp0_stage5 = 11'd64;
parameter    ap_ST_fsm_pp0_stage6 = 11'd128;
parameter    ap_ST_fsm_pp0_stage7 = 11'd256;
parameter    ap_ST_fsm_pp0_stage8 = 11'd512;
parameter    ap_ST_fsm_state24 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] input_r_address0;
output   input_r_ce0;
input  [31:0] input_r_q0;
output  [4:0] input_r_address1;
output   input_r_ce1;
input  [31:0] input_r_q1;
output  [3:0] conv_out_address0;
output   conv_out_ce0;
output   conv_out_we0;
output  [31:0] conv_out_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] input_r_address0;
reg input_r_ce0;
reg[4:0] input_r_address1;
reg input_r_ce1;
reg conv_out_ce0;
reg conv_out_we0;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [3:0] indvar_flatten45_reg_370;
reg   [1:0] r_0_reg_381;
reg   [3:0] indvar_flatten_reg_392;
reg   [1:0] c_0_reg_403;
reg   [1:0] f_0_reg_414;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state12_pp0_stage1_iter1;
wire    ap_block_state21_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln8_reg_1317;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state13_pp0_stage2_iter1;
wire    ap_block_state22_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state14_pp0_stage3_iter1;
wire    ap_block_state23_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state15_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_state16_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_state17_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_state18_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state10_pp0_stage8_iter0;
wire    ap_block_state19_pp0_stage8_iter1;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state11_pp0_stage0_iter1;
wire    ap_block_state20_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] grp_fu_442_p2;
reg   [31:0] reg_469;
wire   [31:0] grp_fu_448_p2;
reg   [31:0] reg_475;
wire   [31:0] grp_fu_425_p2;
reg   [0:0] icmp_ln8_reg_1317_pp0_iter1_reg;
reg   [31:0] reg_486;
reg   [31:0] reg_492;
wire   [31:0] grp_fu_431_p2;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln8_reg_1317_pp0_iter2_reg;
wire   [0:0] icmp_ln8_fu_516_p2;
wire   [3:0] add_ln8_fu_522_p2;
reg   [3:0] add_ln8_reg_1321;
wire   [1:0] select_ln34_1_fu_548_p3;
reg   [1:0] select_ln34_1_reg_1326;
reg   [1:0] select_ln34_1_reg_1326_pp0_iter1_reg;
reg   [1:0] select_ln34_1_reg_1326_pp0_iter2_reg;
wire   [1:0] select_ln34_2_fu_562_p3;
reg   [1:0] select_ln34_2_reg_1334;
wire   [1:0] select_ln34_3_fu_576_p3;
reg   [1:0] select_ln34_3_reg_1341;
wire   [1:0] select_ln34_6_fu_630_p3;
reg   [1:0] select_ln34_6_reg_1351;
reg   [1:0] select_ln34_6_reg_1351_pp0_iter1_reg;
reg   [1:0] select_ln34_6_reg_1351_pp0_iter2_reg;
wire   [1:0] select_ln34_7_fu_638_p3;
reg   [1:0] select_ln34_7_reg_1376;
reg   [1:0] select_ln34_7_reg_1376_pp0_iter1_reg;
reg   [1:0] select_ln34_7_reg_1376_pp0_iter2_reg;
wire   [1:0] select_ln34_8_fu_686_p3;
reg   [1:0] select_ln34_8_reg_1395;
wire   [1:0] select_ln34_9_fu_700_p3;
reg   [1:0] select_ln34_9_reg_1403;
wire   [3:0] select_ln11_fu_714_p3;
reg   [3:0] select_ln11_reg_1411;
wire   [31:0] tmp_fu_754_p5;
wire   [31:0] tmp_4_fu_766_p5;
wire   [31:0] tmp_5_fu_810_p5;
wire   [31:0] tmp_6_fu_822_p5;
wire   [31:0] tmp_7_fu_866_p5;
wire   [31:0] tmp_8_fu_878_p5;
wire   [31:0] tmp_9_fu_922_p5;
wire   [31:0] tmp_10_fu_934_p5;
reg   [31:0] tmp_1_1_0_1_reg_1506;
wire   [31:0] tmp_11_fu_978_p5;
wire   [31:0] tmp_12_fu_990_p5;
reg   [31:0] tmp_1_1_1_reg_1531;
wire   [31:0] tmp_13_fu_1034_p5;
wire   [31:0] tmp_14_fu_1046_p5;
reg   [31:0] tmp_1_1_2_1_reg_1556;
wire   [31:0] tmp_15_fu_1090_p5;
wire   [31:0] tmp_16_fu_1102_p5;
reg   [31:0] tmp_1_2_reg_1581;
reg   [31:0] tmp_1_2_0_1_reg_1586;
wire   [31:0] tmp_17_fu_1146_p5;
wire   [31:0] tmp_18_fu_1158_p5;
wire   [1:0] f_fu_1170_p2;
reg   [1:0] f_reg_1601;
reg   [31:0] tmp_1_2_1_reg_1606;
reg   [31:0] tmp_1_2_1_1_reg_1611;
wire   [31:0] tmp_19_fu_1175_p5;
wire   [31:0] tmp_20_fu_1187_p5;
reg   [31:0] tmp_1_2_2_reg_1626;
reg   [31:0] tmp_1_2_2_1_reg_1631;
wire   [4:0] add_ln34_1_fu_1244_p2;
reg   [4:0] add_ln34_1_reg_1636;
wire   [31:0] tmp_21_fu_1250_p5;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage3_subdone;
reg   [3:0] ap_phi_mux_indvar_flatten45_phi_fu_374_p4;
wire    ap_block_pp0_stage0;
reg   [1:0] ap_phi_mux_r_0_phi_fu_385_p4;
reg   [3:0] ap_phi_mux_indvar_flatten_phi_fu_396_p4;
reg   [1:0] ap_phi_mux_c_0_phi_fu_407_p4;
reg   [1:0] ap_phi_mux_f_0_phi_fu_418_p4;
wire   [63:0] zext_ln26_fu_656_p1;
wire   [63:0] zext_ln26_1_fu_675_p1;
wire   [63:0] zext_ln26_5_fu_730_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln26_6_fu_749_p1;
wire   [63:0] zext_ln26_10_fu_786_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln26_11_fu_805_p1;
wire   [63:0] zext_ln26_2_fu_842_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln26_3_fu_861_p1;
wire   [63:0] zext_ln26_7_fu_898_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln26_8_fu_917_p1;
wire   [63:0] zext_ln26_12_fu_954_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln26_13_fu_973_p1;
wire   [63:0] tmp_25_fu_1002_p5;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln26_4_fu_1029_p1;
wire   [63:0] tmp_28_fu_1058_p5;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln26_9_fu_1085_p1;
wire   [63:0] tmp_31_fu_1114_p5;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln26_14_fu_1141_p1;
wire   [63:0] zext_ln34_3_fu_1262_p1;
reg   [31:0] grp_fu_425_p0;
reg   [31:0] grp_fu_425_p1;
reg   [31:0] grp_fu_431_p0;
reg   [31:0] grp_fu_431_p1;
reg   [31:0] grp_fu_442_p0;
reg   [31:0] grp_fu_448_p0;
wire   [31:0] grp_fu_437_p2;
wire   [0:0] icmp_ln11_fu_528_p2;
wire   [1:0] add_ln26_4_fu_542_p2;
wire   [1:0] xor_ln26_1_fu_556_p2;
wire   [1:0] add_ln26_fu_570_p2;
wire   [1:0] c_fu_504_p2;
wire   [1:0] xor_ln26_fu_510_p2;
wire   [0:0] icmp_ln14_fu_606_p2;
wire   [0:0] xor_ln34_fu_600_p2;
wire   [1:0] select_ln34_fu_534_p3;
wire   [0:0] and_ln34_fu_612_p2;
wire   [0:0] or_ln34_fu_624_p2;
wire   [1:0] add_ln26_2_fu_618_p2;
wire   [4:0] tmp_2_fu_646_p4;
wire   [4:0] or_ln26_fu_661_p2;
wire   [6:0] or_ln26_1_fu_667_p3;
wire   [1:0] xor_ln26_2_fu_680_p2;
wire   [1:0] select_ln34_4_fu_584_p3;
wire   [1:0] add_ln26_3_fu_694_p2;
wire   [1:0] select_ln34_5_fu_592_p3;
wire   [3:0] add_ln11_fu_708_p2;
wire   [4:0] tmp_26_fu_722_p4;
wire   [4:0] or_ln26_5_fu_735_p2;
wire   [6:0] or_ln26_7_fu_741_p3;
wire   [4:0] tmp_29_fu_778_p4;
wire   [4:0] or_ln26_10_fu_791_p2;
wire   [6:0] or_ln26_s_fu_797_p3;
wire   [4:0] tmp_24_fu_834_p4;
wire   [4:0] or_ln26_2_fu_847_p2;
wire   [6:0] or_ln26_3_fu_853_p3;
wire   [4:0] tmp_27_fu_890_p4;
wire   [4:0] or_ln26_6_fu_903_p2;
wire   [6:0] or_ln26_9_fu_909_p3;
wire   [4:0] tmp_30_fu_946_p4;
wire   [4:0] or_ln26_11_fu_959_p2;
wire   [6:0] or_ln26_12_fu_965_p3;
wire   [6:0] tmp_35_cast_fu_1013_p5;
wire   [6:0] or_ln26_4_fu_1023_p2;
wire   [6:0] tmp_43_cast_fu_1069_p5;
wire   [6:0] or_ln26_8_fu_1079_p2;
wire   [6:0] tmp_50_cast_fu_1125_p5;
wire   [6:0] or_ln26_13_fu_1135_p2;
wire   [2:0] tmp_1_fu_1199_p3;
wire   [63:0] zext_ln34_fu_1206_p1;
wire   [63:0] zext_ln34_1_fu_1210_p1;
wire   [63:0] add_ln34_fu_1213_p2;
wire   [2:0] trunc_ln34_1_fu_1223_p1;
wire   [4:0] p_shl_cast_fu_1227_p3;
wire   [4:0] trunc_ln34_fu_1219_p1;
wire   [4:0] sub_ln34_fu_1235_p2;
wire   [4:0] zext_ln34_2_fu_1241_p1;
wire   [31:0] bitcast_ln33_fu_1266_p1;
wire   [7:0] tmp_22_fu_1270_p4;
wire   [22:0] trunc_ln33_fu_1280_p1;
wire   [0:0] icmp_ln33_1_fu_1290_p2;
wire   [0:0] icmp_ln33_fu_1284_p2;
wire   [0:0] or_ln33_fu_1296_p2;
wire   [0:0] tmp_23_fu_453_p2;
wire   [0:0] and_ln33_fu_1302_p2;
wire    ap_block_pp0_stage3_00001;
wire    ap_CS_fsm_state24;
reg   [10:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

conv_1_fadd_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fadd_32ns_bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_425_p0),
    .din1(grp_fu_425_p1),
    .ce(1'b1),
    .dout(grp_fu_425_p2)
);

conv_1_fadd_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fadd_32ns_bkb_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_431_p0),
    .din1(grp_fu_431_p1),
    .ce(1'b1),
    .dout(grp_fu_431_p2)
);

conv_1_fadd_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fadd_32ns_bkb_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_431_p2),
    .din1(tmp_21_fu_1250_p5),
    .ce(1'b1),
    .dout(grp_fu_437_p2)
);

conv_1_fmul_32ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fmul_32ns_cud_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_442_p0),
    .din1(input_r_q0),
    .ce(1'b1),
    .dout(grp_fu_442_p2)
);

conv_1_fmul_32ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fmul_32ns_cud_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_448_p0),
    .din1(input_r_q1),
    .ce(1'b1),
    .dout(grp_fu_448_p2)
);

conv_1_fcmp_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
conv_1_fcmp_32ns_dEe_U6(
    .din0(grp_fu_437_p2),
    .din1(32'd0),
    .opcode(5'd2),
    .dout(tmp_23_fu_453_p2)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U7(
    .din0(32'd1043852296),
    .din1(32'd1046568084),
    .din2(32'd3196388545),
    .din3(select_ln34_6_reg_1351),
    .dout(tmp_fu_754_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U8(
    .din0(32'd1050880884),
    .din1(32'd1048093724),
    .din2(32'd1051100470),
    .din3(select_ln34_6_reg_1351),
    .dout(tmp_4_fu_766_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U9(
    .din0(32'd1039046344),
    .din1(32'd3192498945),
    .din2(32'd3198688346),
    .din3(select_ln34_6_reg_1351),
    .dout(tmp_5_fu_810_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U10(
    .din0(32'd3185004896),
    .din1(32'd1047470304),
    .din2(32'd1040795234),
    .din3(select_ln34_6_reg_1351),
    .dout(tmp_6_fu_822_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U11(
    .din0(32'd3187673822),
    .din1(32'd3189056028),
    .din2(32'd1052183334),
    .din3(select_ln34_6_reg_1351),
    .dout(tmp_7_fu_866_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U12(
    .din0(32'd1017298384),
    .din1(32'd3187280772),
    .din2(32'd1043359760),
    .din3(select_ln34_6_reg_1351),
    .dout(tmp_8_fu_878_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U13(
    .din0(32'd1047977692),
    .din1(32'd3198754716),
    .din2(32'd1036986252),
    .din3(select_ln34_6_reg_1351),
    .dout(tmp_9_fu_922_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U14(
    .din0(32'd3186943036),
    .din1(32'd3199065565),
    .din2(32'd3170323216),
    .din3(select_ln34_6_reg_1351),
    .dout(tmp_10_fu_934_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U15(
    .din0(32'd3192929656),
    .din1(32'd1049038478),
    .din2(32'd3197288499),
    .din3(select_ln34_6_reg_1351),
    .dout(tmp_11_fu_978_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U16(
    .din0(32'd1044659888),
    .din1(32'd1051119700),
    .din2(32'd1023051471),
    .din3(select_ln34_6_reg_1351),
    .dout(tmp_12_fu_990_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U17(
    .din0(32'd1052386068),
    .din1(32'd3192628231),
    .din2(32'd3199398709),
    .din3(select_ln34_6_reg_1351),
    .dout(tmp_13_fu_1034_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U18(
    .din0(32'd3185665976),
    .din1(32'd1045096592),
    .din2(32'd3171658927),
    .din3(select_ln34_6_reg_1351),
    .dout(tmp_14_fu_1046_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U19(
    .din0(32'd1050325564),
    .din1(32'd1048705882),
    .din2(32'd3195814188),
    .din3(select_ln34_6_reg_1351),
    .dout(tmp_15_fu_1090_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U20(
    .din0(32'd1051545250),
    .din1(32'd1027976824),
    .din2(32'd3174496249),
    .din3(select_ln34_6_reg_1351),
    .dout(tmp_16_fu_1102_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U21(
    .din0(32'd3173206433),
    .din1(32'd1046255380),
    .din2(32'd3189737214),
    .din3(select_ln34_6_reg_1351),
    .dout(tmp_17_fu_1146_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U22(
    .din0(32'd3182928271),
    .din1(32'd3175843873),
    .din2(32'd1044046656),
    .din3(select_ln34_6_reg_1351),
    .dout(tmp_18_fu_1158_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U23(
    .din0(32'd3190052988),
    .din1(32'd1048912004),
    .din2(32'd3186893421),
    .din3(select_ln34_6_reg_1351),
    .dout(tmp_19_fu_1175_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U24(
    .din0(32'd3197137310),
    .din1(32'd3199729609),
    .din2(32'd3193191623),
    .din3(select_ln34_6_reg_1351),
    .dout(tmp_20_fu_1187_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U25(
    .din0(32'd1065353216),
    .din1(32'd1073741824),
    .din2(32'd1069547520),
    .din3(select_ln34_6_reg_1351_pp0_iter2_reg),
    .dout(tmp_21_fu_1250_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_1317 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        c_0_reg_403 <= select_ln34_7_reg_1376;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        c_0_reg_403 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_1317 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        f_0_reg_414 <= f_reg_1601;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        f_0_reg_414 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_1317 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten45_reg_370 <= add_ln8_reg_1321;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten45_reg_370 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_1317 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_392 <= select_ln11_reg_1411;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_392 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_1317 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_0_reg_381 <= select_ln34_1_reg_1326;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_0_reg_381 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_1317_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln34_1_reg_1636 <= add_ln34_1_fu_1244_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln8_reg_1321 <= add_ln8_fu_522_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_1317 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        f_reg_1601 <= f_fu_1170_p2;
        tmp_1_2_0_1_reg_1586 <= grp_fu_448_p2;
        tmp_1_2_reg_1581 <= grp_fu_442_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln8_reg_1317 <= icmp_ln8_fu_516_p2;
        icmp_ln8_reg_1317_pp0_iter1_reg <= icmp_ln8_reg_1317;
        icmp_ln8_reg_1317_pp0_iter2_reg <= icmp_ln8_reg_1317_pp0_iter1_reg;
        select_ln34_1_reg_1326_pp0_iter1_reg <= select_ln34_1_reg_1326;
        select_ln34_1_reg_1326_pp0_iter2_reg <= select_ln34_1_reg_1326_pp0_iter1_reg;
        select_ln34_6_reg_1351_pp0_iter1_reg <= select_ln34_6_reg_1351;
        select_ln34_6_reg_1351_pp0_iter2_reg <= select_ln34_6_reg_1351_pp0_iter1_reg;
        select_ln34_7_reg_1376_pp0_iter1_reg <= select_ln34_7_reg_1376;
        select_ln34_7_reg_1376_pp0_iter2_reg <= select_ln34_7_reg_1376_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln8_reg_1317 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_1317 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln8_reg_1317 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)))) begin
        reg_469 <= grp_fu_442_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_1317 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln8_reg_1317 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)))) begin
        reg_475 <= grp_fu_448_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln8_reg_1317 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((icmp_ln8_reg_1317 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)))) begin
        reg_486 <= grp_fu_448_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln8_reg_1317 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((icmp_ln8_reg_1317 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)))) begin
        reg_492 <= grp_fu_442_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_fu_516_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln11_reg_1411 <= select_ln11_fu_714_p3;
        select_ln34_1_reg_1326 <= select_ln34_1_fu_548_p3;
        select_ln34_7_reg_1376 <= select_ln34_7_fu_638_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_fu_516_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln34_2_reg_1334 <= select_ln34_2_fu_562_p3;
        select_ln34_3_reg_1341 <= select_ln34_3_fu_576_p3;
        select_ln34_6_reg_1351 <= select_ln34_6_fu_630_p3;
        select_ln34_8_reg_1395 <= select_ln34_8_fu_686_p3;
        select_ln34_9_reg_1403 <= select_ln34_9_fu_700_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_1317 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        tmp_1_1_0_1_reg_1506 <= grp_fu_448_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_1317 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        tmp_1_1_1_reg_1531 <= grp_fu_442_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_1317 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        tmp_1_1_2_1_reg_1556 <= grp_fu_448_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_1317 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_1_2_1_1_reg_1611 <= grp_fu_448_p2;
        tmp_1_2_1_reg_1606 <= grp_fu_442_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_1317_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        tmp_1_2_2_1_reg_1631 <= grp_fu_448_p2;
        tmp_1_2_2_reg_1626 <= grp_fu_442_p2;
    end
end

always @ (*) begin
    if ((icmp_ln8_fu_516_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln8_reg_1317 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_c_0_phi_fu_407_p4 = select_ln34_7_reg_1376;
    end else begin
        ap_phi_mux_c_0_phi_fu_407_p4 = c_0_reg_403;
    end
end

always @ (*) begin
    if (((icmp_ln8_reg_1317 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_f_0_phi_fu_418_p4 = f_reg_1601;
    end else begin
        ap_phi_mux_f_0_phi_fu_418_p4 = f_0_reg_414;
    end
end

always @ (*) begin
    if (((icmp_ln8_reg_1317 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten45_phi_fu_374_p4 = add_ln8_reg_1321;
    end else begin
        ap_phi_mux_indvar_flatten45_phi_fu_374_p4 = indvar_flatten45_reg_370;
    end
end

always @ (*) begin
    if (((icmp_ln8_reg_1317 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_396_p4 = select_ln11_reg_1411;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_396_p4 = indvar_flatten_reg_392;
    end
end

always @ (*) begin
    if (((icmp_ln8_reg_1317 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_r_0_phi_fu_385_p4 = select_ln34_1_reg_1326;
    end else begin
        ap_phi_mux_r_0_phi_fu_385_p4 = r_0_reg_381;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        conv_out_ce0 = 1'b1;
    end else begin
        conv_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln8_reg_1317_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        conv_out_we0 = 1'b1;
    end else begin
        conv_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_425_p0 = grp_fu_425_p2;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_425_p0 = grp_fu_442_p2;
    end else begin
        grp_fu_425_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_425_p1 = tmp_1_1_1_reg_1531;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_425_p1 = tmp_1_1_0_1_reg_1506;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_425_p1 = reg_492;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_425_p1 = reg_486;
    end else if ((((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_425_p1 = reg_469;
    end else if ((((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        grp_fu_425_p1 = reg_475;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_425_p1 = 32'd0;
    end else begin
        grp_fu_425_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_431_p0 = grp_fu_431_p2;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_431_p0 = grp_fu_425_p2;
    end else begin
        grp_fu_431_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_431_p1 = tmp_1_2_2_1_reg_1631;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_431_p1 = tmp_1_2_2_reg_1626;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_431_p1 = tmp_1_2_1_1_reg_1611;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_431_p1 = tmp_1_2_1_reg_1606;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_431_p1 = tmp_1_2_0_1_reg_1586;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_431_p1 = tmp_1_2_reg_1581;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_431_p1 = tmp_1_1_2_1_reg_1556;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_431_p1 = reg_492;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_431_p1 = reg_486;
    end else begin
        grp_fu_431_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_442_p0 = tmp_19_fu_1175_p5;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_442_p0 = tmp_17_fu_1146_p5;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_442_p0 = tmp_15_fu_1090_p5;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_442_p0 = tmp_13_fu_1034_p5;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_442_p0 = tmp_11_fu_978_p5;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_442_p0 = tmp_9_fu_922_p5;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_442_p0 = tmp_7_fu_866_p5;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_442_p0 = tmp_5_fu_810_p5;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_442_p0 = tmp_fu_754_p5;
    end else begin
        grp_fu_442_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_448_p0 = tmp_20_fu_1187_p5;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_448_p0 = tmp_18_fu_1158_p5;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_448_p0 = tmp_16_fu_1102_p5;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_448_p0 = tmp_14_fu_1046_p5;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_448_p0 = tmp_12_fu_990_p5;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_448_p0 = tmp_10_fu_934_p5;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_448_p0 = tmp_8_fu_878_p5;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_448_p0 = tmp_6_fu_822_p5;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_448_p0 = tmp_4_fu_766_p5;
    end else begin
        grp_fu_448_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            input_r_address0 = tmp_31_fu_1114_p5;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            input_r_address0 = tmp_28_fu_1058_p5;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            input_r_address0 = tmp_25_fu_1002_p5;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            input_r_address0 = zext_ln26_12_fu_954_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            input_r_address0 = zext_ln26_7_fu_898_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_r_address0 = zext_ln26_2_fu_842_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_r_address0 = zext_ln26_10_fu_786_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_r_address0 = zext_ln26_5_fu_730_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_r_address0 = zext_ln26_fu_656_p1;
        end else begin
            input_r_address0 = 'bx;
        end
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            input_r_address1 = zext_ln26_14_fu_1141_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            input_r_address1 = zext_ln26_9_fu_1085_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            input_r_address1 = zext_ln26_4_fu_1029_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            input_r_address1 = zext_ln26_13_fu_973_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            input_r_address1 = zext_ln26_8_fu_917_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_r_address1 = zext_ln26_3_fu_861_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_r_address1 = zext_ln26_11_fu_805_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_r_address1 = zext_ln26_6_fu_749_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_r_address1 = zext_ln26_1_fu_675_p1;
        end else begin
            input_r_address1 = 'bx;
        end
    end else begin
        input_r_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln8_fu_516_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln8_fu_516_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((~((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln11_fu_708_p2 = (4'd1 + ap_phi_mux_indvar_flatten_phi_fu_396_p4);

assign add_ln26_2_fu_618_p2 = (2'd1 + select_ln34_fu_534_p3);

assign add_ln26_3_fu_694_p2 = ($signed(2'd3) + $signed(select_ln34_fu_534_p3));

assign add_ln26_4_fu_542_p2 = (2'd1 + ap_phi_mux_r_0_phi_fu_385_p4);

assign add_ln26_fu_570_p2 = ($signed(2'd3) + $signed(ap_phi_mux_r_0_phi_fu_385_p4));

assign add_ln34_1_fu_1244_p2 = (sub_ln34_fu_1235_p2 + zext_ln34_2_fu_1241_p1);

assign add_ln34_fu_1213_p2 = (zext_ln34_fu_1206_p1 + zext_ln34_1_fu_1210_p1);

assign add_ln8_fu_522_p2 = (ap_phi_mux_indvar_flatten45_phi_fu_374_p4 + 4'd1);

assign and_ln33_fu_1302_p2 = (tmp_23_fu_453_p2 & or_ln33_fu_1296_p2);

assign and_ln34_fu_612_p2 = (xor_ln34_fu_600_p2 & icmp_ln14_fu_606_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd10];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln33_fu_1266_p1 = grp_fu_437_p2;

assign c_fu_504_p2 = (ap_phi_mux_c_0_phi_fu_407_p4 + 2'd1);

assign conv_out_address0 = zext_ln34_3_fu_1262_p1;

assign conv_out_d0 = ((and_ln33_fu_1302_p2[0:0] === 1'b1) ? grp_fu_437_p2 : 32'd0);

assign f_fu_1170_p2 = (2'd1 + select_ln34_6_reg_1351);

assign icmp_ln11_fu_528_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_396_p4 == 4'd6) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_606_p2 = ((ap_phi_mux_f_0_phi_fu_418_p4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln33_1_fu_1290_p2 = ((trunc_ln33_fu_1280_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_1284_p2 = ((tmp_22_fu_1270_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_516_p2 = ((ap_phi_mux_indvar_flatten45_phi_fu_374_p4 == 4'd12) ? 1'b1 : 1'b0);

assign or_ln26_10_fu_791_p2 = (tmp_29_fu_778_p4 | 5'd1);

assign or_ln26_11_fu_959_p2 = (tmp_30_fu_946_p4 | 5'd1);

assign or_ln26_12_fu_965_p3 = {{2'd0}, {or_ln26_11_fu_959_p2}};

assign or_ln26_13_fu_1135_p2 = (tmp_50_cast_fu_1125_p5 | 7'd1);

assign or_ln26_1_fu_667_p3 = {{2'd0}, {or_ln26_fu_661_p2}};

assign or_ln26_2_fu_847_p2 = (tmp_24_fu_834_p4 | 5'd1);

assign or_ln26_3_fu_853_p3 = {{2'd0}, {or_ln26_2_fu_847_p2}};

assign or_ln26_4_fu_1023_p2 = (tmp_35_cast_fu_1013_p5 | 7'd1);

assign or_ln26_5_fu_735_p2 = (tmp_26_fu_722_p4 | 5'd1);

assign or_ln26_6_fu_903_p2 = (tmp_27_fu_890_p4 | 5'd1);

assign or_ln26_7_fu_741_p3 = {{2'd0}, {or_ln26_5_fu_735_p2}};

assign or_ln26_8_fu_1079_p2 = (tmp_43_cast_fu_1069_p5 | 7'd1);

assign or_ln26_9_fu_909_p3 = {{2'd0}, {or_ln26_6_fu_903_p2}};

assign or_ln26_fu_661_p2 = (tmp_2_fu_646_p4 | 5'd1);

assign or_ln26_s_fu_797_p3 = {{2'd0}, {or_ln26_10_fu_791_p2}};

assign or_ln33_fu_1296_p2 = (icmp_ln33_fu_1284_p2 | icmp_ln33_1_fu_1290_p2);

assign or_ln34_fu_624_p2 = (icmp_ln11_fu_528_p2 | and_ln34_fu_612_p2);

assign p_shl_cast_fu_1227_p3 = {{trunc_ln34_1_fu_1223_p1}, {2'd0}};

assign select_ln11_fu_714_p3 = ((icmp_ln11_fu_528_p2[0:0] === 1'b1) ? 4'd1 : add_ln11_fu_708_p2);

assign select_ln34_1_fu_548_p3 = ((icmp_ln11_fu_528_p2[0:0] === 1'b1) ? add_ln26_4_fu_542_p2 : ap_phi_mux_r_0_phi_fu_385_p4);

assign select_ln34_2_fu_562_p3 = ((icmp_ln11_fu_528_p2[0:0] === 1'b1) ? xor_ln26_1_fu_556_p2 : add_ln26_4_fu_542_p2);

assign select_ln34_3_fu_576_p3 = ((icmp_ln11_fu_528_p2[0:0] === 1'b1) ? add_ln26_fu_570_p2 : xor_ln26_1_fu_556_p2);

assign select_ln34_4_fu_584_p3 = ((icmp_ln11_fu_528_p2[0:0] === 1'b1) ? 2'd1 : c_fu_504_p2);

assign select_ln34_5_fu_592_p3 = ((icmp_ln11_fu_528_p2[0:0] === 1'b1) ? 2'd2 : xor_ln26_fu_510_p2);

assign select_ln34_6_fu_630_p3 = ((or_ln34_fu_624_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_f_0_phi_fu_418_p4);

assign select_ln34_7_fu_638_p3 = ((and_ln34_fu_612_p2[0:0] === 1'b1) ? add_ln26_2_fu_618_p2 : select_ln34_fu_534_p3);

assign select_ln34_8_fu_686_p3 = ((and_ln34_fu_612_p2[0:0] === 1'b1) ? xor_ln26_2_fu_680_p2 : select_ln34_4_fu_584_p3);

assign select_ln34_9_fu_700_p3 = ((and_ln34_fu_612_p2[0:0] === 1'b1) ? add_ln26_3_fu_694_p2 : select_ln34_5_fu_592_p3);

assign select_ln34_fu_534_p3 = ((icmp_ln11_fu_528_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_c_0_phi_fu_407_p4);

assign sub_ln34_fu_1235_p2 = (p_shl_cast_fu_1227_p3 - trunc_ln34_fu_1219_p1);

assign tmp_1_fu_1199_p3 = {{select_ln34_1_reg_1326_pp0_iter2_reg}, {1'd0}};

assign tmp_22_fu_1270_p4 = {{bitcast_ln33_fu_1266_p1[30:23]}};

assign tmp_24_fu_834_p4 = {{{select_ln34_2_reg_1334}, {select_ln34_7_reg_1376}}, {1'd0}};

assign tmp_25_fu_1002_p5 = {{{{{{59'd0}, {select_ln34_3_reg_1341}}}, {select_ln34_7_reg_1376}}}, {1'd0}};

assign tmp_26_fu_722_p4 = {{{select_ln34_1_reg_1326}, {select_ln34_8_reg_1395}}, {1'd0}};

assign tmp_27_fu_890_p4 = {{{select_ln34_2_reg_1334}, {select_ln34_8_reg_1395}}, {1'd0}};

assign tmp_28_fu_1058_p5 = {{{{{{59'd0}, {select_ln34_3_reg_1341}}}, {select_ln34_8_reg_1395}}}, {1'd0}};

assign tmp_29_fu_778_p4 = {{{select_ln34_1_reg_1326}, {select_ln34_9_reg_1403}}, {1'd0}};

assign tmp_2_fu_646_p4 = {{{select_ln34_1_fu_548_p3}, {select_ln34_7_fu_638_p3}}, {1'd0}};

assign tmp_30_fu_946_p4 = {{{select_ln34_2_reg_1334}, {select_ln34_9_reg_1403}}, {1'd0}};

assign tmp_31_fu_1114_p5 = {{{{{{59'd0}, {select_ln34_3_reg_1341}}}, {select_ln34_9_reg_1403}}}, {1'd0}};

assign tmp_35_cast_fu_1013_p5 = {{{{{{2'd0}, {select_ln34_3_reg_1341}}}, {select_ln34_7_reg_1376}}}, {1'd0}};

assign tmp_43_cast_fu_1069_p5 = {{{{{{2'd0}, {select_ln34_3_reg_1341}}}, {select_ln34_8_reg_1395}}}, {1'd0}};

assign tmp_50_cast_fu_1125_p5 = {{{{{{2'd0}, {select_ln34_3_reg_1341}}}, {select_ln34_9_reg_1403}}}, {1'd0}};

assign trunc_ln33_fu_1280_p1 = bitcast_ln33_fu_1266_p1[22:0];

assign trunc_ln34_1_fu_1223_p1 = add_ln34_fu_1213_p2[2:0];

assign trunc_ln34_fu_1219_p1 = add_ln34_fu_1213_p2[4:0];

assign xor_ln26_1_fu_556_p2 = (ap_phi_mux_r_0_phi_fu_385_p4 ^ 2'd2);

assign xor_ln26_2_fu_680_p2 = (select_ln34_fu_534_p3 ^ 2'd2);

assign xor_ln26_fu_510_p2 = (ap_phi_mux_c_0_phi_fu_407_p4 ^ 2'd2);

assign xor_ln34_fu_600_p2 = (icmp_ln11_fu_528_p2 ^ 1'd1);

assign zext_ln26_10_fu_786_p1 = tmp_29_fu_778_p4;

assign zext_ln26_11_fu_805_p1 = or_ln26_s_fu_797_p3;

assign zext_ln26_12_fu_954_p1 = tmp_30_fu_946_p4;

assign zext_ln26_13_fu_973_p1 = or_ln26_12_fu_965_p3;

assign zext_ln26_14_fu_1141_p1 = or_ln26_13_fu_1135_p2;

assign zext_ln26_1_fu_675_p1 = or_ln26_1_fu_667_p3;

assign zext_ln26_2_fu_842_p1 = tmp_24_fu_834_p4;

assign zext_ln26_3_fu_861_p1 = or_ln26_3_fu_853_p3;

assign zext_ln26_4_fu_1029_p1 = or_ln26_4_fu_1023_p2;

assign zext_ln26_5_fu_730_p1 = tmp_26_fu_722_p4;

assign zext_ln26_6_fu_749_p1 = or_ln26_7_fu_741_p3;

assign zext_ln26_7_fu_898_p1 = tmp_27_fu_890_p4;

assign zext_ln26_8_fu_917_p1 = or_ln26_9_fu_909_p3;

assign zext_ln26_9_fu_1085_p1 = or_ln26_8_fu_1079_p2;

assign zext_ln26_fu_656_p1 = tmp_2_fu_646_p4;

assign zext_ln34_1_fu_1210_p1 = select_ln34_7_reg_1376_pp0_iter2_reg;

assign zext_ln34_2_fu_1241_p1 = select_ln34_6_reg_1351_pp0_iter2_reg;

assign zext_ln34_3_fu_1262_p1 = add_ln34_1_reg_1636;

assign zext_ln34_fu_1206_p1 = tmp_1_fu_1199_p3;

endmodule //conv_1
