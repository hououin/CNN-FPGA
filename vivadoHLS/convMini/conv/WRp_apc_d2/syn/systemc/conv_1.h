// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv_1_HH_
#define _conv_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conv_1_fadd_32ns_hbi.h"
#include "conv_1_fmul_32ns_ibs.h"
#include "conv_1_fcmp_32ns_jbC.h"
#include "conv_1_conv_weighbkb.h"
#include "conv_1_conv_weighcud.h"
#include "conv_1_conv_weighdEe.h"
#include "conv_1_conv_weigheOg.h"
#include "conv_1_conv_weighfYi.h"
#include "conv_1_conv_weighg8j.h"

namespace ap_rtl {

struct conv_1 : public sc_module {
    // Port declarations 38
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<3> > input_0_address0;
    sc_out< sc_logic > input_0_ce0;
    sc_in< sc_lv<32> > input_0_q0;
    sc_out< sc_lv<3> > input_0_address1;
    sc_out< sc_logic > input_0_ce1;
    sc_in< sc_lv<32> > input_0_q1;
    sc_out< sc_lv<3> > input_1_address0;
    sc_out< sc_logic > input_1_ce0;
    sc_in< sc_lv<32> > input_1_q0;
    sc_out< sc_lv<3> > input_1_address1;
    sc_out< sc_logic > input_1_ce1;
    sc_in< sc_lv<32> > input_1_q1;
    sc_out< sc_lv<3> > input_2_address0;
    sc_out< sc_logic > input_2_ce0;
    sc_in< sc_lv<32> > input_2_q0;
    sc_out< sc_lv<3> > input_2_address1;
    sc_out< sc_logic > input_2_ce1;
    sc_in< sc_lv<32> > input_2_q1;
    sc_out< sc_lv<3> > input_3_address0;
    sc_out< sc_logic > input_3_ce0;
    sc_in< sc_lv<32> > input_3_q0;
    sc_out< sc_lv<3> > input_3_address1;
    sc_out< sc_logic > input_3_ce1;
    sc_in< sc_lv<32> > input_3_q1;
    sc_out< sc_lv<3> > conv_out_0_address0;
    sc_out< sc_logic > conv_out_0_ce0;
    sc_out< sc_logic > conv_out_0_we0;
    sc_out< sc_lv<32> > conv_out_0_d0;
    sc_out< sc_lv<3> > conv_out_1_address0;
    sc_out< sc_logic > conv_out_1_ce0;
    sc_out< sc_logic > conv_out_1_we0;
    sc_out< sc_lv<32> > conv_out_1_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<5> > ap_var_for_const2;


    // Module declarations
    conv_1(sc_module_name name);
    SC_HAS_PROCESS(conv_1);

    ~conv_1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    conv_1_conv_weighbkb* conv_weights_0_0_U;
    conv_1_conv_weighcud* conv_weights_0_1_U;
    conv_1_conv_weighdEe* conv_weights_1_0_U;
    conv_1_conv_weigheOg* conv_weights_1_1_U;
    conv_1_conv_weighfYi* conv_weights_2_0_U;
    conv_1_conv_weighg8j* conv_weights_2_1_U;
    conv_1_fadd_32ns_hbi<1,2,32,32,32>* conv_1_fadd_32ns_hbi_U1;
    conv_1_fmul_32ns_ibs<1,2,32,32,32>* conv_1_fmul_32ns_ibs_U2;
    conv_1_fcmp_32ns_jbC<1,1,32,32,1>* conv_1_fcmp_32ns_jbC_U3;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > conv_weights_0_0_address0;
    sc_signal< sc_logic > conv_weights_0_0_ce0;
    sc_signal< sc_lv<32> > conv_weights_0_0_q0;
    sc_signal< sc_lv<4> > conv_weights_0_1_address0;
    sc_signal< sc_logic > conv_weights_0_1_ce0;
    sc_signal< sc_lv<32> > conv_weights_0_1_q0;
    sc_signal< sc_lv<4> > conv_weights_1_0_address0;
    sc_signal< sc_logic > conv_weights_1_0_ce0;
    sc_signal< sc_lv<32> > conv_weights_1_0_q0;
    sc_signal< sc_lv<4> > conv_weights_1_1_address0;
    sc_signal< sc_logic > conv_weights_1_1_ce0;
    sc_signal< sc_lv<32> > conv_weights_1_1_q0;
    sc_signal< sc_lv<4> > conv_weights_2_0_address0;
    sc_signal< sc_logic > conv_weights_2_0_ce0;
    sc_signal< sc_lv<32> > conv_weights_2_0_q0;
    sc_signal< sc_lv<4> > conv_weights_2_1_address0;
    sc_signal< sc_logic > conv_weights_2_1_ce0;
    sc_signal< sc_lv<32> > conv_weights_2_1_q0;
    sc_signal< sc_lv<2> > wr_0_reg_366;
    sc_signal< sc_lv<32> > w_sum_0_reg_377;
    sc_signal< sc_lv<32> > grp_fu_395_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state11_pp0_stage2_iter1;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<1> > icmp_ln18_reg_854;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state6_pp0_stage3_iter0;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< bool > ap_block_state7_pp0_stage4_iter0;
    sc_signal< bool > ap_block_pp0_stage4_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage5;
    sc_signal< bool > ap_block_state8_pp0_stage5_iter0;
    sc_signal< bool > ap_block_pp0_stage5_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state4_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state10_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<1> > icmp_ln18_reg_854_pp0_iter1_reg;
    sc_signal< sc_lv<32> > grp_fu_389_p2;
    sc_signal< sc_lv<1> > icmp_ln8_fu_417_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > add_ln8_fu_423_p2;
    sc_signal< sc_lv<4> > add_ln8_reg_801;
    sc_signal< sc_lv<1> > icmp_ln11_fu_435_p2;
    sc_signal< sc_lv<1> > icmp_ln11_reg_806;
    sc_signal< sc_lv<2> > select_ln34_1_fu_449_p3;
    sc_signal< sc_lv<2> > select_ln34_1_reg_811;
    sc_signal< sc_lv<2> > select_ln26_6_fu_515_p3;
    sc_signal< sc_lv<2> > select_ln26_6_reg_817;
    sc_signal< sc_lv<1> > select_ln26_7_fu_527_p3;
    sc_signal< sc_lv<1> > select_ln26_7_reg_824;
    sc_signal< sc_lv<2> > select_ln11_fu_535_p3;
    sc_signal< sc_lv<2> > select_ln11_reg_834;
    sc_signal< sc_lv<5> > zext_ln34_1_fu_543_p1;
    sc_signal< sc_lv<5> > zext_ln34_1_reg_839;
    sc_signal< sc_lv<3> > conv_out_0_addr_reg_844;
    sc_signal< sc_lv<3> > conv_out_1_addr_reg_849;
    sc_signal< sc_lv<1> > icmp_ln18_fu_563_p2;
    sc_signal< sc_lv<2> > wr_fu_569_p2;
    sc_signal< sc_lv<2> > wr_reg_858;
    sc_signal< sc_lv<32> > select_ln26_fu_651_p3;
    sc_signal< sc_lv<32> > conv_weights_0_1_loa_reg_943;
    sc_signal< sc_lv<32> > select_ln26_1_fu_659_p3;
    sc_signal< sc_lv<32> > select_ln26_1_reg_948;
    sc_signal< sc_lv<32> > conv_weights_1_0_loa_reg_953;
    sc_signal< sc_lv<32> > select_ln26_2_fu_666_p3;
    sc_signal< sc_lv<32> > select_ln26_2_reg_958;
    sc_signal< sc_lv<32> > conv_weights_1_1_loa_reg_963;
    sc_signal< sc_lv<32> > select_ln26_3_fu_673_p3;
    sc_signal< sc_lv<32> > select_ln26_3_reg_968;
    sc_signal< sc_lv<32> > conv_weights_2_0_loa_reg_973;
    sc_signal< sc_lv<32> > select_ln26_4_fu_680_p3;
    sc_signal< sc_lv<32> > select_ln26_4_reg_978;
    sc_signal< sc_lv<32> > conv_weights_2_1_loa_reg_983;
    sc_signal< sc_lv<32> > select_ln26_5_fu_687_p3;
    sc_signal< sc_lv<32> > select_ln26_5_reg_988;
    sc_signal< sc_lv<32> > merge_i_fu_718_p3;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<2> > f_fu_779_p2;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<4> > select_ln11_1_fu_790_p3;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< bool > ap_block_pp0_stage5_subdone;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< sc_lv<4> > indvar_flatten15_reg_310;
    sc_signal< sc_lv<2> > r_0_reg_321;
    sc_signal< sc_lv<4> > indvar_flatten_reg_332;
    sc_signal< sc_lv<2> > c_0_reg_344;
    sc_signal< sc_lv<2> > f_0_reg_355;
    sc_signal< sc_lv<2> > ap_phi_mux_wr_0_phi_fu_370_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<32> > ap_phi_mux_w_sum_0_phi_fu_381_p4;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<64> > sext_ln34_fu_557_p1;
    sc_signal< sc_lv<64> > sext_ln26_fu_602_p1;
    sc_signal< sc_lv<64> > zext_ln26_2_fu_625_p1;
    sc_signal< sc_lv<64> > tmp_7_fu_639_p3;
    sc_signal< sc_lv<32> > w_sum_1_fu_769_p3;
    sc_signal< sc_lv<32> > grp_fu_389_p0;
    sc_signal< sc_lv<32> > grp_fu_389_p1;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< bool > ap_block_pp0_stage4;
    sc_signal< bool > ap_block_pp0_stage5;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<32> > grp_fu_395_p0;
    sc_signal< sc_lv<32> > grp_fu_395_p1;
    sc_signal< sc_lv<2> > r_fu_429_p2;
    sc_signal< sc_lv<4> > tmp_1_fu_461_p3;
    sc_signal< sc_lv<4> > zext_ln34_fu_457_p1;
    sc_signal< sc_lv<1> > trunc_ln26_fu_481_p1;
    sc_signal< sc_lv<1> > xor_ln34_fu_475_p2;
    sc_signal< sc_lv<1> > icmp_ln14_fu_491_p2;
    sc_signal< sc_lv<2> > select_ln34_fu_441_p3;
    sc_signal< sc_lv<1> > and_ln34_1_fu_497_p2;
    sc_signal< sc_lv<1> > or_ln26_fu_509_p2;
    sc_signal< sc_lv<2> > c_fu_503_p2;
    sc_signal< sc_lv<1> > trunc_ln26_1_fu_523_p1;
    sc_signal< sc_lv<1> > and_ln34_fu_485_p2;
    sc_signal< sc_lv<4> > zext_ln34_2_fu_547_p1;
    sc_signal< sc_lv<4> > sub_ln34_fu_469_p2;
    sc_signal< sc_lv<4> > add_ln34_fu_551_p2;
    sc_signal< sc_lv<4> > tmp_2_fu_579_p3;
    sc_signal< sc_lv<5> > zext_ln26_1_fu_587_p1;
    sc_signal< sc_lv<5> > zext_ln26_fu_575_p1;
    sc_signal< sc_lv<5> > sub_ln26_fu_591_p2;
    sc_signal< sc_lv<5> > add_ln26_1_fu_597_p2;
    sc_signal< sc_lv<2> > add_ln26_fu_612_p2;
    sc_signal< sc_lv<3> > tmp_6_fu_617_p3;
    sc_signal< sc_lv<3> > or_ln26_1_fu_633_p2;
    sc_signal< sc_lv<1> > icmp_ln7_1_fu_699_p2;
    sc_signal< sc_lv<1> > icmp_ln7_fu_694_p2;
    sc_signal< sc_lv<1> > empty_5_fu_712_p2;
    sc_signal< sc_lv<32> > select_ln7_i_fu_704_p3;
    sc_signal< sc_lv<32> > bitcast_ln33_fu_727_p1;
    sc_signal< sc_lv<8> > tmp_fu_731_p4;
    sc_signal< sc_lv<23> > trunc_ln33_fu_741_p1;
    sc_signal< sc_lv<1> > icmp_ln33_1_fu_751_p2;
    sc_signal< sc_lv<1> > icmp_ln33_fu_745_p2;
    sc_signal< sc_lv<1> > or_ln33_fu_757_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_401_p2;
    sc_signal< sc_lv<1> > and_ln33_fu_763_p2;
    sc_signal< sc_lv<4> > add_ln11_1_fu_784_p2;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< bool > ap_block_pp0_stage4_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_pp0_stage0;
    static const sc_lv<10> ap_ST_fsm_pp0_stage1;
    static const sc_lv<10> ap_ST_fsm_pp0_stage2;
    static const sc_lv<10> ap_ST_fsm_pp0_stage3;
    static const sc_lv<10> ap_ST_fsm_pp0_stage4;
    static const sc_lv<10> ap_ST_fsm_pp0_stage5;
    static const sc_lv<10> ap_ST_fsm_state12;
    static const sc_lv<10> ap_ST_fsm_state13;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<61> ap_const_lv61_0;
    static const sc_lv<32> ap_const_lv32_40000000;
    static const sc_lv<32> ap_const_lv32_3F800000;
    static const sc_lv<32> ap_const_lv32_3FC00000;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_add_ln11_1_fu_784_p2();
    void thread_add_ln26_1_fu_597_p2();
    void thread_add_ln26_fu_612_p2();
    void thread_add_ln34_fu_551_p2();
    void thread_add_ln8_fu_423_p2();
    void thread_and_ln33_fu_763_p2();
    void thread_and_ln34_1_fu_497_p2();
    void thread_and_ln34_fu_485_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_pp0_stage5();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state2();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_pp0_stage4();
    void thread_ap_block_pp0_stage4_11001();
    void thread_ap_block_pp0_stage4_subdone();
    void thread_ap_block_pp0_stage5();
    void thread_ap_block_pp0_stage5_11001();
    void thread_ap_block_pp0_stage5_subdone();
    void thread_ap_block_state10_pp0_stage1_iter1();
    void thread_ap_block_state11_pp0_stage2_iter1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage1_iter0();
    void thread_ap_block_state5_pp0_stage2_iter0();
    void thread_ap_block_state6_pp0_stage3_iter0();
    void thread_ap_block_state7_pp0_stage4_iter0();
    void thread_ap_block_state8_pp0_stage5_iter0();
    void thread_ap_block_state9_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_w_sum_0_phi_fu_381_p4();
    void thread_ap_phi_mux_wr_0_phi_fu_370_p4();
    void thread_ap_ready();
    void thread_bitcast_ln33_fu_727_p1();
    void thread_c_fu_503_p2();
    void thread_conv_out_0_address0();
    void thread_conv_out_0_ce0();
    void thread_conv_out_0_d0();
    void thread_conv_out_0_we0();
    void thread_conv_out_1_address0();
    void thread_conv_out_1_ce0();
    void thread_conv_out_1_d0();
    void thread_conv_out_1_we0();
    void thread_conv_weights_0_0_address0();
    void thread_conv_weights_0_0_ce0();
    void thread_conv_weights_0_1_address0();
    void thread_conv_weights_0_1_ce0();
    void thread_conv_weights_1_0_address0();
    void thread_conv_weights_1_0_ce0();
    void thread_conv_weights_1_1_address0();
    void thread_conv_weights_1_1_ce0();
    void thread_conv_weights_2_0_address0();
    void thread_conv_weights_2_0_ce0();
    void thread_conv_weights_2_1_address0();
    void thread_conv_weights_2_1_ce0();
    void thread_empty_5_fu_712_p2();
    void thread_f_fu_779_p2();
    void thread_grp_fu_389_p0();
    void thread_grp_fu_389_p1();
    void thread_grp_fu_395_p0();
    void thread_grp_fu_395_p1();
    void thread_icmp_ln11_fu_435_p2();
    void thread_icmp_ln14_fu_491_p2();
    void thread_icmp_ln18_fu_563_p2();
    void thread_icmp_ln33_1_fu_751_p2();
    void thread_icmp_ln33_fu_745_p2();
    void thread_icmp_ln7_1_fu_699_p2();
    void thread_icmp_ln7_fu_694_p2();
    void thread_icmp_ln8_fu_417_p2();
    void thread_input_0_address0();
    void thread_input_0_address1();
    void thread_input_0_ce0();
    void thread_input_0_ce1();
    void thread_input_1_address0();
    void thread_input_1_address1();
    void thread_input_1_ce0();
    void thread_input_1_ce1();
    void thread_input_2_address0();
    void thread_input_2_address1();
    void thread_input_2_ce0();
    void thread_input_2_ce1();
    void thread_input_3_address0();
    void thread_input_3_address1();
    void thread_input_3_ce0();
    void thread_input_3_ce1();
    void thread_merge_i_fu_718_p3();
    void thread_or_ln26_1_fu_633_p2();
    void thread_or_ln26_fu_509_p2();
    void thread_or_ln33_fu_757_p2();
    void thread_r_fu_429_p2();
    void thread_select_ln11_1_fu_790_p3();
    void thread_select_ln11_fu_535_p3();
    void thread_select_ln26_1_fu_659_p3();
    void thread_select_ln26_2_fu_666_p3();
    void thread_select_ln26_3_fu_673_p3();
    void thread_select_ln26_4_fu_680_p3();
    void thread_select_ln26_5_fu_687_p3();
    void thread_select_ln26_6_fu_515_p3();
    void thread_select_ln26_7_fu_527_p3();
    void thread_select_ln26_fu_651_p3();
    void thread_select_ln34_1_fu_449_p3();
    void thread_select_ln34_fu_441_p3();
    void thread_select_ln7_i_fu_704_p3();
    void thread_sext_ln26_fu_602_p1();
    void thread_sext_ln34_fu_557_p1();
    void thread_sub_ln26_fu_591_p2();
    void thread_sub_ln34_fu_469_p2();
    void thread_tmp_1_fu_461_p3();
    void thread_tmp_2_fu_579_p3();
    void thread_tmp_6_fu_617_p3();
    void thread_tmp_7_fu_639_p3();
    void thread_tmp_fu_731_p4();
    void thread_trunc_ln26_1_fu_523_p1();
    void thread_trunc_ln26_fu_481_p1();
    void thread_trunc_ln33_fu_741_p1();
    void thread_w_sum_1_fu_769_p3();
    void thread_wr_fu_569_p2();
    void thread_xor_ln34_fu_475_p2();
    void thread_zext_ln26_1_fu_587_p1();
    void thread_zext_ln26_2_fu_625_p1();
    void thread_zext_ln26_fu_575_p1();
    void thread_zext_ln34_1_fu_543_p1();
    void thread_zext_ln34_2_fu_547_p1();
    void thread_zext_ln34_fu_457_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
