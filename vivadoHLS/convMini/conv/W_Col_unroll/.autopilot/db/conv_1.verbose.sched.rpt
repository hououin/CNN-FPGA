

================================================================
== Vivado HLS Report for 'conv_1'
================================================================
* Date:           Sat Aug 12 14:57:34 2023

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        conv
* Solution:       W_Col_unroll
* Product family: virtex7
* Target device:  xc7vx485t-ffg1157-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+-----------+------------+
    |  Clock |  Target  | Estimated | Uncertainty|
    +--------+----------+-----------+------------+
    |ap_clk  | 40.00 ns | 33.795 ns |   5.00 ns  |
    +--------+----------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     1057|     1057| 42.280 us | 42.280 us |  1057|  1057|   none  |
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Row_Loop          |     1056|     1056|       528|          -|          -|     2|    no    |
        | + Col_Loop         |      526|      526|       263|          -|          -|     2|    no    |
        |  ++ Filter1_Loop   |      261|      261|        87|          -|          -|     3|    no    |
        |   +++ W_Row_Loop   |       84|       84|        28|          -|          -|     3|    no    |
        |    ++++ Chan_Loop  |        8|        8|         4|          -|          -|     2|    no    |
        |    ++++ Chan_Loop  |        8|        8|         4|          -|          -|     2|    no    |
        |    ++++ Chan_Loop  |        8|        8|         4|          -|          -|     2|    no    |
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 18
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 3 
5 --> 18 6 
6 --> 7 10 
7 --> 8 
8 --> 9 
9 --> 6 
10 --> 11 14 
11 --> 12 
12 --> 13 
13 --> 10 
14 --> 15 5 
15 --> 16 
16 --> 17 
17 --> 14 
18 --> 4 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.18>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([32 x float]* %input_r) nounwind, !map !7"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([12 x float]* %conv_out) nounwind, !map !14"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([7 x i8]* @conv_1_str) nounwind"   --->   Operation 21 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (1.18ns)   --->   "br label %1" [conv.cpp:8]   --->   Operation 22 'br' <Predicate = true> <Delay = 1.18>

State 2 <SV = 1> <Delay = 1.18>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%r_0 = phi i2 [ 0, %0 ], [ %r, %Row_Loop_end ]"   --->   Operation 23 'phi' 'r_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.61ns)   --->   "%icmp_ln8 = icmp eq i2 %r_0, -2" [conv.cpp:8]   --->   Operation 24 'icmp' 'icmp_ln8' <Predicate = true> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 25 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (1.00ns)   --->   "%r = add i2 %r_0, 1" [conv.cpp:8]   --->   Operation 26 'add' 'r' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "br i1 %icmp_ln8, label %11, label %Row_Loop_begin" [conv.cpp:8]   --->   Operation 27 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str) nounwind" [conv.cpp:9]   --->   Operation 28 'specloopname' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str) nounwind" [conv.cpp:9]   --->   Operation 29 'specregionbegin' 'tmp_1' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%tmp_8 = call i3 @_ssdm_op_BitConcatenate.i3.i2.i1(i2 %r_0, i1 false)" [conv.cpp:34]   --->   Operation 30 'bitconcatenate' 'tmp_8' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln11 = zext i3 %tmp_8 to i4" [conv.cpp:11]   --->   Operation 31 'zext' 'zext_ln11' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (1.18ns)   --->   "br label %2" [conv.cpp:11]   --->   Operation 32 'br' <Predicate = (!icmp_ln8)> <Delay = 1.18>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "ret void" [conv.cpp:41]   --->   Operation 33 'ret' <Predicate = (icmp_ln8)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.55>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%c_0 = phi i2 [ 0, %Row_Loop_begin ], [ %c, %Col_Loop_end ]"   --->   Operation 34 'phi' 'c_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.61ns)   --->   "%icmp_ln11 = icmp eq i2 %c_0, -2" [conv.cpp:11]   --->   Operation 35 'icmp' 'icmp_ln11' <Predicate = true> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 36 'speclooptripcount' 'empty_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (1.00ns)   --->   "%c = add i2 %c_0, 1" [conv.cpp:26]   --->   Operation 37 'add' 'c' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "br i1 %icmp_ln11, label %Row_Loop_end, label %Col_Loop_begin" [conv.cpp:11]   --->   Operation 38 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str1) nounwind" [conv.cpp:12]   --->   Operation 39 'specloopname' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str1) nounwind" [conv.cpp:12]   --->   Operation 40 'specregionbegin' 'tmp_2' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln34 = zext i2 %c_0 to i4" [conv.cpp:34]   --->   Operation 41 'zext' 'zext_ln34' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (1.18ns)   --->   "%add_ln34 = add i4 %zext_ln34, %zext_ln11" [conv.cpp:34]   --->   Operation 42 'add' 'add_ln34' <Predicate = (!icmp_ln11)> <Delay = 1.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln34_1 = zext i4 %add_ln34 to i5" [conv.cpp:34]   --->   Operation 43 'zext' 'zext_ln34_1' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%trunc_ln34 = trunc i4 %add_ln34 to i3" [conv.cpp:34]   --->   Operation 44 'trunc' 'trunc_ln34' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%p_shl_cast = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %trunc_ln34, i2 0)" [conv.cpp:34]   --->   Operation 45 'bitconcatenate' 'p_shl_cast' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (1.36ns)   --->   "%sub_ln34 = sub i5 %p_shl_cast, %zext_ln34_1" [conv.cpp:34]   --->   Operation 46 'sub' 'sub_ln34' <Predicate = (!icmp_ln11)> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 47 [1/1] (0.61ns)   --->   "%xor_ln26 = xor i2 %c_0, -2" [conv.cpp:26]   --->   Operation 47 'xor' 'xor_ln26' <Predicate = (!icmp_ln11)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 48 [1/1] (1.18ns)   --->   "br label %3" [conv.cpp:14]   --->   Operation 48 'br' <Predicate = (!icmp_ln11)> <Delay = 1.18>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%empty_16 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str, i32 %tmp_1) nounwind" [conv.cpp:40]   --->   Operation 49 'specregionend' 'empty_16' <Predicate = (icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "br label %1" [conv.cpp:8]   --->   Operation 50 'br' <Predicate = (icmp_ln11)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 1.36>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%f_0 = phi i2 [ 0, %Col_Loop_begin ], [ %f, %Filter1_Loop_end ]"   --->   Operation 51 'phi' 'f_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (0.61ns)   --->   "%icmp_ln14 = icmp eq i2 %f_0, -1" [conv.cpp:14]   --->   Operation 52 'icmp' 'icmp_ln14' <Predicate = true> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind"   --->   Operation 53 'speclooptripcount' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (1.00ns)   --->   "%f = add i2 %f_0, 1" [conv.cpp:14]   --->   Operation 54 'add' 'f' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "br i1 %icmp_ln14, label %Col_Loop_end, label %Filter1_Loop_begin" [conv.cpp:14]   --->   Operation 55 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str2) nounwind" [conv.cpp:15]   --->   Operation 56 'specloopname' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str2) nounwind" [conv.cpp:15]   --->   Operation 57 'specregionbegin' 'tmp_3' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln34_2 = zext i2 %f_0 to i6" [conv.cpp:34]   --->   Operation 58 'zext' 'zext_ln34_2' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln34_3 = zext i2 %f_0 to i5" [conv.cpp:34]   --->   Operation 59 'zext' 'zext_ln34_3' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (1.36ns)   --->   "%add_ln34_1 = add i5 %sub_ln34, %zext_ln34_3" [conv.cpp:34]   --->   Operation 60 'add' 'add_ln34_1' <Predicate = (!icmp_ln14)> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln34_4 = zext i5 %add_ln34_1 to i64" [conv.cpp:34]   --->   Operation 61 'zext' 'zext_ln34_4' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%conv_out_addr = getelementptr [12 x float]* %conv_out, i64 0, i64 %zext_ln34_4" [conv.cpp:34]   --->   Operation 62 'getelementptr' 'conv_out_addr' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_4 : Operation 63 [1/1] (1.18ns)   --->   "br label %4" [conv.cpp:18]   --->   Operation 63 'br' <Predicate = (!icmp_ln14)> <Delay = 1.18>
ST_4 : Operation 64 [1/1] (0.00ns)   --->   "%empty_15 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str1, i32 %tmp_2) nounwind" [conv.cpp:39]   --->   Operation 64 'specregionend' 'empty_15' <Predicate = (icmp_ln14)> <Delay = 0.00>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "br label %2" [conv.cpp:11]   --->   Operation 65 'br' <Predicate = (icmp_ln14)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 17.2>
ST_5 : Operation 66 [1/1] (0.00ns)   --->   "%wr_0 = phi i2 [ 0, %Filter1_Loop_begin ], [ %wr, %W_Col_Loop_end ]"   --->   Operation 66 'phi' 'wr_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 67 [1/1] (0.00ns)   --->   "%w_sum_0 = phi float [ 0.000000e+00, %Filter1_Loop_begin ], [ %w_sum_2_2, %W_Col_Loop_end ]" [conv.cpp:26]   --->   Operation 67 'phi' 'w_sum_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 68 [1/1] (0.61ns)   --->   "%icmp_ln18 = icmp eq i2 %wr_0, -1" [conv.cpp:18]   --->   Operation 68 'icmp' 'icmp_ln18' <Predicate = true> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 69 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind"   --->   Operation 69 'speclooptripcount' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 70 [1/1] (1.00ns)   --->   "%wr = add i2 %wr_0, 1" [conv.cpp:18]   --->   Operation 70 'add' 'wr' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 71 [1/1] (0.00ns)   --->   "br i1 %icmp_ln18, label %Filter1_Loop_end, label %W_Col_Loop_begin" [conv.cpp:18]   --->   Operation 71 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 72 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str3) nounwind" [conv.cpp:19]   --->   Operation 72 'specloopname' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_5 : Operation 73 [1/1] (0.00ns)   --->   "%tmp_9 = call i3 @_ssdm_op_BitConcatenate.i3.i2.i1(i2 %wr_0, i1 false)" [conv.cpp:26]   --->   Operation 73 'bitconcatenate' 'tmp_9' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_5 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln26 = zext i3 %tmp_9 to i4" [conv.cpp:26]   --->   Operation 74 'zext' 'zext_ln26' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_5 : Operation 75 [1/1] (1.00ns)   --->   "%add_ln26 = add i2 %wr_0, %r_0" [conv.cpp:26]   --->   Operation 75 'add' 'add_ln26' <Predicate = (!icmp_ln18)> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 76 [1/1] (0.00ns)   --->   "%tmp_10 = call i5 @_ssdm_op_BitConcatenate.i5.i2.i2.i1(i2 %add_ln26, i2 %c_0, i1 false)" [conv.cpp:26]   --->   Operation 76 'bitconcatenate' 'tmp_10' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_5 : Operation 77 [1/1] (0.00ns)   --->   "%zext_ln26_1 = zext i5 %tmp_10 to i6" [conv.cpp:26]   --->   Operation 77 'zext' 'zext_ln26_1' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_5 : Operation 78 [1/1] (0.00ns)   --->   "%tmp_11 = call i5 @_ssdm_op_BitConcatenate.i5.i2.i2.i1(i2 %add_ln26, i2 %c, i1 false)" [conv.cpp:26]   --->   Operation 78 'bitconcatenate' 'tmp_11' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_5 : Operation 79 [1/1] (0.00ns)   --->   "%zext_ln26_2 = zext i5 %tmp_11 to i6" [conv.cpp:26]   --->   Operation 79 'zext' 'zext_ln26_2' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_5 : Operation 80 [1/1] (0.00ns)   --->   "%tmp_12 = call i5 @_ssdm_op_BitConcatenate.i5.i2.i2.i1(i2 %add_ln26, i2 %xor_ln26, i1 false)" [conv.cpp:26]   --->   Operation 80 'bitconcatenate' 'tmp_12' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_5 : Operation 81 [1/1] (0.00ns)   --->   "%zext_ln22 = zext i5 %tmp_12 to i6" [conv.cpp:22]   --->   Operation 81 'zext' 'zext_ln22' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_5 : Operation 82 [1/1] (0.00ns)   --->   "%tmp_5 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str4) nounwind" [conv.cpp:22]   --->   Operation 82 'specregionbegin' 'tmp_5' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_5 : Operation 83 [1/1] (1.18ns)   --->   "br label %5" [conv.cpp:24]   --->   Operation 83 'br' <Predicate = (!icmp_ln18)> <Delay = 1.18>
ST_5 : Operation 84 [1/1] (0.61ns)   --->   "%icmp_ln7 = icmp eq i2 %f_0, 0" [aesl_mux_load.3floatP.i2:7->conv.cpp:30]   --->   Operation 84 'icmp' 'icmp_ln7' <Predicate = (icmp_ln18)> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 85 [1/1] (0.61ns)   --->   "%icmp_ln7_1 = icmp eq i2 %f_0, 1" [aesl_mux_load.3floatP.i2:7->conv.cpp:30]   --->   Operation 85 'icmp' 'icmp_ln7_1' <Predicate = (icmp_ln18)> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node merge_i)   --->   "%select_ln7_i = select i1 %icmp_ln7_1, float 2.000000e+00, float 1.000000e+00" [aesl_mux_load.3floatP.i2:7->conv.cpp:30]   --->   Operation 86 'select' 'select_ln7_i' <Predicate = (icmp_ln18)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node merge_i)   --->   "%empty_13 = or i1 %icmp_ln7_1, %icmp_ln7" [aesl_mux_load.3floatP.i2:7->conv.cpp:30]   --->   Operation 87 'or' 'empty_13' <Predicate = (icmp_ln18)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 88 [1/1] (0.61ns) (out node of the LUT)   --->   "%merge_i = select i1 %empty_13, float %select_ln7_i, float 1.500000e+00" [aesl_mux_load.3floatP.i2:7->conv.cpp:30]   --->   Operation 88 'select' 'merge_i' <Predicate = (icmp_ln18)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 89 [2/2] (15.9ns)   --->   "%w_sum = fadd float %w_sum_0, %merge_i" [conv.cpp:30]   --->   Operation 89 'fadd' 'w_sum' <Predicate = (icmp_ln18)> <Delay = 15.9> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 1> <II = 1> <Delay = 15.9> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 6.12>
ST_6 : Operation 90 [1/1] (0.00ns)   --->   "%w_sum_2_0 = phi float [ %w_sum_0, %W_Col_Loop_begin ], [ %w_sum_3, %6 ]" [conv.cpp:26]   --->   Operation 90 'phi' 'w_sum_2_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 91 [1/1] (0.00ns)   --->   "%ch_0_0 = phi i2 [ 0, %W_Col_Loop_begin ], [ %add_ln24, %6 ]" [conv.cpp:24]   --->   Operation 91 'phi' 'ch_0_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 92 [1/1] (0.61ns)   --->   "%icmp_ln24 = icmp eq i2 %ch_0_0, -2" [conv.cpp:24]   --->   Operation 92 'icmp' 'icmp_ln24' <Predicate = true> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 93 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 93 'speclooptripcount' 'empty_8' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 94 [1/1] (1.00ns)   --->   "%add_ln24 = add i2 %ch_0_0, 1" [conv.cpp:24]   --->   Operation 94 'add' 'add_ln24' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 95 [1/1] (0.00ns)   --->   "br i1 %icmp_ln24, label %W_Col_Loop, label %6" [conv.cpp:24]   --->   Operation 95 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 96 [1/1] (0.00ns)   --->   "%zext_ln26_3 = zext i2 %ch_0_0 to i6" [conv.cpp:26]   --->   Operation 96 'zext' 'zext_ln26_3' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_6 : Operation 97 [1/1] (0.00ns)   --->   "%zext_ln26_4 = zext i2 %ch_0_0 to i4" [conv.cpp:26]   --->   Operation 97 'zext' 'zext_ln26_4' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_6 : Operation 98 [1/1] (1.18ns)   --->   "%add_ln26_2 = add i4 %zext_ln26, %zext_ln26_4" [conv.cpp:26]   --->   Operation 98 'add' 'add_ln26_2' <Predicate = (!icmp_ln24)> <Delay = 1.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 99 [1/1] (0.00ns)   --->   "%zext_ln26_5 = zext i4 %add_ln26_2 to i6" [conv.cpp:26]   --->   Operation 99 'zext' 'zext_ln26_5' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_6 : Operation 100 [1/1] (0.00ns)   --->   "%p_shl1_cast = call i6 @_ssdm_op_BitConcatenate.i6.i4.i2(i4 %add_ln26_2, i2 0)" [conv.cpp:26]   --->   Operation 100 'bitconcatenate' 'p_shl1_cast' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_6 : Operation 101 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln26 = sub i6 %p_shl1_cast, %zext_ln26_5" [conv.cpp:26]   --->   Operation 101 'sub' 'sub_ln26' <Predicate = (!icmp_ln24)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.13> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 102 [1/1] (2.27ns) (root node of TernaryAdder)   --->   "%add_ln26_3 = add i6 %sub_ln26, %zext_ln34_2" [conv.cpp:26]   --->   Operation 102 'add' 'add_ln26_3' <Predicate = (!icmp_ln24)> <Delay = 2.27> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.13> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 103 [1/1] (0.00ns)   --->   "%zext_ln26_6 = zext i6 %add_ln26_3 to i64" [conv.cpp:26]   --->   Operation 103 'zext' 'zext_ln26_6' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_6 : Operation 104 [1/1] (0.00ns)   --->   "%conv_weights_0_addr = getelementptr [18 x float]* @conv_weights_0, i64 0, i64 %zext_ln26_6" [conv.cpp:26]   --->   Operation 104 'getelementptr' 'conv_weights_0_addr' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_6 : Operation 105 [1/1] (1.36ns)   --->   "%add_ln26_4 = add i6 %zext_ln26_1, %zext_ln26_3" [conv.cpp:26]   --->   Operation 105 'add' 'add_ln26_4' <Predicate = (!icmp_ln24)> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 106 [1/1] (0.00ns)   --->   "%zext_ln26_7 = zext i6 %add_ln26_4 to i64" [conv.cpp:26]   --->   Operation 106 'zext' 'zext_ln26_7' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_6 : Operation 107 [1/1] (0.00ns)   --->   "%input_addr = getelementptr [32 x float]* %input_r, i64 0, i64 %zext_ln26_7" [conv.cpp:26]   --->   Operation 107 'getelementptr' 'input_addr' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_6 : Operation 108 [2/2] (2.66ns)   --->   "%conv_weights_0_load = load float* %conv_weights_0_addr, align 4" [conv.cpp:26]   --->   Operation 108 'load' 'conv_weights_0_load' <Predicate = (!icmp_ln24)> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 18> <ROM>
ST_6 : Operation 109 [2/2] (2.66ns)   --->   "%input_load = load float* %input_addr, align 4" [conv.cpp:26]   --->   Operation 109 'load' 'input_load' <Predicate = (!icmp_ln24)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 12> <RAM>
ST_6 : Operation 110 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str4, i32 %tmp_5) nounwind" [conv.cpp:28]   --->   Operation 110 'specregionend' 'empty_7' <Predicate = (icmp_ln24)> <Delay = 0.00>
ST_6 : Operation 111 [1/1] (0.00ns)   --->   "%tmp_6 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str4) nounwind" [conv.cpp:22]   --->   Operation 111 'specregionbegin' 'tmp_6' <Predicate = (icmp_ln24)> <Delay = 0.00>
ST_6 : Operation 112 [1/1] (1.18ns)   --->   "br label %7" [conv.cpp:24]   --->   Operation 112 'br' <Predicate = (icmp_ln24)> <Delay = 1.18>

State 7 <SV = 6> <Delay = 12.7>
ST_7 : Operation 113 [1/2] (2.66ns)   --->   "%conv_weights_0_load = load float* %conv_weights_0_addr, align 4" [conv.cpp:26]   --->   Operation 113 'load' 'conv_weights_0_load' <Predicate = true> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 18> <ROM>
ST_7 : Operation 114 [1/2] (2.66ns)   --->   "%input_load = load float* %input_addr, align 4" [conv.cpp:26]   --->   Operation 114 'load' 'input_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 12> <RAM>
ST_7 : Operation 115 [2/2] (10.1ns)   --->   "%tmp_s = fmul float %conv_weights_0_load, %input_load" [conv.cpp:26]   --->   Operation 115 'fmul' 'tmp_s' <Predicate = true> <Delay = 10.1> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 1> <II = 1> <Delay = 10.1> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 26.1>
ST_8 : Operation 116 [1/2] (10.1ns)   --->   "%tmp_s = fmul float %conv_weights_0_load, %input_load" [conv.cpp:26]   --->   Operation 116 'fmul' 'tmp_s' <Predicate = true> <Delay = 10.1> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 1> <II = 1> <Delay = 10.1> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 117 [2/2] (15.9ns)   --->   "%w_sum_3 = fadd float %w_sum_2_0, %tmp_s" [conv.cpp:26]   --->   Operation 117 'fadd' 'w_sum_3' <Predicate = true> <Delay = 15.9> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 1> <II = 1> <Delay = 15.9> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 15.9>
ST_9 : Operation 118 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str6) nounwind" [conv.cpp:25]   --->   Operation 118 'specloopname' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 119 [1/2] (15.9ns)   --->   "%w_sum_3 = fadd float %w_sum_2_0, %tmp_s" [conv.cpp:26]   --->   Operation 119 'fadd' 'w_sum_3' <Predicate = true> <Delay = 15.9> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 1> <II = 1> <Delay = 15.9> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 120 [1/1] (0.00ns)   --->   "br label %5" [conv.cpp:24]   --->   Operation 120 'br' <Predicate = true> <Delay = 0.00>

State 10 <SV = 6> <Delay = 6.12>
ST_10 : Operation 121 [1/1] (0.00ns)   --->   "%w_sum_2_1 = phi float [ %w_sum_2_0, %W_Col_Loop ], [ %w_sum_3_1, %8 ]" [conv.cpp:26]   --->   Operation 121 'phi' 'w_sum_2_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 122 [1/1] (0.00ns)   --->   "%ch_0_1 = phi i2 [ 0, %W_Col_Loop ], [ %add_ln24_1, %8 ]" [conv.cpp:24]   --->   Operation 122 'phi' 'ch_0_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 123 [1/1] (0.61ns)   --->   "%icmp_ln24_1 = icmp eq i2 %ch_0_1, -2" [conv.cpp:24]   --->   Operation 123 'icmp' 'icmp_ln24_1' <Predicate = true> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 124 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 124 'speclooptripcount' 'empty_10' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 125 [1/1] (1.00ns)   --->   "%add_ln24_1 = add i2 %ch_0_1, 1" [conv.cpp:24]   --->   Operation 125 'add' 'add_ln24_1' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 126 [1/1] (0.00ns)   --->   "br i1 %icmp_ln24_1, label %W_Col_Loop1, label %8" [conv.cpp:24]   --->   Operation 126 'br' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 127 [1/1] (0.00ns)   --->   "%zext_ln26_8 = zext i2 %ch_0_1 to i6" [conv.cpp:26]   --->   Operation 127 'zext' 'zext_ln26_8' <Predicate = (!icmp_ln24_1)> <Delay = 0.00>
ST_10 : Operation 128 [1/1] (0.00ns)   --->   "%zext_ln26_9 = zext i2 %ch_0_1 to i4" [conv.cpp:26]   --->   Operation 128 'zext' 'zext_ln26_9' <Predicate = (!icmp_ln24_1)> <Delay = 0.00>
ST_10 : Operation 129 [1/1] (1.18ns)   --->   "%add_ln26_5 = add i4 %zext_ln26, %zext_ln26_9" [conv.cpp:26]   --->   Operation 129 'add' 'add_ln26_5' <Predicate = (!icmp_ln24_1)> <Delay = 1.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 130 [1/1] (0.00ns)   --->   "%zext_ln26_10 = zext i4 %add_ln26_5 to i6" [conv.cpp:26]   --->   Operation 130 'zext' 'zext_ln26_10' <Predicate = (!icmp_ln24_1)> <Delay = 0.00>
ST_10 : Operation 131 [1/1] (0.00ns)   --->   "%p_shl2_cast = call i6 @_ssdm_op_BitConcatenate.i6.i4.i2(i4 %add_ln26_5, i2 0)" [conv.cpp:26]   --->   Operation 131 'bitconcatenate' 'p_shl2_cast' <Predicate = (!icmp_ln24_1)> <Delay = 0.00>
ST_10 : Operation 132 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln26_1 = sub i6 %p_shl2_cast, %zext_ln26_10" [conv.cpp:26]   --->   Operation 132 'sub' 'sub_ln26_1' <Predicate = (!icmp_ln24_1)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.13> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 133 [1/1] (2.27ns) (root node of TernaryAdder)   --->   "%add_ln26_6 = add i6 %sub_ln26_1, %zext_ln34_2" [conv.cpp:26]   --->   Operation 133 'add' 'add_ln26_6' <Predicate = (!icmp_ln24_1)> <Delay = 2.27> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.13> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 134 [1/1] (0.00ns)   --->   "%zext_ln26_11 = zext i6 %add_ln26_6 to i64" [conv.cpp:26]   --->   Operation 134 'zext' 'zext_ln26_11' <Predicate = (!icmp_ln24_1)> <Delay = 0.00>
ST_10 : Operation 135 [1/1] (0.00ns)   --->   "%conv_weights_1_addr = getelementptr [18 x float]* @conv_weights_1, i64 0, i64 %zext_ln26_11" [conv.cpp:26]   --->   Operation 135 'getelementptr' 'conv_weights_1_addr' <Predicate = (!icmp_ln24_1)> <Delay = 0.00>
ST_10 : Operation 136 [1/1] (1.36ns)   --->   "%add_ln26_7 = add i6 %zext_ln26_2, %zext_ln26_8" [conv.cpp:26]   --->   Operation 136 'add' 'add_ln26_7' <Predicate = (!icmp_ln24_1)> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 137 [1/1] (0.00ns)   --->   "%zext_ln26_12 = zext i6 %add_ln26_7 to i64" [conv.cpp:26]   --->   Operation 137 'zext' 'zext_ln26_12' <Predicate = (!icmp_ln24_1)> <Delay = 0.00>
ST_10 : Operation 138 [1/1] (0.00ns)   --->   "%input_addr_1 = getelementptr [32 x float]* %input_r, i64 0, i64 %zext_ln26_12" [conv.cpp:26]   --->   Operation 138 'getelementptr' 'input_addr_1' <Predicate = (!icmp_ln24_1)> <Delay = 0.00>
ST_10 : Operation 139 [2/2] (2.66ns)   --->   "%conv_weights_1_load = load float* %conv_weights_1_addr, align 4" [conv.cpp:26]   --->   Operation 139 'load' 'conv_weights_1_load' <Predicate = (!icmp_ln24_1)> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 18> <ROM>
ST_10 : Operation 140 [2/2] (2.66ns)   --->   "%input_load_1 = load float* %input_addr_1, align 4" [conv.cpp:26]   --->   Operation 140 'load' 'input_load_1' <Predicate = (!icmp_ln24_1)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 12> <RAM>
ST_10 : Operation 141 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str4, i32 %tmp_6) nounwind" [conv.cpp:28]   --->   Operation 141 'specregionend' 'empty_9' <Predicate = (icmp_ln24_1)> <Delay = 0.00>
ST_10 : Operation 142 [1/1] (0.00ns)   --->   "%tmp_7 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str4) nounwind" [conv.cpp:22]   --->   Operation 142 'specregionbegin' 'tmp_7' <Predicate = (icmp_ln24_1)> <Delay = 0.00>
ST_10 : Operation 143 [1/1] (1.18ns)   --->   "br label %9" [conv.cpp:24]   --->   Operation 143 'br' <Predicate = (icmp_ln24_1)> <Delay = 1.18>

State 11 <SV = 7> <Delay = 12.7>
ST_11 : Operation 144 [1/2] (2.66ns)   --->   "%conv_weights_1_load = load float* %conv_weights_1_addr, align 4" [conv.cpp:26]   --->   Operation 144 'load' 'conv_weights_1_load' <Predicate = true> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 18> <ROM>
ST_11 : Operation 145 [1/2] (2.66ns)   --->   "%input_load_1 = load float* %input_addr_1, align 4" [conv.cpp:26]   --->   Operation 145 'load' 'input_load_1' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 12> <RAM>
ST_11 : Operation 146 [2/2] (10.1ns)   --->   "%tmp_1_1 = fmul float %conv_weights_1_load, %input_load_1" [conv.cpp:26]   --->   Operation 146 'fmul' 'tmp_1_1' <Predicate = true> <Delay = 10.1> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 1> <II = 1> <Delay = 10.1> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 8> <Delay = 26.1>
ST_12 : Operation 147 [1/2] (10.1ns)   --->   "%tmp_1_1 = fmul float %conv_weights_1_load, %input_load_1" [conv.cpp:26]   --->   Operation 147 'fmul' 'tmp_1_1' <Predicate = true> <Delay = 10.1> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 1> <II = 1> <Delay = 10.1> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 148 [2/2] (15.9ns)   --->   "%w_sum_3_1 = fadd float %w_sum_2_1, %tmp_1_1" [conv.cpp:26]   --->   Operation 148 'fadd' 'w_sum_3_1' <Predicate = true> <Delay = 15.9> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 1> <II = 1> <Delay = 15.9> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 9> <Delay = 15.9>
ST_13 : Operation 149 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str6) nounwind" [conv.cpp:25]   --->   Operation 149 'specloopname' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 150 [1/2] (15.9ns)   --->   "%w_sum_3_1 = fadd float %w_sum_2_1, %tmp_1_1" [conv.cpp:26]   --->   Operation 150 'fadd' 'w_sum_3_1' <Predicate = true> <Delay = 15.9> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 1> <II = 1> <Delay = 15.9> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 151 [1/1] (0.00ns)   --->   "br label %7" [conv.cpp:24]   --->   Operation 151 'br' <Predicate = true> <Delay = 0.00>

State 14 <SV = 7> <Delay = 6.12>
ST_14 : Operation 152 [1/1] (0.00ns)   --->   "%w_sum_2_2 = phi float [ %w_sum_2_1, %W_Col_Loop1 ], [ %w_sum_3_2, %10 ]" [conv.cpp:26]   --->   Operation 152 'phi' 'w_sum_2_2' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 153 [1/1] (0.00ns)   --->   "%ch_0_2 = phi i2 [ 0, %W_Col_Loop1 ], [ %add_ln24_2, %10 ]" [conv.cpp:24]   --->   Operation 153 'phi' 'ch_0_2' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 154 [1/1] (0.61ns)   --->   "%icmp_ln24_2 = icmp eq i2 %ch_0_2, -2" [conv.cpp:24]   --->   Operation 154 'icmp' 'icmp_ln24_2' <Predicate = true> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 155 [1/1] (0.00ns)   --->   "%empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 155 'speclooptripcount' 'empty_12' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 156 [1/1] (1.00ns)   --->   "%add_ln24_2 = add i2 %ch_0_2, 1" [conv.cpp:24]   --->   Operation 156 'add' 'add_ln24_2' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 157 [1/1] (0.00ns)   --->   "br i1 %icmp_ln24_2, label %W_Col_Loop_end, label %10" [conv.cpp:24]   --->   Operation 157 'br' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 158 [1/1] (0.00ns)   --->   "%zext_ln26_13 = zext i2 %ch_0_2 to i6" [conv.cpp:26]   --->   Operation 158 'zext' 'zext_ln26_13' <Predicate = (!icmp_ln24_2)> <Delay = 0.00>
ST_14 : Operation 159 [1/1] (0.00ns)   --->   "%zext_ln26_14 = zext i2 %ch_0_2 to i4" [conv.cpp:26]   --->   Operation 159 'zext' 'zext_ln26_14' <Predicate = (!icmp_ln24_2)> <Delay = 0.00>
ST_14 : Operation 160 [1/1] (1.18ns)   --->   "%add_ln26_8 = add i4 %zext_ln26, %zext_ln26_14" [conv.cpp:26]   --->   Operation 160 'add' 'add_ln26_8' <Predicate = (!icmp_ln24_2)> <Delay = 1.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 161 [1/1] (0.00ns)   --->   "%zext_ln26_15 = zext i4 %add_ln26_8 to i6" [conv.cpp:26]   --->   Operation 161 'zext' 'zext_ln26_15' <Predicate = (!icmp_ln24_2)> <Delay = 0.00>
ST_14 : Operation 162 [1/1] (0.00ns)   --->   "%p_shl3_cast = call i6 @_ssdm_op_BitConcatenate.i6.i4.i2(i4 %add_ln26_8, i2 0)" [conv.cpp:26]   --->   Operation 162 'bitconcatenate' 'p_shl3_cast' <Predicate = (!icmp_ln24_2)> <Delay = 0.00>
ST_14 : Operation 163 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln26_2 = sub i6 %p_shl3_cast, %zext_ln26_15" [conv.cpp:26]   --->   Operation 163 'sub' 'sub_ln26_2' <Predicate = (!icmp_ln24_2)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.13> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_14 : Operation 164 [1/1] (2.27ns) (root node of TernaryAdder)   --->   "%add_ln26_9 = add i6 %sub_ln26_2, %zext_ln34_2" [conv.cpp:26]   --->   Operation 164 'add' 'add_ln26_9' <Predicate = (!icmp_ln24_2)> <Delay = 2.27> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.13> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_14 : Operation 165 [1/1] (0.00ns)   --->   "%zext_ln26_16 = zext i6 %add_ln26_9 to i64" [conv.cpp:26]   --->   Operation 165 'zext' 'zext_ln26_16' <Predicate = (!icmp_ln24_2)> <Delay = 0.00>
ST_14 : Operation 166 [1/1] (0.00ns)   --->   "%conv_weights_2_addr = getelementptr [18 x float]* @conv_weights_2, i64 0, i64 %zext_ln26_16" [conv.cpp:26]   --->   Operation 166 'getelementptr' 'conv_weights_2_addr' <Predicate = (!icmp_ln24_2)> <Delay = 0.00>
ST_14 : Operation 167 [1/1] (1.36ns)   --->   "%add_ln26_10 = add i6 %zext_ln22, %zext_ln26_13" [conv.cpp:26]   --->   Operation 167 'add' 'add_ln26_10' <Predicate = (!icmp_ln24_2)> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 168 [1/1] (0.00ns)   --->   "%zext_ln26_17 = zext i6 %add_ln26_10 to i64" [conv.cpp:26]   --->   Operation 168 'zext' 'zext_ln26_17' <Predicate = (!icmp_ln24_2)> <Delay = 0.00>
ST_14 : Operation 169 [1/1] (0.00ns)   --->   "%input_addr_2 = getelementptr [32 x float]* %input_r, i64 0, i64 %zext_ln26_17" [conv.cpp:26]   --->   Operation 169 'getelementptr' 'input_addr_2' <Predicate = (!icmp_ln24_2)> <Delay = 0.00>
ST_14 : Operation 170 [2/2] (2.66ns)   --->   "%conv_weights_2_load = load float* %conv_weights_2_addr, align 4" [conv.cpp:26]   --->   Operation 170 'load' 'conv_weights_2_load' <Predicate = (!icmp_ln24_2)> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 18> <ROM>
ST_14 : Operation 171 [2/2] (2.66ns)   --->   "%input_load_2 = load float* %input_addr_2, align 4" [conv.cpp:26]   --->   Operation 171 'load' 'input_load_2' <Predicate = (!icmp_ln24_2)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 12> <RAM>
ST_14 : Operation 172 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str4, i32 %tmp_7) nounwind" [conv.cpp:28]   --->   Operation 172 'specregionend' 'empty_11' <Predicate = (icmp_ln24_2)> <Delay = 0.00>
ST_14 : Operation 173 [1/1] (0.00ns)   --->   "br label %4" [conv.cpp:18]   --->   Operation 173 'br' <Predicate = (icmp_ln24_2)> <Delay = 0.00>

State 15 <SV = 8> <Delay = 12.7>
ST_15 : Operation 174 [1/2] (2.66ns)   --->   "%conv_weights_2_load = load float* %conv_weights_2_addr, align 4" [conv.cpp:26]   --->   Operation 174 'load' 'conv_weights_2_load' <Predicate = true> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 18> <ROM>
ST_15 : Operation 175 [1/2] (2.66ns)   --->   "%input_load_2 = load float* %input_addr_2, align 4" [conv.cpp:26]   --->   Operation 175 'load' 'input_load_2' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 12> <RAM>
ST_15 : Operation 176 [2/2] (10.1ns)   --->   "%tmp_1_2 = fmul float %conv_weights_2_load, %input_load_2" [conv.cpp:26]   --->   Operation 176 'fmul' 'tmp_1_2' <Predicate = true> <Delay = 10.1> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 1> <II = 1> <Delay = 10.1> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 9> <Delay = 26.1>
ST_16 : Operation 177 [1/2] (10.1ns)   --->   "%tmp_1_2 = fmul float %conv_weights_2_load, %input_load_2" [conv.cpp:26]   --->   Operation 177 'fmul' 'tmp_1_2' <Predicate = true> <Delay = 10.1> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 1> <II = 1> <Delay = 10.1> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 178 [2/2] (15.9ns)   --->   "%w_sum_3_2 = fadd float %w_sum_2_2, %tmp_1_2" [conv.cpp:26]   --->   Operation 178 'fadd' 'w_sum_3_2' <Predicate = true> <Delay = 15.9> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 1> <II = 1> <Delay = 15.9> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 10> <Delay = 15.9>
ST_17 : Operation 179 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str6) nounwind" [conv.cpp:25]   --->   Operation 179 'specloopname' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 180 [1/2] (15.9ns)   --->   "%w_sum_3_2 = fadd float %w_sum_2_2, %tmp_1_2" [conv.cpp:26]   --->   Operation 180 'fadd' 'w_sum_3_2' <Predicate = true> <Delay = 15.9> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 1> <II = 1> <Delay = 15.9> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 181 [1/1] (0.00ns)   --->   "br label %9" [conv.cpp:24]   --->   Operation 181 'br' <Predicate = true> <Delay = 0.00>

State 18 <SV = 5> <Delay = 33.7>
ST_18 : Operation 182 [1/2] (15.9ns)   --->   "%w_sum = fadd float %w_sum_0, %merge_i" [conv.cpp:30]   --->   Operation 182 'fadd' 'w_sum' <Predicate = true> <Delay = 15.9> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 1> <II = 1> <Delay = 15.9> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 183 [1/1] (0.00ns)   --->   "%bitcast_ln33 = bitcast float %w_sum to i32" [conv.cpp:33]   --->   Operation 183 'bitcast' 'bitcast_ln33' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 184 [1/1] (0.00ns)   --->   "%tmp = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln33, i32 23, i32 30)" [conv.cpp:33]   --->   Operation 184 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 185 [1/1] (0.00ns)   --->   "%trunc_ln33 = trunc i32 %bitcast_ln33 to i23" [conv.cpp:33]   --->   Operation 185 'trunc' 'trunc_ln33' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 186 [1/1] (1.12ns)   --->   "%icmp_ln33 = icmp ne i8 %tmp, -1" [conv.cpp:33]   --->   Operation 186 'icmp' 'icmp_ln33' <Predicate = true> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 187 [1/1] (1.48ns)   --->   "%icmp_ln33_1 = icmp eq i23 %trunc_ln33, 0" [conv.cpp:33]   --->   Operation 187 'icmp' 'icmp_ln33_1' <Predicate = true> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 188 [1/1] (0.00ns) (grouped into LUT with out node w_sum_1)   --->   "%or_ln33 = or i1 %icmp_ln33_1, %icmp_ln33" [conv.cpp:33]   --->   Operation 188 'or' 'or_ln33' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 189 [1/1] (15.7ns)   --->   "%tmp_4 = fcmp ogt float %w_sum, 0.000000e+00" [conv.cpp:33]   --->   Operation 189 'fcmp' 'tmp_4' <Predicate = true> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 190 [1/1] (0.00ns) (grouped into LUT with out node w_sum_1)   --->   "%and_ln33 = and i1 %or_ln33, %tmp_4" [conv.cpp:33]   --->   Operation 190 'and' 'and_ln33' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 191 [1/1] (0.61ns) (out node of the LUT)   --->   "%w_sum_1 = select i1 %and_ln33, float %w_sum, float 0.000000e+00" [conv.cpp:33]   --->   Operation 191 'select' 'w_sum_1' <Predicate = true> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 192 [1/1] (1.42ns)   --->   "store float %w_sum_1, float* %conv_out_addr, align 4" [conv.cpp:34]   --->   Operation 192 'store' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 12> <RAM>
ST_18 : Operation 193 [1/1] (0.00ns)   --->   "%empty_14 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str2, i32 %tmp_3) nounwind" [conv.cpp:38]   --->   Operation 193 'specregionend' 'empty_14' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 194 [1/1] (0.00ns)   --->   "br label %3" [conv.cpp:14]   --->   Operation 194 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 40ns, clock uncertainty: 5ns.

 <State 1>: 1.18ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('r') with incoming values : ('r', conv.cpp:8) [14]  (1.18 ns)

 <State 2>: 1.18ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('c') with incoming values : ('c', conv.cpp:26) [26]  (1.18 ns)

 <State 3>: 2.55ns
The critical path consists of the following:
	'phi' operation ('c') with incoming values : ('c', conv.cpp:26) [26]  (0 ns)
	'add' operation ('add_ln34', conv.cpp:34) [35]  (1.18 ns)
	'sub' operation ('sub_ln34', conv.cpp:34) [39]  (1.37 ns)

 <State 4>: 1.37ns
The critical path consists of the following:
	'phi' operation ('f') with incoming values : ('f', conv.cpp:14) [43]  (0 ns)
	'add' operation ('add_ln34_1', conv.cpp:34) [53]  (1.37 ns)

 <State 5>: 17.2ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln7', aesl_mux_load.3floatP.i2:7->conv.cpp:30) [167]  (0.61 ns)
	'or' operation ('empty_13', aesl_mux_load.3floatP.i2:7->conv.cpp:30) [170]  (0 ns)
	'select' operation ('merge_i', aesl_mux_load.3floatP.i2:7->conv.cpp:30) [171]  (0.616 ns)
	'fadd' operation ('w_sum', conv.cpp:30) [172]  (16 ns)

 <State 6>: 6.12ns
The critical path consists of the following:
	'phi' operation ('ch_0_0', conv.cpp:24) with incoming values : ('add_ln24', conv.cpp:24) [79]  (0 ns)
	'add' operation ('add_ln26_2', conv.cpp:26) [88]  (1.18 ns)
	'sub' operation ('sub_ln26', conv.cpp:26) [91]  (0 ns)
	'add' operation ('add_ln26_3', conv.cpp:26) [92]  (2.27 ns)
	'getelementptr' operation ('conv_weights_0_addr', conv.cpp:26) [94]  (0 ns)
	'load' operation ('conv_weights_0_load', conv.cpp:26) on array 'conv_weights_0' [98]  (2.66 ns)

 <State 7>: 12.8ns
The critical path consists of the following:
	'load' operation ('conv_weights_0_load', conv.cpp:26) on array 'conv_weights_0' [98]  (2.66 ns)
	'fmul' operation ('tmp_s', conv.cpp:26) [100]  (10.1 ns)

 <State 8>: 26.1ns
The critical path consists of the following:
	'fmul' operation ('tmp_s', conv.cpp:26) [100]  (10.1 ns)
	'fadd' operation ('w_sum_3', conv.cpp:26) [101]  (16 ns)

 <State 9>: 16ns
The critical path consists of the following:
	'fadd' operation ('w_sum_3', conv.cpp:26) [101]  (16 ns)

 <State 10>: 6.12ns
The critical path consists of the following:
	'phi' operation ('ch_0_1', conv.cpp:24) with incoming values : ('add_ln24_1', conv.cpp:24) [109]  (0 ns)
	'add' operation ('add_ln26_5', conv.cpp:26) [118]  (1.18 ns)
	'sub' operation ('sub_ln26_1', conv.cpp:26) [121]  (0 ns)
	'add' operation ('add_ln26_6', conv.cpp:26) [122]  (2.27 ns)
	'getelementptr' operation ('conv_weights_1_addr', conv.cpp:26) [124]  (0 ns)
	'load' operation ('conv_weights_1_load', conv.cpp:26) on array 'conv_weights_1' [128]  (2.66 ns)

 <State 11>: 12.8ns
The critical path consists of the following:
	'load' operation ('conv_weights_1_load', conv.cpp:26) on array 'conv_weights_1' [128]  (2.66 ns)
	'fmul' operation ('tmp_1_1', conv.cpp:26) [130]  (10.1 ns)

 <State 12>: 26.1ns
The critical path consists of the following:
	'fmul' operation ('tmp_1_1', conv.cpp:26) [130]  (10.1 ns)
	'fadd' operation ('w_sum_3_1', conv.cpp:26) [131]  (16 ns)

 <State 13>: 16ns
The critical path consists of the following:
	'fadd' operation ('w_sum_3_1', conv.cpp:26) [131]  (16 ns)

 <State 14>: 6.12ns
The critical path consists of the following:
	'phi' operation ('ch_0_2', conv.cpp:24) with incoming values : ('add_ln24_2', conv.cpp:24) [139]  (0 ns)
	'add' operation ('add_ln26_8', conv.cpp:26) [148]  (1.18 ns)
	'sub' operation ('sub_ln26_2', conv.cpp:26) [151]  (0 ns)
	'add' operation ('add_ln26_9', conv.cpp:26) [152]  (2.27 ns)
	'getelementptr' operation ('conv_weights_2_addr', conv.cpp:26) [154]  (0 ns)
	'load' operation ('conv_weights_2_load', conv.cpp:26) on array 'conv_weights_2' [158]  (2.66 ns)

 <State 15>: 12.8ns
The critical path consists of the following:
	'load' operation ('conv_weights_2_load', conv.cpp:26) on array 'conv_weights_2' [158]  (2.66 ns)
	'fmul' operation ('tmp_1_2', conv.cpp:26) [160]  (10.1 ns)

 <State 16>: 26.1ns
The critical path consists of the following:
	'fmul' operation ('tmp_1_2', conv.cpp:26) [160]  (10.1 ns)
	'fadd' operation ('w_sum_3_2', conv.cpp:26) [161]  (16 ns)

 <State 17>: 16ns
The critical path consists of the following:
	'fadd' operation ('w_sum_3_2', conv.cpp:26) [161]  (16 ns)

 <State 18>: 33.8ns
The critical path consists of the following:
	'fadd' operation ('w_sum', conv.cpp:30) [172]  (16 ns)
	'fcmp' operation ('tmp_4', conv.cpp:33) [179]  (15.8 ns)
	'and' operation ('and_ln33', conv.cpp:33) [180]  (0 ns)
	'select' operation ('w_sum', conv.cpp:33) [181]  (0.616 ns)
	'store' operation ('store_ln34', conv.cpp:34) of variable 'w_sum', conv.cpp:33 on array 'conv_out' [182]  (1.43 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
