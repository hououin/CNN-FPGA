// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv_1_HH_
#define _conv_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conv_1_fadd_32ns_dEe.h"
#include "conv_1_fmul_32ns_eOg.h"
#include "conv_1_fcmp_32ns_fYi.h"
#include "conv_1_mux_42_32_g8j.h"
#include "conv_1_conv_weighbkb.h"
#include "conv_1_conv_weighcud.h"

namespace ap_rtl {

struct conv_1 : public sc_module {
    // Port declarations 38
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<3> > input_0_address0;
    sc_out< sc_logic > input_0_ce0;
    sc_in< sc_lv<32> > input_0_q0;
    sc_out< sc_lv<3> > input_0_address1;
    sc_out< sc_logic > input_0_ce1;
    sc_in< sc_lv<32> > input_0_q1;
    sc_out< sc_lv<3> > input_1_address0;
    sc_out< sc_logic > input_1_ce0;
    sc_in< sc_lv<32> > input_1_q0;
    sc_out< sc_lv<3> > input_1_address1;
    sc_out< sc_logic > input_1_ce1;
    sc_in< sc_lv<32> > input_1_q1;
    sc_out< sc_lv<3> > input_2_address0;
    sc_out< sc_logic > input_2_ce0;
    sc_in< sc_lv<32> > input_2_q0;
    sc_out< sc_lv<3> > input_2_address1;
    sc_out< sc_logic > input_2_ce1;
    sc_in< sc_lv<32> > input_2_q1;
    sc_out< sc_lv<3> > input_3_address0;
    sc_out< sc_logic > input_3_ce0;
    sc_in< sc_lv<32> > input_3_q0;
    sc_out< sc_lv<3> > input_3_address1;
    sc_out< sc_logic > input_3_ce1;
    sc_in< sc_lv<32> > input_3_q1;
    sc_out< sc_lv<3> > conv_out_0_address0;
    sc_out< sc_logic > conv_out_0_ce0;
    sc_out< sc_logic > conv_out_0_we0;
    sc_out< sc_lv<32> > conv_out_0_d0;
    sc_out< sc_lv<3> > conv_out_1_address0;
    sc_out< sc_logic > conv_out_1_ce0;
    sc_out< sc_logic > conv_out_1_we0;
    sc_out< sc_lv<32> > conv_out_1_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<5> > ap_var_for_const2;


    // Module declarations
    conv_1(sc_module_name name);
    SC_HAS_PROCESS(conv_1);

    ~conv_1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    conv_1_conv_weighbkb* conv_weights_0_U;
    conv_1_conv_weighcud* conv_weights_1_U;
    conv_1_fadd_32ns_dEe<1,2,32,32,32>* conv_1_fadd_32ns_dEe_U1;
    conv_1_fmul_32ns_eOg<1,2,32,32,32>* conv_1_fmul_32ns_eOg_U2;
    conv_1_fcmp_32ns_fYi<1,1,32,32,1>* conv_1_fcmp_32ns_fYi_U3;
    conv_1_mux_42_32_g8j<1,1,32,32,32,32,2,32>* conv_1_mux_42_32_g8j_U4;
    conv_1_mux_42_32_g8j<1,1,32,32,32,32,2,32>* conv_1_mux_42_32_g8j_U5;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > conv_weights_0_address0;
    sc_signal< sc_logic > conv_weights_0_ce0;
    sc_signal< sc_lv<32> > conv_weights_0_q0;
    sc_signal< sc_lv<5> > conv_weights_1_address0;
    sc_signal< sc_logic > conv_weights_1_ce0;
    sc_signal< sc_lv<32> > conv_weights_1_q0;
    sc_signal< sc_lv<4> > indvar_flatten_reg_314;
    sc_signal< sc_lv<2> > wr_0_reg_325;
    sc_signal< sc_lv<32> > w_sum_1_reg_336;
    sc_signal< sc_lv<2> > wc_0_reg_348;
    sc_signal< sc_lv<32> > grp_fu_365_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln18_reg_859;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state4_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<1> > icmp_ln18_reg_859_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln8_fu_382_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > add_ln8_fu_388_p2;
    sc_signal< sc_lv<4> > add_ln8_reg_811;
    sc_signal< sc_lv<1> > icmp_ln11_fu_400_p2;
    sc_signal< sc_lv<1> > icmp_ln11_reg_816;
    sc_signal< sc_lv<2> > select_ln34_1_fu_414_p3;
    sc_signal< sc_lv<2> > select_ln34_1_reg_821;
    sc_signal< sc_lv<2> > select_ln34_2_fu_480_p3;
    sc_signal< sc_lv<2> > select_ln34_2_reg_827;
    sc_signal< sc_lv<1> > select_ln34_3_fu_492_p3;
    sc_signal< sc_lv<1> > select_ln34_3_reg_834;
    sc_signal< sc_lv<2> > select_ln11_fu_500_p3;
    sc_signal< sc_lv<2> > select_ln11_reg_838;
    sc_signal< sc_lv<6> > zext_ln34_1_fu_508_p1;
    sc_signal< sc_lv<6> > zext_ln34_1_reg_844;
    sc_signal< sc_lv<3> > conv_out_0_addr_reg_849;
    sc_signal< sc_lv<3> > conv_out_1_addr_reg_854;
    sc_signal< sc_lv<1> > icmp_ln18_fu_528_p2;
    sc_signal< sc_lv<4> > add_ln18_fu_534_p2;
    sc_signal< sc_lv<4> > add_ln18_reg_863;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<2> > select_ln26_fu_552_p3;
    sc_signal< sc_lv<2> > select_ln26_reg_868;
    sc_signal< sc_lv<2> > select_ln26_1_fu_560_p3;
    sc_signal< sc_lv<2> > select_ln26_1_reg_874;
    sc_signal< sc_lv<32> > tmp_7_fu_670_p6;
    sc_signal< sc_lv<32> > conv_weights_1_load_reg_939;
    sc_signal< sc_lv<32> > tmp_8_fu_685_p6;
    sc_signal< sc_lv<32> > tmp_8_reg_944;
    sc_signal< sc_lv<2> > wc_fu_699_p2;
    sc_signal< sc_lv<2> > wc_reg_949;
    sc_signal< sc_lv<32> > grp_fu_359_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<32> > merge_i_fu_728_p3;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<2> > f_fu_789_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<4> > select_ln11_1_fu_800_p3;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<4> > indvar_flatten29_reg_258;
    sc_signal< sc_lv<2> > r_0_reg_269;
    sc_signal< sc_lv<4> > indvar_flatten15_reg_280;
    sc_signal< sc_lv<2> > c_0_reg_292;
    sc_signal< sc_lv<2> > f_0_reg_303;
    sc_signal< sc_lv<4> > ap_phi_mux_indvar_flatten_phi_fu_318_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<2> > ap_phi_mux_wr_0_phi_fu_329_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_w_sum_1_phi_fu_340_p4;
    sc_signal< sc_lv<2> > ap_phi_mux_wc_0_phi_fu_352_p4;
    sc_signal< sc_lv<64> > sext_ln34_fu_522_p1;
    sc_signal< sc_lv<64> > zext_ln26_2_fu_607_p1;
    sc_signal< sc_lv<64> > tmp_9_fu_621_p3;
    sc_signal< sc_lv<64> > zext_ln26_4_fu_660_p1;
    sc_signal< sc_lv<32> > w_sum_2_fu_779_p3;
    sc_signal< sc_lv<32> > grp_fu_359_p0;
    sc_signal< sc_lv<32> > grp_fu_359_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<32> > grp_fu_365_p0;
    sc_signal< sc_lv<32> > grp_fu_365_p1;
    sc_signal< sc_lv<2> > r_fu_394_p2;
    sc_signal< sc_lv<4> > tmp_1_fu_426_p3;
    sc_signal< sc_lv<4> > zext_ln34_fu_422_p1;
    sc_signal< sc_lv<1> > trunc_ln34_fu_446_p1;
    sc_signal< sc_lv<1> > xor_ln34_fu_440_p2;
    sc_signal< sc_lv<1> > icmp_ln14_fu_456_p2;
    sc_signal< sc_lv<2> > select_ln34_fu_406_p3;
    sc_signal< sc_lv<1> > and_ln34_1_fu_462_p2;
    sc_signal< sc_lv<1> > or_ln34_fu_474_p2;
    sc_signal< sc_lv<2> > c_fu_468_p2;
    sc_signal< sc_lv<1> > trunc_ln34_1_fu_488_p1;
    sc_signal< sc_lv<1> > and_ln34_fu_450_p2;
    sc_signal< sc_lv<4> > zext_ln34_2_fu_512_p1;
    sc_signal< sc_lv<4> > sub_ln34_fu_434_p2;
    sc_signal< sc_lv<4> > add_ln34_fu_516_p2;
    sc_signal< sc_lv<1> > icmp_ln21_fu_546_p2;
    sc_signal< sc_lv<2> > wr_fu_540_p2;
    sc_signal< sc_lv<4> > tmp_2_fu_572_p3;
    sc_signal< sc_lv<5> > zext_ln26_1_fu_580_p1;
    sc_signal< sc_lv<5> > zext_ln26_fu_568_p1;
    sc_signal< sc_lv<5> > sub_ln26_fu_584_p2;
    sc_signal< sc_lv<2> > add_ln26_fu_594_p2;
    sc_signal< sc_lv<3> > tmp_5_fu_599_p3;
    sc_signal< sc_lv<3> > or_ln26_fu_615_p2;
    sc_signal< sc_lv<6> > sext_ln26_fu_590_p1;
    sc_signal< sc_lv<6> > zext_ln26_3_fu_633_p1;
    sc_signal< sc_lv<6> > add_ln26_2_fu_637_p2;
    sc_signal< sc_lv<6> > shl_ln26_fu_643_p2;
    sc_signal< sc_lv<6> > sub_ln26_1_fu_649_p2;
    sc_signal< sc_lv<6> > add_ln26_3_fu_655_p2;
    sc_signal< sc_lv<2> > add_ln26_1_fu_666_p2;
    sc_signal< sc_lv<1> > icmp_ln7_1_fu_709_p2;
    sc_signal< sc_lv<1> > icmp_ln7_fu_704_p2;
    sc_signal< sc_lv<1> > empty_5_fu_722_p2;
    sc_signal< sc_lv<32> > select_ln7_i_fu_714_p3;
    sc_signal< sc_lv<32> > bitcast_ln33_fu_737_p1;
    sc_signal< sc_lv<8> > tmp_fu_741_p4;
    sc_signal< sc_lv<23> > trunc_ln33_fu_751_p1;
    sc_signal< sc_lv<1> > icmp_ln33_1_fu_761_p2;
    sc_signal< sc_lv<1> > icmp_ln33_fu_755_p2;
    sc_signal< sc_lv<1> > or_ln33_fu_767_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_371_p2;
    sc_signal< sc_lv<1> > and_ln33_fu_773_p2;
    sc_signal< sc_lv<4> > add_ln11_1_fu_794_p2;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_pp0_stage0;
    static const sc_lv<6> ap_ST_fsm_pp0_stage1;
    static const sc_lv<6> ap_ST_fsm_state8;
    static const sc_lv<6> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<61> ap_const_lv61_0;
    static const sc_lv<6> ap_const_lv6_2;
    static const sc_lv<32> ap_const_lv32_40000000;
    static const sc_lv<32> ap_const_lv32_3F800000;
    static const sc_lv<32> ap_const_lv32_3FC00000;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_add_ln11_1_fu_794_p2();
    void thread_add_ln18_fu_534_p2();
    void thread_add_ln26_1_fu_666_p2();
    void thread_add_ln26_2_fu_637_p2();
    void thread_add_ln26_3_fu_655_p2();
    void thread_add_ln26_fu_594_p2();
    void thread_add_ln34_fu_516_p2();
    void thread_add_ln8_fu_388_p2();
    void thread_and_ln33_fu_773_p2();
    void thread_and_ln34_1_fu_462_p2();
    void thread_and_ln34_fu_450_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage1_iter0();
    void thread_ap_block_state5_pp0_stage0_iter1();
    void thread_ap_block_state6_pp0_stage1_iter1();
    void thread_ap_block_state7_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_318_p4();
    void thread_ap_phi_mux_w_sum_1_phi_fu_340_p4();
    void thread_ap_phi_mux_wc_0_phi_fu_352_p4();
    void thread_ap_phi_mux_wr_0_phi_fu_329_p4();
    void thread_ap_ready();
    void thread_bitcast_ln33_fu_737_p1();
    void thread_c_fu_468_p2();
    void thread_conv_out_0_address0();
    void thread_conv_out_0_ce0();
    void thread_conv_out_0_d0();
    void thread_conv_out_0_we0();
    void thread_conv_out_1_address0();
    void thread_conv_out_1_ce0();
    void thread_conv_out_1_d0();
    void thread_conv_out_1_we0();
    void thread_conv_weights_0_address0();
    void thread_conv_weights_0_ce0();
    void thread_conv_weights_1_address0();
    void thread_conv_weights_1_ce0();
    void thread_empty_5_fu_722_p2();
    void thread_f_fu_789_p2();
    void thread_grp_fu_359_p0();
    void thread_grp_fu_359_p1();
    void thread_grp_fu_365_p0();
    void thread_grp_fu_365_p1();
    void thread_icmp_ln11_fu_400_p2();
    void thread_icmp_ln14_fu_456_p2();
    void thread_icmp_ln18_fu_528_p2();
    void thread_icmp_ln21_fu_546_p2();
    void thread_icmp_ln33_1_fu_761_p2();
    void thread_icmp_ln33_fu_755_p2();
    void thread_icmp_ln7_1_fu_709_p2();
    void thread_icmp_ln7_fu_704_p2();
    void thread_icmp_ln8_fu_382_p2();
    void thread_input_0_address0();
    void thread_input_0_address1();
    void thread_input_0_ce0();
    void thread_input_0_ce1();
    void thread_input_1_address0();
    void thread_input_1_address1();
    void thread_input_1_ce0();
    void thread_input_1_ce1();
    void thread_input_2_address0();
    void thread_input_2_address1();
    void thread_input_2_ce0();
    void thread_input_2_ce1();
    void thread_input_3_address0();
    void thread_input_3_address1();
    void thread_input_3_ce0();
    void thread_input_3_ce1();
    void thread_merge_i_fu_728_p3();
    void thread_or_ln26_fu_615_p2();
    void thread_or_ln33_fu_767_p2();
    void thread_or_ln34_fu_474_p2();
    void thread_r_fu_394_p2();
    void thread_select_ln11_1_fu_800_p3();
    void thread_select_ln11_fu_500_p3();
    void thread_select_ln26_1_fu_560_p3();
    void thread_select_ln26_fu_552_p3();
    void thread_select_ln34_1_fu_414_p3();
    void thread_select_ln34_2_fu_480_p3();
    void thread_select_ln34_3_fu_492_p3();
    void thread_select_ln34_fu_406_p3();
    void thread_select_ln7_i_fu_714_p3();
    void thread_sext_ln26_fu_590_p1();
    void thread_sext_ln34_fu_522_p1();
    void thread_shl_ln26_fu_643_p2();
    void thread_sub_ln26_1_fu_649_p2();
    void thread_sub_ln26_fu_584_p2();
    void thread_sub_ln34_fu_434_p2();
    void thread_tmp_1_fu_426_p3();
    void thread_tmp_2_fu_572_p3();
    void thread_tmp_5_fu_599_p3();
    void thread_tmp_9_fu_621_p3();
    void thread_tmp_fu_741_p4();
    void thread_trunc_ln33_fu_751_p1();
    void thread_trunc_ln34_1_fu_488_p1();
    void thread_trunc_ln34_fu_446_p1();
    void thread_w_sum_2_fu_779_p3();
    void thread_wc_fu_699_p2();
    void thread_wr_fu_540_p2();
    void thread_xor_ln34_fu_440_p2();
    void thread_zext_ln26_1_fu_580_p1();
    void thread_zext_ln26_2_fu_607_p1();
    void thread_zext_ln26_3_fu_633_p1();
    void thread_zext_ln26_4_fu_660_p1();
    void thread_zext_ln26_fu_568_p1();
    void thread_zext_ln34_1_fu_508_p1();
    void thread_zext_ln34_2_fu_512_p1();
    void thread_zext_ln34_fu_422_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
