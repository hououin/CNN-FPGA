// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv_1_HH_
#define _conv_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conv_1_fadd_32ns_dEe.h"
#include "conv_1_fmul_32ns_eOg.h"
#include "conv_1_fcmp_32ns_fYi.h"
#include "conv_1_conv_weighbkb.h"
#include "conv_1_conv_weighcud.h"

namespace ap_rtl {

struct conv_1 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<32> > input_r_q0;
    sc_out< sc_lv<5> > input_r_address1;
    sc_out< sc_logic > input_r_ce1;
    sc_in< sc_lv<32> > input_r_q1;
    sc_out< sc_lv<4> > conv_out_address0;
    sc_out< sc_logic > conv_out_ce0;
    sc_out< sc_logic > conv_out_we0;
    sc_out< sc_lv<32> > conv_out_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<5> > ap_var_for_const2;


    // Module declarations
    conv_1(sc_module_name name);
    SC_HAS_PROCESS(conv_1);

    ~conv_1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    conv_1_conv_weighbkb* conv_weights_0_U;
    conv_1_conv_weighcud* conv_weights_1_U;
    conv_1_fadd_32ns_dEe<1,2,32,32,32>* conv_1_fadd_32ns_dEe_U1;
    conv_1_fmul_32ns_eOg<1,2,32,32,32>* conv_1_fmul_32ns_eOg_U2;
    conv_1_fmul_32ns_eOg<1,2,32,32,32>* conv_1_fmul_32ns_eOg_U3;
    conv_1_fcmp_32ns_fYi<1,1,32,32,1>* conv_1_fcmp_32ns_fYi_U4;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > conv_weights_0_address0;
    sc_signal< sc_logic > conv_weights_0_ce0;
    sc_signal< sc_lv<32> > conv_weights_0_q0;
    sc_signal< sc_lv<5> > conv_weights_1_address0;
    sc_signal< sc_logic > conv_weights_1_ce0;
    sc_signal< sc_lv<32> > conv_weights_1_q0;
    sc_signal< sc_lv<2> > r_fu_259_p2;
    sc_signal< sc_lv<2> > r_reg_562;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > zext_ln11_fu_273_p1;
    sc_signal< sc_lv<4> > zext_ln11_reg_567;
    sc_signal< sc_lv<1> > icmp_ln8_fu_253_p2;
    sc_signal< sc_lv<2> > c_fu_283_p2;
    sc_signal< sc_lv<2> > c_reg_575;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<5> > sub_ln34_fu_314_p2;
    sc_signal< sc_lv<5> > sub_ln34_reg_580;
    sc_signal< sc_lv<1> > icmp_ln11_fu_277_p2;
    sc_signal< sc_lv<2> > f_fu_326_p2;
    sc_signal< sc_lv<2> > f_reg_588;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<6> > zext_ln34_2_fu_332_p1;
    sc_signal< sc_lv<6> > zext_ln34_2_reg_593;
    sc_signal< sc_lv<1> > icmp_ln14_fu_320_p2;
    sc_signal< sc_lv<4> > conv_out_addr_reg_598;
    sc_signal< sc_lv<2> > wr_fu_356_p2;
    sc_signal< sc_lv<2> > wr_reg_606;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<6> > sext_ln26_fu_384_p1;
    sc_signal< sc_lv<6> > sext_ln26_reg_611;
    sc_signal< sc_lv<1> > icmp_ln18_fu_350_p2;
    sc_signal< sc_lv<2> > add_ln26_fu_388_p2;
    sc_signal< sc_lv<2> > add_ln26_reg_616;
    sc_signal< sc_lv<32> > merge_i_fu_420_p3;
    sc_signal< sc_lv<2> > wc_fu_435_p2;
    sc_signal< sc_lv<2> > wc_reg_629;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln21_fu_429_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > grp_fu_234_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > grp_fu_241_p2;
    sc_signal< sc_lv<32> > tmp_1_1_reg_679;
    sc_signal< sc_lv<32> > grp_fu_227_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<2> > r_0_reg_145;
    sc_signal< sc_lv<2> > c_0_reg_157;
    sc_signal< sc_lv<2> > f_0_reg_169;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<2> > wr_0_reg_181;
    sc_signal< sc_lv<32> > w_sum_0_reg_192;
    sc_signal< sc_lv<32> > w_sum_1_reg_204;
    sc_signal< sc_lv<2> > wc_0_reg_216;
    sc_signal< sc_lv<64> > zext_ln34_4_fu_345_p1;
    sc_signal< sc_lv<64> > zext_ln26_3_fu_467_p1;
    sc_signal< sc_lv<64> > zext_ln26_4_fu_488_p1;
    sc_signal< sc_lv<64> > tmp_9_fu_499_p3;
    sc_signal< sc_lv<32> > grp_fu_227_p0;
    sc_signal< sc_lv<32> > grp_fu_227_p1;
    sc_signal< sc_lv<3> > tmp_6_fu_265_p3;
    sc_signal< sc_lv<4> > zext_ln34_fu_289_p1;
    sc_signal< sc_lv<4> > add_ln34_fu_293_p2;
    sc_signal< sc_lv<3> > trunc_ln34_fu_302_p1;
    sc_signal< sc_lv<5> > p_shl_cast_fu_306_p3;
    sc_signal< sc_lv<5> > zext_ln34_1_fu_298_p1;
    sc_signal< sc_lv<5> > zext_ln34_3_fu_336_p1;
    sc_signal< sc_lv<5> > add_ln34_1_fu_340_p2;
    sc_signal< sc_lv<4> > tmp_8_fu_366_p3;
    sc_signal< sc_lv<5> > zext_ln26_1_fu_374_p1;
    sc_signal< sc_lv<5> > zext_ln26_fu_362_p1;
    sc_signal< sc_lv<5> > sub_ln26_fu_378_p2;
    sc_signal< sc_lv<1> > icmp_ln7_1_fu_400_p2;
    sc_signal< sc_lv<1> > icmp_ln7_fu_394_p2;
    sc_signal< sc_lv<1> > empty_9_fu_414_p2;
    sc_signal< sc_lv<32> > select_ln7_i_fu_406_p3;
    sc_signal< sc_lv<6> > zext_ln26_2_fu_441_p1;
    sc_signal< sc_lv<6> > add_ln26_2_fu_445_p2;
    sc_signal< sc_lv<6> > shl_ln26_fu_450_p2;
    sc_signal< sc_lv<6> > sub_ln26_1_fu_456_p2;
    sc_signal< sc_lv<6> > add_ln26_3_fu_462_p2;
    sc_signal< sc_lv<2> > add_ln26_1_fu_473_p2;
    sc_signal< sc_lv<5> > tmp_7_fu_479_p4;
    sc_signal< sc_lv<5> > or_ln26_fu_493_p2;
    sc_signal< sc_lv<32> > bitcast_ln33_fu_508_p1;
    sc_signal< sc_lv<8> > tmp_fu_512_p4;
    sc_signal< sc_lv<23> > trunc_ln33_fu_522_p1;
    sc_signal< sc_lv<1> > icmp_ln33_1_fu_532_p2;
    sc_signal< sc_lv<1> > icmp_ln33_fu_526_p2;
    sc_signal< sc_lv<1> > or_ln33_fu_538_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_247_p2;
    sc_signal< sc_lv<1> > and_ln33_fu_544_p2;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_state10;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<32> ap_const_lv32_40000000;
    static const sc_lv<32> ap_const_lv32_3F800000;
    static const sc_lv<32> ap_const_lv32_3FC00000;
    static const sc_lv<6> ap_const_lv6_2;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<59> ap_const_lv59_0;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_add_ln26_1_fu_473_p2();
    void thread_add_ln26_2_fu_445_p2();
    void thread_add_ln26_3_fu_462_p2();
    void thread_add_ln26_fu_388_p2();
    void thread_add_ln34_1_fu_340_p2();
    void thread_add_ln34_fu_293_p2();
    void thread_and_ln33_fu_544_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bitcast_ln33_fu_508_p1();
    void thread_c_fu_283_p2();
    void thread_conv_out_address0();
    void thread_conv_out_ce0();
    void thread_conv_out_d0();
    void thread_conv_out_we0();
    void thread_conv_weights_0_address0();
    void thread_conv_weights_0_ce0();
    void thread_conv_weights_1_address0();
    void thread_conv_weights_1_ce0();
    void thread_empty_9_fu_414_p2();
    void thread_f_fu_326_p2();
    void thread_grp_fu_227_p0();
    void thread_grp_fu_227_p1();
    void thread_icmp_ln11_fu_277_p2();
    void thread_icmp_ln14_fu_320_p2();
    void thread_icmp_ln18_fu_350_p2();
    void thread_icmp_ln21_fu_429_p2();
    void thread_icmp_ln33_1_fu_532_p2();
    void thread_icmp_ln33_fu_526_p2();
    void thread_icmp_ln7_1_fu_400_p2();
    void thread_icmp_ln7_fu_394_p2();
    void thread_icmp_ln8_fu_253_p2();
    void thread_input_r_address0();
    void thread_input_r_address1();
    void thread_input_r_ce0();
    void thread_input_r_ce1();
    void thread_merge_i_fu_420_p3();
    void thread_or_ln26_fu_493_p2();
    void thread_or_ln33_fu_538_p2();
    void thread_p_shl_cast_fu_306_p3();
    void thread_r_fu_259_p2();
    void thread_select_ln7_i_fu_406_p3();
    void thread_sext_ln26_fu_384_p1();
    void thread_shl_ln26_fu_450_p2();
    void thread_sub_ln26_1_fu_456_p2();
    void thread_sub_ln26_fu_378_p2();
    void thread_sub_ln34_fu_314_p2();
    void thread_tmp_6_fu_265_p3();
    void thread_tmp_7_fu_479_p4();
    void thread_tmp_8_fu_366_p3();
    void thread_tmp_9_fu_499_p3();
    void thread_tmp_fu_512_p4();
    void thread_trunc_ln33_fu_522_p1();
    void thread_trunc_ln34_fu_302_p1();
    void thread_wc_fu_435_p2();
    void thread_wr_fu_356_p2();
    void thread_zext_ln11_fu_273_p1();
    void thread_zext_ln26_1_fu_374_p1();
    void thread_zext_ln26_2_fu_441_p1();
    void thread_zext_ln26_3_fu_467_p1();
    void thread_zext_ln26_4_fu_488_p1();
    void thread_zext_ln26_fu_362_p1();
    void thread_zext_ln34_1_fu_298_p1();
    void thread_zext_ln34_2_fu_332_p1();
    void thread_zext_ln34_3_fu_336_p1();
    void thread_zext_ln34_4_fu_345_p1();
    void thread_zext_ln34_fu_289_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
