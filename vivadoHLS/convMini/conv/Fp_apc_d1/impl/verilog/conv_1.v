// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv_1,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx485t-ffg1157-1,HLS_INPUT_CLOCK=40.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=33.795000,HLS_SYN_LAT=56,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=32,HLS_SYN_FF=3624,HLS_SYN_LUT=4136,HLS_VERSION=2020_1}" *)

module conv_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_0_address0,
        input_0_ce0,
        input_0_q0,
        input_0_address1,
        input_0_ce1,
        input_0_q1,
        input_1_address0,
        input_1_ce0,
        input_1_q0,
        input_1_address1,
        input_1_ce1,
        input_1_q1,
        input_2_address0,
        input_2_ce0,
        input_2_q0,
        input_2_address1,
        input_2_ce1,
        input_2_q1,
        input_3_address0,
        input_3_ce0,
        input_3_q0,
        input_3_address1,
        input_3_ce1,
        input_3_q1,
        conv_out_0_address0,
        conv_out_0_ce0,
        conv_out_0_we0,
        conv_out_0_d0,
        conv_out_1_address0,
        conv_out_1_ce0,
        conv_out_1_we0,
        conv_out_1_d0
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_pp0_stage0 = 5'd2;
parameter    ap_ST_fsm_pp0_stage1 = 5'd4;
parameter    ap_ST_fsm_pp0_stage2 = 5'd8;
parameter    ap_ST_fsm_state24 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] input_0_address0;
output   input_0_ce0;
input  [31:0] input_0_q0;
output  [2:0] input_0_address1;
output   input_0_ce1;
input  [31:0] input_0_q1;
output  [2:0] input_1_address0;
output   input_1_ce0;
input  [31:0] input_1_q0;
output  [2:0] input_1_address1;
output   input_1_ce1;
input  [31:0] input_1_q1;
output  [2:0] input_2_address0;
output   input_2_ce0;
input  [31:0] input_2_q0;
output  [2:0] input_2_address1;
output   input_2_ce1;
input  [31:0] input_2_q1;
output  [2:0] input_3_address0;
output   input_3_ce0;
input  [31:0] input_3_q0;
output  [2:0] input_3_address1;
output   input_3_ce1;
input  [31:0] input_3_q1;
output  [2:0] conv_out_0_address0;
output   conv_out_0_ce0;
output   conv_out_0_we0;
output  [31:0] conv_out_0_d0;
output  [2:0] conv_out_1_address0;
output   conv_out_1_ce0;
output   conv_out_1_we0;
output  [31:0] conv_out_1_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] input_0_address0;
reg input_0_ce0;
reg[2:0] input_0_address1;
reg input_0_ce1;
reg[2:0] input_1_address0;
reg input_1_ce0;
reg[2:0] input_1_address1;
reg input_1_ce1;
reg[2:0] input_2_address0;
reg input_2_ce0;
reg[2:0] input_2_address1;
reg input_2_ce1;
reg[2:0] input_3_address0;
reg input_3_ce0;
reg[2:0] input_3_address1;
reg input_3_ce1;
reg conv_out_0_ce0;
reg conv_out_0_we0;
reg conv_out_1_ce0;
reg conv_out_1_we0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [3:0] indvar_flatten45_reg_456;
reg   [1:0] r_0_reg_467;
reg   [3:0] indvar_flatten_reg_478;
reg   [1:0] c_0_reg_489;
reg   [1:0] f_0_reg_500;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state9_pp0_stage1_iter2;
wire    ap_block_state12_pp0_stage1_iter3;
wire    ap_block_state15_pp0_stage1_iter4;
wire    ap_block_state18_pp0_stage1_iter5;
wire    ap_block_state21_pp0_stage1_iter6;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln8_reg_1291;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_state10_pp0_stage2_iter2;
wire    ap_block_state13_pp0_stage2_iter3;
wire    ap_block_state16_pp0_stage2_iter4;
wire    ap_block_state19_pp0_stage2_iter5;
wire    ap_block_state22_pp0_stage2_iter6;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state8_pp0_stage0_iter2;
wire    ap_block_state11_pp0_stage0_iter3;
wire    ap_block_state14_pp0_stage0_iter4;
wire    ap_block_state17_pp0_stage0_iter5;
wire    ap_block_state20_pp0_stage0_iter6;
wire    ap_block_state23_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] grp_fu_552_p2;
reg   [31:0] reg_661;
wire   [31:0] grp_fu_511_p2;
reg   [0:0] icmp_ln8_reg_1291_pp0_iter1_reg;
wire   [31:0] grp_fu_517_p2;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln8_reg_1291_pp0_iter2_reg;
wire   [31:0] grp_fu_523_p2;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] icmp_ln8_reg_1291_pp0_iter3_reg;
wire   [31:0] grp_fu_529_p2;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] icmp_ln8_reg_1291_pp0_iter4_reg;
wire   [31:0] grp_fu_535_p2;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] icmp_ln8_reg_1291_pp0_iter5_reg;
wire   [31:0] grp_fu_541_p2;
reg    ap_enable_reg_pp0_iter6;
reg   [0:0] icmp_ln8_reg_1291_pp0_iter6_reg;
wire   [0:0] icmp_ln8_fu_703_p2;
wire   [3:0] add_ln8_fu_709_p2;
reg   [3:0] add_ln8_reg_1295;
wire   [1:0] select_ln26_19_fu_735_p3;
reg   [1:0] select_ln26_19_reg_1300;
wire   [0:0] trunc_ln26_fu_743_p1;
reg   [0:0] trunc_ln26_reg_1305;
reg   [0:0] trunc_ln26_reg_1305_pp0_iter1_reg;
reg   [0:0] trunc_ln26_reg_1305_pp0_iter2_reg;
reg   [0:0] trunc_ln26_reg_1305_pp0_iter3_reg;
reg   [0:0] trunc_ln26_reg_1305_pp0_iter4_reg;
reg   [0:0] trunc_ln26_reg_1305_pp0_iter5_reg;
reg   [0:0] trunc_ln26_reg_1305_pp0_iter6_reg;
wire   [1:0] select_ln34_fu_777_p3;
reg   [1:0] select_ln34_reg_1315;
reg   [1:0] select_ln34_reg_1315_pp0_iter1_reg;
reg   [1:0] select_ln34_reg_1315_pp0_iter2_reg;
reg   [1:0] select_ln34_reg_1315_pp0_iter3_reg;
reg   [1:0] select_ln34_reg_1315_pp0_iter4_reg;
reg   [1:0] select_ln34_reg_1315_pp0_iter5_reg;
reg   [1:0] select_ln34_reg_1315_pp0_iter6_reg;
wire   [1:0] select_ln34_1_fu_785_p3;
reg   [1:0] select_ln34_1_reg_1340;
reg   [1:0] select_ln34_1_reg_1340_pp0_iter1_reg;
reg   [1:0] select_ln34_1_reg_1340_pp0_iter2_reg;
reg   [1:0] select_ln34_1_reg_1340_pp0_iter3_reg;
reg   [1:0] select_ln34_1_reg_1340_pp0_iter4_reg;
reg   [1:0] select_ln34_1_reg_1340_pp0_iter5_reg;
reg   [1:0] select_ln34_1_reg_1340_pp0_iter6_reg;
wire   [1:0] select_ln34_2_fu_851_p3;
reg   [1:0] select_ln34_2_reg_1387;
wire   [1:0] select_ln34_3_fu_879_p3;
reg   [1:0] select_ln34_3_reg_1392;
wire   [3:0] select_ln11_fu_893_p3;
reg   [3:0] select_ln11_reg_1397;
wire   [31:0] tmp_fu_938_p5;
wire   [31:0] tmp_4_fu_950_p5;
wire   [31:0] tmp_9_fu_962_p5;
wire   [31:0] tmp_10_fu_974_p5;
wire   [31:0] tmp_15_fu_986_p5;
wire   [31:0] tmp_16_fu_998_p5;
wire   [31:0] grp_fu_557_p2;
reg   [31:0] tmp_1_0_0_1_reg_1512;
wire   [31:0] tmp_5_fu_1047_p5;
wire   [31:0] tmp_6_fu_1059_p5;
wire   [31:0] grp_fu_561_p2;
reg   [31:0] tmp_1_1_reg_1527;
reg   [31:0] tmp_1_1_reg_1527_pp0_iter1_reg;
wire   [31:0] grp_fu_565_p2;
reg   [31:0] tmp_1_1_0_1_reg_1532;
reg   [31:0] tmp_1_1_0_1_reg_1532_pp0_iter1_reg;
reg   [31:0] tmp_1_1_0_1_reg_1532_pp0_iter2_reg;
wire   [31:0] tmp_11_fu_1071_p5;
wire   [31:0] tmp_12_fu_1083_p5;
wire   [31:0] grp_fu_569_p2;
reg   [31:0] tmp_1_2_reg_1547;
reg   [31:0] tmp_1_2_reg_1547_pp0_iter1_reg;
reg   [31:0] tmp_1_2_reg_1547_pp0_iter2_reg;
reg   [31:0] tmp_1_2_reg_1547_pp0_iter3_reg;
wire   [31:0] grp_fu_573_p2;
reg   [31:0] tmp_1_2_0_1_reg_1552;
reg   [31:0] tmp_1_2_0_1_reg_1552_pp0_iter1_reg;
reg   [31:0] tmp_1_2_0_1_reg_1552_pp0_iter2_reg;
reg   [31:0] tmp_1_2_0_1_reg_1552_pp0_iter3_reg;
reg   [31:0] tmp_1_2_0_1_reg_1552_pp0_iter4_reg;
wire   [31:0] tmp_17_fu_1095_p5;
wire   [31:0] tmp_18_fu_1107_p5;
wire   [1:0] f_fu_1119_p2;
reg   [1:0] f_reg_1567;
reg   [31:0] tmp_1_0_1_1_reg_1572;
wire   [31:0] tmp_7_fu_1124_p5;
wire   [31:0] tmp_8_fu_1136_p5;
reg   [31:0] tmp_1_1_1_reg_1587;
reg   [31:0] tmp_1_1_1_reg_1587_pp0_iter2_reg;
reg   [31:0] tmp_1_1_1_reg_1587_pp0_iter3_reg;
reg   [31:0] tmp_1_1_1_1_reg_1592;
reg   [31:0] tmp_1_1_1_1_reg_1592_pp0_iter2_reg;
reg   [31:0] tmp_1_1_1_1_reg_1592_pp0_iter3_reg;
wire   [31:0] tmp_13_fu_1148_p5;
wire   [31:0] tmp_14_fu_1160_p5;
reg   [31:0] tmp_1_2_1_reg_1607;
reg   [31:0] tmp_1_2_1_reg_1607_pp0_iter2_reg;
reg   [31:0] tmp_1_2_1_reg_1607_pp0_iter3_reg;
reg   [31:0] tmp_1_2_1_reg_1607_pp0_iter4_reg;
reg   [31:0] tmp_1_2_1_reg_1607_pp0_iter5_reg;
reg   [31:0] tmp_1_2_1_1_reg_1612;
reg   [31:0] tmp_1_2_1_1_reg_1612_pp0_iter2_reg;
reg   [31:0] tmp_1_2_1_1_reg_1612_pp0_iter3_reg;
reg   [31:0] tmp_1_2_1_1_reg_1612_pp0_iter4_reg;
reg   [31:0] tmp_1_2_1_1_reg_1612_pp0_iter5_reg;
wire   [31:0] tmp_19_fu_1172_p5;
wire   [31:0] tmp_20_fu_1184_p5;
reg   [31:0] tmp_1_0_2_reg_1627;
reg   [31:0] tmp_1_0_2_1_reg_1632;
reg   [31:0] tmp_1_1_2_reg_1637;
reg   [31:0] tmp_1_1_2_reg_1637_pp0_iter2_reg;
reg   [31:0] tmp_1_1_2_reg_1637_pp0_iter3_reg;
reg   [31:0] tmp_1_1_2_1_reg_1642;
reg   [31:0] tmp_1_1_2_1_reg_1642_pp0_iter2_reg;
reg   [31:0] tmp_1_1_2_1_reg_1642_pp0_iter3_reg;
reg   [31:0] tmp_1_2_2_reg_1647;
reg   [31:0] tmp_1_2_2_reg_1647_pp0_iter2_reg;
reg   [31:0] tmp_1_2_2_reg_1647_pp0_iter3_reg;
reg   [31:0] tmp_1_2_2_reg_1647_pp0_iter4_reg;
reg   [31:0] tmp_1_2_2_reg_1647_pp0_iter5_reg;
reg   [31:0] tmp_1_2_2_1_reg_1652;
reg   [31:0] tmp_1_2_2_1_reg_1652_pp0_iter2_reg;
reg   [31:0] tmp_1_2_2_1_reg_1652_pp0_iter3_reg;
reg   [31:0] tmp_1_2_2_1_reg_1652_pp0_iter4_reg;
reg   [31:0] tmp_1_2_2_1_reg_1652_pp0_iter5_reg;
wire   [31:0] tmp_21_fu_1196_p5;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage2_subdone;
reg    ap_enable_reg_pp0_iter7;
reg   [3:0] ap_phi_mux_indvar_flatten45_phi_fu_460_p4;
wire    ap_block_pp0_stage0;
reg   [1:0] ap_phi_mux_r_0_phi_fu_471_p4;
reg   [3:0] ap_phi_mux_indvar_flatten_phi_fu_482_p4;
reg   [1:0] ap_phi_mux_c_0_phi_fu_493_p4;
reg   [1:0] ap_phi_mux_f_0_phi_fu_504_p4;
wire   [63:0] zext_ln26_fu_801_p1;
wire   [63:0] zext_ln26_1_fu_823_p1;
wire   [63:0] zext_ln26_2_fu_908_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln26_3_fu_930_p1;
wire   [63:0] zext_ln26_4_fu_1017_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln26_5_fu_1039_p1;
wire   [63:0] zext_ln34_2_fu_1233_p1;
wire   [31:0] w_sum_1_fu_1281_p3;
reg   [31:0] grp_fu_511_p0;
reg   [31:0] grp_fu_511_p1;
reg   [31:0] grp_fu_517_p0;
reg   [31:0] grp_fu_517_p1;
reg   [31:0] grp_fu_523_p0;
reg   [31:0] grp_fu_523_p1;
reg   [31:0] grp_fu_529_p0;
reg   [31:0] grp_fu_529_p1;
reg   [31:0] grp_fu_535_p0;
reg   [31:0] grp_fu_535_p1;
reg   [31:0] grp_fu_541_p0;
reg   [31:0] grp_fu_541_p1;
reg   [31:0] grp_fu_552_p0;
wire   [31:0] grp_fu_552_p1;
reg   [31:0] grp_fu_557_p0;
wire   [31:0] grp_fu_557_p1;
reg   [31:0] grp_fu_561_p0;
wire   [31:0] grp_fu_561_p1;
reg   [31:0] grp_fu_565_p0;
wire   [31:0] grp_fu_565_p1;
reg   [31:0] grp_fu_569_p0;
wire   [31:0] grp_fu_569_p1;
reg   [31:0] grp_fu_573_p0;
wire   [31:0] grp_fu_573_p1;
wire   [31:0] grp_fu_547_p2;
wire   [0:0] icmp_ln11_fu_721_p2;
wire   [1:0] r_fu_715_p2;
wire   [0:0] icmp_ln14_fu_753_p2;
wire   [0:0] xor_ln26_fu_747_p2;
wire   [1:0] select_ln26_18_fu_727_p3;
wire   [0:0] and_ln26_fu_759_p2;
wire   [0:0] or_ln34_fu_771_p2;
wire   [1:0] add_ln26_fu_765_p2;
wire   [2:0] tmp_1_fu_793_p3;
wire   [2:0] or_ln26_3_fu_809_p2;
wire   [4:0] or_ln_fu_815_p3;
wire   [1:0] add_ln26_2_fu_837_p2;
wire   [1:0] xor_ln26_1_fu_831_p2;
wire   [1:0] select_ln26_20_fu_843_p3;
wire   [1:0] xor_ln26_2_fu_865_p2;
wire   [1:0] add_ln26_1_fu_859_p2;
wire   [1:0] select_ln26_21_fu_871_p3;
wire   [3:0] add_ln11_fu_887_p2;
wire   [2:0] tmp_2_fu_901_p3;
wire   [2:0] or_ln26_fu_916_p2;
wire   [4:0] or_ln26_1_fu_922_p3;
wire   [2:0] tmp_24_fu_1010_p3;
wire   [2:0] or_ln26_4_fu_1025_p2;
wire   [4:0] or_ln26_2_fu_1031_p3;
wire   [3:0] p_shl_cast_fu_1211_p3;
wire   [3:0] zext_ln34_fu_1208_p1;
wire   [3:0] zext_ln34_1_fu_1224_p1;
wire   [3:0] sub_ln34_fu_1218_p2;
wire   [3:0] add_ln34_fu_1227_p2;
wire   [31:0] bitcast_ln33_fu_1239_p1;
wire   [7:0] tmp_22_fu_1243_p4;
wire   [22:0] trunc_ln33_fu_1253_p1;
wire   [0:0] icmp_ln33_1_fu_1263_p2;
wire   [0:0] icmp_ln33_fu_1257_p2;
wire   [0:0] or_ln33_fu_1269_p2;
wire   [0:0] tmp_23_fu_577_p2;
wire   [0:0] and_ln33_fu_1275_p2;
wire    ap_block_pp0_stage0_00001;
wire    ap_CS_fsm_state24;
reg   [4:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
end

conv_1_fadd_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fadd_32ns_bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_511_p0),
    .din1(grp_fu_511_p1),
    .ce(1'b1),
    .dout(grp_fu_511_p2)
);

conv_1_fadd_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fadd_32ns_bkb_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_517_p0),
    .din1(grp_fu_517_p1),
    .ce(1'b1),
    .dout(grp_fu_517_p2)
);

conv_1_fadd_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fadd_32ns_bkb_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_523_p0),
    .din1(grp_fu_523_p1),
    .ce(1'b1),
    .dout(grp_fu_523_p2)
);

conv_1_fadd_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fadd_32ns_bkb_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_529_p0),
    .din1(grp_fu_529_p1),
    .ce(1'b1),
    .dout(grp_fu_529_p2)
);

conv_1_fadd_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fadd_32ns_bkb_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_535_p0),
    .din1(grp_fu_535_p1),
    .ce(1'b1),
    .dout(grp_fu_535_p2)
);

conv_1_fadd_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fadd_32ns_bkb_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_541_p0),
    .din1(grp_fu_541_p1),
    .ce(1'b1),
    .dout(grp_fu_541_p2)
);

conv_1_fadd_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fadd_32ns_bkb_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_541_p2),
    .din1(tmp_21_fu_1196_p5),
    .ce(1'b1),
    .dout(grp_fu_547_p2)
);

conv_1_fmul_32ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fmul_32ns_cud_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_552_p0),
    .din1(grp_fu_552_p1),
    .ce(1'b1),
    .dout(grp_fu_552_p2)
);

conv_1_fmul_32ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fmul_32ns_cud_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_557_p0),
    .din1(grp_fu_557_p1),
    .ce(1'b1),
    .dout(grp_fu_557_p2)
);

conv_1_fmul_32ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fmul_32ns_cud_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_561_p0),
    .din1(grp_fu_561_p1),
    .ce(1'b1),
    .dout(grp_fu_561_p2)
);

conv_1_fmul_32ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fmul_32ns_cud_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_565_p0),
    .din1(grp_fu_565_p1),
    .ce(1'b1),
    .dout(grp_fu_565_p2)
);

conv_1_fmul_32ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fmul_32ns_cud_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_569_p0),
    .din1(grp_fu_569_p1),
    .ce(1'b1),
    .dout(grp_fu_569_p2)
);

conv_1_fmul_32ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fmul_32ns_cud_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_573_p0),
    .din1(grp_fu_573_p1),
    .ce(1'b1),
    .dout(grp_fu_573_p2)
);

conv_1_fcmp_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
conv_1_fcmp_32ns_dEe_U14(
    .din0(grp_fu_547_p2),
    .din1(32'd0),
    .opcode(5'd2),
    .dout(tmp_23_fu_577_p2)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U15(
    .din0(32'd1043852296),
    .din1(32'd1046568084),
    .din2(32'd3196388545),
    .din3(select_ln34_reg_1315),
    .dout(tmp_fu_938_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U16(
    .din0(32'd1050880884),
    .din1(32'd1048093724),
    .din2(32'd1051100470),
    .din3(select_ln34_reg_1315),
    .dout(tmp_4_fu_950_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U17(
    .din0(32'd1047977692),
    .din1(32'd3198754716),
    .din2(32'd1036986252),
    .din3(select_ln34_reg_1315),
    .dout(tmp_9_fu_962_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U18(
    .din0(32'd3186943036),
    .din1(32'd3199065565),
    .din2(32'd3170323216),
    .din3(select_ln34_reg_1315),
    .dout(tmp_10_fu_974_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U19(
    .din0(32'd1050325564),
    .din1(32'd1048705882),
    .din2(32'd3195814188),
    .din3(select_ln34_reg_1315),
    .dout(tmp_15_fu_986_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U20(
    .din0(32'd1051545250),
    .din1(32'd1027976824),
    .din2(32'd3174496249),
    .din3(select_ln34_reg_1315),
    .dout(tmp_16_fu_998_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U21(
    .din0(32'd1039046344),
    .din1(32'd3192498945),
    .din2(32'd3198688346),
    .din3(select_ln34_reg_1315),
    .dout(tmp_5_fu_1047_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U22(
    .din0(32'd3185004896),
    .din1(32'd1047470304),
    .din2(32'd1040795234),
    .din3(select_ln34_reg_1315),
    .dout(tmp_6_fu_1059_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U23(
    .din0(32'd3192929656),
    .din1(32'd1049038478),
    .din2(32'd3197288499),
    .din3(select_ln34_reg_1315),
    .dout(tmp_11_fu_1071_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U24(
    .din0(32'd1044659888),
    .din1(32'd1051119700),
    .din2(32'd1023051471),
    .din3(select_ln34_reg_1315),
    .dout(tmp_12_fu_1083_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U25(
    .din0(32'd3173206433),
    .din1(32'd1046255380),
    .din2(32'd3189737214),
    .din3(select_ln34_reg_1315),
    .dout(tmp_17_fu_1095_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U26(
    .din0(32'd3182928271),
    .din1(32'd3175843873),
    .din2(32'd1044046656),
    .din3(select_ln34_reg_1315),
    .dout(tmp_18_fu_1107_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U27(
    .din0(32'd3187673822),
    .din1(32'd3189056028),
    .din2(32'd1052183334),
    .din3(select_ln34_reg_1315),
    .dout(tmp_7_fu_1124_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U28(
    .din0(32'd1017298384),
    .din1(32'd3187280772),
    .din2(32'd1043359760),
    .din3(select_ln34_reg_1315),
    .dout(tmp_8_fu_1136_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U29(
    .din0(32'd1052386068),
    .din1(32'd3192628231),
    .din2(32'd3199398709),
    .din3(select_ln34_reg_1315),
    .dout(tmp_13_fu_1148_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U30(
    .din0(32'd3185665976),
    .din1(32'd1045096592),
    .din2(32'd3171658927),
    .din3(select_ln34_reg_1315),
    .dout(tmp_14_fu_1160_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U31(
    .din0(32'd3190052988),
    .din1(32'd1048912004),
    .din2(32'd3186893421),
    .din3(select_ln34_reg_1315),
    .dout(tmp_19_fu_1172_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U32(
    .din0(32'd3197137310),
    .din1(32'd3199729609),
    .din2(32'd3193191623),
    .din3(select_ln34_reg_1315),
    .dout(tmp_20_fu_1184_p5)
);

conv_1_mux_32_32_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
conv_1_mux_32_32_eOg_U33(
    .din0(32'd1065353216),
    .din1(32'd1073741824),
    .din2(32'd1069547520),
    .din3(select_ln34_reg_1315_pp0_iter6_reg),
    .dout(tmp_21_fu_1196_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1291 == 1'd0))) begin
        c_0_reg_489 <= select_ln34_1_reg_1340;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        c_0_reg_489 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1291 == 1'd0))) begin
        f_0_reg_500 <= f_reg_1567;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        f_0_reg_500 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1291 == 1'd0))) begin
        indvar_flatten45_reg_456 <= add_ln8_reg_1295;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten45_reg_456 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1291 == 1'd0))) begin
        indvar_flatten_reg_478 <= select_ln11_reg_1397;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_478 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1291 == 1'd0))) begin
        r_0_reg_467 <= select_ln26_19_reg_1300;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_0_reg_467 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln8_reg_1295 <= add_ln8_fu_709_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_1291 == 1'd0))) begin
        f_reg_1567 <= f_fu_1119_p2;
        tmp_1_0_0_1_reg_1512 <= grp_fu_557_p2;
        tmp_1_1_0_1_reg_1532 <= grp_fu_565_p2;
        tmp_1_1_reg_1527 <= grp_fu_561_p2;
        tmp_1_2_0_1_reg_1552 <= grp_fu_573_p2;
        tmp_1_2_reg_1547 <= grp_fu_569_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln8_reg_1291 <= icmp_ln8_fu_703_p2;
        icmp_ln8_reg_1291_pp0_iter1_reg <= icmp_ln8_reg_1291;
        icmp_ln8_reg_1291_pp0_iter2_reg <= icmp_ln8_reg_1291_pp0_iter1_reg;
        icmp_ln8_reg_1291_pp0_iter3_reg <= icmp_ln8_reg_1291_pp0_iter2_reg;
        icmp_ln8_reg_1291_pp0_iter4_reg <= icmp_ln8_reg_1291_pp0_iter3_reg;
        icmp_ln8_reg_1291_pp0_iter5_reg <= icmp_ln8_reg_1291_pp0_iter4_reg;
        icmp_ln8_reg_1291_pp0_iter6_reg <= icmp_ln8_reg_1291_pp0_iter5_reg;
        select_ln34_1_reg_1340_pp0_iter1_reg <= select_ln34_1_reg_1340;
        select_ln34_1_reg_1340_pp0_iter2_reg <= select_ln34_1_reg_1340_pp0_iter1_reg;
        select_ln34_1_reg_1340_pp0_iter3_reg <= select_ln34_1_reg_1340_pp0_iter2_reg;
        select_ln34_1_reg_1340_pp0_iter4_reg <= select_ln34_1_reg_1340_pp0_iter3_reg;
        select_ln34_1_reg_1340_pp0_iter5_reg <= select_ln34_1_reg_1340_pp0_iter4_reg;
        select_ln34_1_reg_1340_pp0_iter6_reg <= select_ln34_1_reg_1340_pp0_iter5_reg;
        select_ln34_reg_1315_pp0_iter1_reg <= select_ln34_reg_1315;
        select_ln34_reg_1315_pp0_iter2_reg <= select_ln34_reg_1315_pp0_iter1_reg;
        select_ln34_reg_1315_pp0_iter3_reg <= select_ln34_reg_1315_pp0_iter2_reg;
        select_ln34_reg_1315_pp0_iter4_reg <= select_ln34_reg_1315_pp0_iter3_reg;
        select_ln34_reg_1315_pp0_iter5_reg <= select_ln34_reg_1315_pp0_iter4_reg;
        select_ln34_reg_1315_pp0_iter6_reg <= select_ln34_reg_1315_pp0_iter5_reg;
        tmp_1_1_1_1_reg_1592_pp0_iter2_reg <= tmp_1_1_1_1_reg_1592;
        tmp_1_1_1_1_reg_1592_pp0_iter3_reg <= tmp_1_1_1_1_reg_1592_pp0_iter2_reg;
        tmp_1_1_1_reg_1587_pp0_iter2_reg <= tmp_1_1_1_reg_1587;
        tmp_1_1_1_reg_1587_pp0_iter3_reg <= tmp_1_1_1_reg_1587_pp0_iter2_reg;
        tmp_1_2_1_1_reg_1612_pp0_iter2_reg <= tmp_1_2_1_1_reg_1612;
        tmp_1_2_1_1_reg_1612_pp0_iter3_reg <= tmp_1_2_1_1_reg_1612_pp0_iter2_reg;
        tmp_1_2_1_1_reg_1612_pp0_iter4_reg <= tmp_1_2_1_1_reg_1612_pp0_iter3_reg;
        tmp_1_2_1_1_reg_1612_pp0_iter5_reg <= tmp_1_2_1_1_reg_1612_pp0_iter4_reg;
        tmp_1_2_1_reg_1607_pp0_iter2_reg <= tmp_1_2_1_reg_1607;
        tmp_1_2_1_reg_1607_pp0_iter3_reg <= tmp_1_2_1_reg_1607_pp0_iter2_reg;
        tmp_1_2_1_reg_1607_pp0_iter4_reg <= tmp_1_2_1_reg_1607_pp0_iter3_reg;
        tmp_1_2_1_reg_1607_pp0_iter5_reg <= tmp_1_2_1_reg_1607_pp0_iter4_reg;
        trunc_ln26_reg_1305_pp0_iter1_reg <= trunc_ln26_reg_1305;
        trunc_ln26_reg_1305_pp0_iter2_reg <= trunc_ln26_reg_1305_pp0_iter1_reg;
        trunc_ln26_reg_1305_pp0_iter3_reg <= trunc_ln26_reg_1305_pp0_iter2_reg;
        trunc_ln26_reg_1305_pp0_iter4_reg <= trunc_ln26_reg_1305_pp0_iter3_reg;
        trunc_ln26_reg_1305_pp0_iter5_reg <= trunc_ln26_reg_1305_pp0_iter4_reg;
        trunc_ln26_reg_1305_pp0_iter6_reg <= trunc_ln26_reg_1305_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_1291 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1291 == 1'd0)))) begin
        reg_661 <= grp_fu_552_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_fu_703_p2 == 1'd0))) begin
        select_ln11_reg_1397 <= select_ln11_fu_893_p3;
        select_ln26_19_reg_1300 <= select_ln26_19_fu_735_p3;
        select_ln34_1_reg_1340 <= select_ln34_1_fu_785_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_fu_703_p2 == 1'd0))) begin
        select_ln34_2_reg_1387 <= select_ln34_2_fu_851_p3;
        select_ln34_3_reg_1392 <= select_ln34_3_fu_879_p3;
        select_ln34_reg_1315 <= select_ln34_fu_777_p3;
        trunc_ln26_reg_1305 <= trunc_ln26_fu_743_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1291 == 1'd0))) begin
        tmp_1_0_1_1_reg_1572 <= grp_fu_557_p2;
        tmp_1_1_1_1_reg_1592 <= grp_fu_565_p2;
        tmp_1_1_1_reg_1587 <= grp_fu_561_p2;
        tmp_1_2_1_1_reg_1612 <= grp_fu_573_p2;
        tmp_1_2_1_reg_1607 <= grp_fu_569_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln8_reg_1291_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_1_0_2_1_reg_1632 <= grp_fu_557_p2;
        tmp_1_0_2_reg_1627 <= grp_fu_552_p2;
        tmp_1_1_2_1_reg_1642 <= grp_fu_565_p2;
        tmp_1_1_2_reg_1637 <= grp_fu_561_p2;
        tmp_1_2_2_1_reg_1652 <= grp_fu_573_p2;
        tmp_1_2_2_reg_1647 <= grp_fu_569_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        tmp_1_1_0_1_reg_1532_pp0_iter1_reg <= tmp_1_1_0_1_reg_1532;
        tmp_1_1_0_1_reg_1532_pp0_iter2_reg <= tmp_1_1_0_1_reg_1532_pp0_iter1_reg;
        tmp_1_1_reg_1527_pp0_iter1_reg <= tmp_1_1_reg_1527;
        tmp_1_2_0_1_reg_1552_pp0_iter1_reg <= tmp_1_2_0_1_reg_1552;
        tmp_1_2_0_1_reg_1552_pp0_iter2_reg <= tmp_1_2_0_1_reg_1552_pp0_iter1_reg;
        tmp_1_2_0_1_reg_1552_pp0_iter3_reg <= tmp_1_2_0_1_reg_1552_pp0_iter2_reg;
        tmp_1_2_0_1_reg_1552_pp0_iter4_reg <= tmp_1_2_0_1_reg_1552_pp0_iter3_reg;
        tmp_1_2_reg_1547_pp0_iter1_reg <= tmp_1_2_reg_1547;
        tmp_1_2_reg_1547_pp0_iter2_reg <= tmp_1_2_reg_1547_pp0_iter1_reg;
        tmp_1_2_reg_1547_pp0_iter3_reg <= tmp_1_2_reg_1547_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_1_1_2_1_reg_1642_pp0_iter2_reg <= tmp_1_1_2_1_reg_1642;
        tmp_1_1_2_1_reg_1642_pp0_iter3_reg <= tmp_1_1_2_1_reg_1642_pp0_iter2_reg;
        tmp_1_1_2_reg_1637_pp0_iter2_reg <= tmp_1_1_2_reg_1637;
        tmp_1_1_2_reg_1637_pp0_iter3_reg <= tmp_1_1_2_reg_1637_pp0_iter2_reg;
        tmp_1_2_2_1_reg_1652_pp0_iter2_reg <= tmp_1_2_2_1_reg_1652;
        tmp_1_2_2_1_reg_1652_pp0_iter3_reg <= tmp_1_2_2_1_reg_1652_pp0_iter2_reg;
        tmp_1_2_2_1_reg_1652_pp0_iter4_reg <= tmp_1_2_2_1_reg_1652_pp0_iter3_reg;
        tmp_1_2_2_1_reg_1652_pp0_iter5_reg <= tmp_1_2_2_1_reg_1652_pp0_iter4_reg;
        tmp_1_2_2_reg_1647_pp0_iter2_reg <= tmp_1_2_2_reg_1647;
        tmp_1_2_2_reg_1647_pp0_iter3_reg <= tmp_1_2_2_reg_1647_pp0_iter2_reg;
        tmp_1_2_2_reg_1647_pp0_iter4_reg <= tmp_1_2_2_reg_1647_pp0_iter3_reg;
        tmp_1_2_2_reg_1647_pp0_iter5_reg <= tmp_1_2_2_reg_1647_pp0_iter4_reg;
    end
end

always @ (*) begin
    if ((icmp_ln8_fu_703_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1291 == 1'd0))) begin
        ap_phi_mux_c_0_phi_fu_493_p4 = select_ln34_1_reg_1340;
    end else begin
        ap_phi_mux_c_0_phi_fu_493_p4 = c_0_reg_489;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1291 == 1'd0))) begin
        ap_phi_mux_f_0_phi_fu_504_p4 = f_reg_1567;
    end else begin
        ap_phi_mux_f_0_phi_fu_504_p4 = f_0_reg_500;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1291 == 1'd0))) begin
        ap_phi_mux_indvar_flatten45_phi_fu_460_p4 = add_ln8_reg_1295;
    end else begin
        ap_phi_mux_indvar_flatten45_phi_fu_460_p4 = indvar_flatten45_reg_456;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1291 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_482_p4 = select_ln11_reg_1397;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_482_p4 = indvar_flatten_reg_478;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1291 == 1'd0))) begin
        ap_phi_mux_r_0_phi_fu_471_p4 = select_ln26_19_reg_1300;
    end else begin
        ap_phi_mux_r_0_phi_fu_471_p4 = r_0_reg_467;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_out_0_ce0 = 1'b1;
    end else begin
        conv_out_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln26_reg_1305_pp0_iter6_reg == 1'd0))) begin
        conv_out_0_we0 = 1'b1;
    end else begin
        conv_out_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_out_1_ce0 = 1'b1;
    end else begin
        conv_out_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_reg_1305_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_out_1_we0 = 1'b1;
    end else begin
        conv_out_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_511_p0 = grp_fu_511_p2;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_511_p0 = grp_fu_552_p2;
    end else begin
        grp_fu_511_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_511_p1 = reg_661;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_511_p1 = tmp_1_0_0_1_reg_1512;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_511_p1 = 32'd0;
    end else begin
        grp_fu_511_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_517_p0 = grp_fu_517_p2;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_517_p0 = grp_fu_511_p2;
    end else begin
        grp_fu_517_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_517_p1 = tmp_1_0_2_1_reg_1632;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_517_p1 = tmp_1_0_2_reg_1627;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_517_p1 = tmp_1_0_1_1_reg_1572;
    end else begin
        grp_fu_517_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_523_p0 = grp_fu_523_p2;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_523_p0 = grp_fu_517_p2;
    end else begin
        grp_fu_523_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_fu_523_p1 = tmp_1_1_1_reg_1587_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_523_p1 = tmp_1_1_0_1_reg_1532_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_523_p1 = tmp_1_1_reg_1527_pp0_iter1_reg;
    end else begin
        grp_fu_523_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_529_p0 = grp_fu_529_p2;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_529_p0 = grp_fu_523_p2;
    end else begin
        grp_fu_529_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        grp_fu_529_p1 = tmp_1_1_2_1_reg_1642_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_529_p1 = tmp_1_1_2_reg_1637_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_529_p1 = tmp_1_1_1_1_reg_1592_pp0_iter3_reg;
    end else begin
        grp_fu_529_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_535_p0 = grp_fu_535_p2;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_535_p0 = grp_fu_529_p2;
    end else begin
        grp_fu_535_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        grp_fu_535_p1 = tmp_1_2_1_reg_1607_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_535_p1 = tmp_1_2_0_1_reg_1552_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_535_p1 = tmp_1_2_reg_1547_pp0_iter3_reg;
    end else begin
        grp_fu_535_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_541_p0 = grp_fu_541_p2;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_541_p0 = grp_fu_535_p2;
    end else begin
        grp_fu_541_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        grp_fu_541_p1 = tmp_1_2_2_1_reg_1652_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_541_p1 = tmp_1_2_2_reg_1647_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_541_p1 = tmp_1_2_1_1_reg_1612_pp0_iter5_reg;
    end else begin
        grp_fu_541_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_552_p0 = tmp_7_fu_1124_p5;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_552_p0 = tmp_5_fu_1047_p5;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_552_p0 = tmp_fu_938_p5;
    end else begin
        grp_fu_552_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_557_p0 = tmp_8_fu_1136_p5;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_557_p0 = tmp_6_fu_1059_p5;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_557_p0 = tmp_4_fu_950_p5;
    end else begin
        grp_fu_557_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_561_p0 = tmp_13_fu_1148_p5;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_561_p0 = tmp_11_fu_1071_p5;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_561_p0 = tmp_9_fu_962_p5;
    end else begin
        grp_fu_561_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_565_p0 = tmp_14_fu_1160_p5;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_565_p0 = tmp_12_fu_1083_p5;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_565_p0 = tmp_10_fu_974_p5;
    end else begin
        grp_fu_565_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_569_p0 = tmp_19_fu_1172_p5;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_569_p0 = tmp_17_fu_1095_p5;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_569_p0 = tmp_15_fu_986_p5;
    end else begin
        grp_fu_569_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_573_p0 = tmp_20_fu_1184_p5;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_573_p0 = tmp_18_fu_1107_p5;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_573_p0 = tmp_16_fu_998_p5;
    end else begin
        grp_fu_573_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_0_address0 = zext_ln26_4_fu_1017_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_0_address0 = zext_ln26_2_fu_908_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_0_address0 = zext_ln26_fu_801_p1;
        end else begin
            input_0_address0 = 'bx;
        end
    end else begin
        input_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_0_address1 = zext_ln26_5_fu_1039_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_0_address1 = zext_ln26_3_fu_930_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_0_address1 = zext_ln26_1_fu_823_p1;
        end else begin
            input_0_address1 = 'bx;
        end
    end else begin
        input_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        input_0_ce0 = 1'b1;
    end else begin
        input_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        input_0_ce1 = 1'b1;
    end else begin
        input_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_1_address0 = zext_ln26_4_fu_1017_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_1_address0 = zext_ln26_2_fu_908_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_1_address0 = zext_ln26_fu_801_p1;
        end else begin
            input_1_address0 = 'bx;
        end
    end else begin
        input_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_1_address1 = zext_ln26_5_fu_1039_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_1_address1 = zext_ln26_3_fu_930_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_1_address1 = zext_ln26_1_fu_823_p1;
        end else begin
            input_1_address1 = 'bx;
        end
    end else begin
        input_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        input_1_ce0 = 1'b1;
    end else begin
        input_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        input_1_ce1 = 1'b1;
    end else begin
        input_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_2_address0 = zext_ln26_4_fu_1017_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_2_address0 = zext_ln26_2_fu_908_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_2_address0 = zext_ln26_fu_801_p1;
        end else begin
            input_2_address0 = 'bx;
        end
    end else begin
        input_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_2_address1 = zext_ln26_5_fu_1039_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_2_address1 = zext_ln26_3_fu_930_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_2_address1 = zext_ln26_1_fu_823_p1;
        end else begin
            input_2_address1 = 'bx;
        end
    end else begin
        input_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        input_2_ce0 = 1'b1;
    end else begin
        input_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        input_2_ce1 = 1'b1;
    end else begin
        input_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_3_address0 = zext_ln26_4_fu_1017_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_3_address0 = zext_ln26_2_fu_908_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_3_address0 = zext_ln26_fu_801_p1;
        end else begin
            input_3_address0 = 'bx;
        end
    end else begin
        input_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_3_address1 = zext_ln26_5_fu_1039_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_3_address1 = zext_ln26_3_fu_930_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_3_address1 = zext_ln26_1_fu_823_p1;
        end else begin
            input_3_address1 = 'bx;
        end
    end else begin
        input_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        input_3_ce0 = 1'b1;
    end else begin
        input_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        input_3_ce1 = 1'b1;
    end else begin
        input_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln8_fu_703_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln8_fu_703_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln11_fu_887_p2 = (ap_phi_mux_indvar_flatten_phi_fu_482_p4 + 4'd1);

assign add_ln26_1_fu_859_p2 = ($signed(2'd3) + $signed(select_ln26_18_fu_727_p3));

assign add_ln26_2_fu_837_p2 = (2'd1 + ap_phi_mux_c_0_phi_fu_493_p4);

assign add_ln26_fu_765_p2 = (2'd1 + select_ln26_18_fu_727_p3);

assign add_ln34_fu_1227_p2 = (zext_ln34_1_fu_1224_p1 + sub_ln34_fu_1218_p2);

assign add_ln8_fu_709_p2 = (ap_phi_mux_indvar_flatten45_phi_fu_460_p4 + 4'd1);

assign and_ln26_fu_759_p2 = (xor_ln26_fu_747_p2 & icmp_ln14_fu_753_p2);

assign and_ln33_fu_1275_p2 = (tmp_23_fu_577_p2 & or_ln33_fu_1269_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln33_fu_1239_p1 = grp_fu_547_p2;

assign conv_out_0_address0 = zext_ln34_2_fu_1233_p1;

assign conv_out_0_d0 = w_sum_1_fu_1281_p3;

assign conv_out_1_address0 = zext_ln34_2_fu_1233_p1;

assign conv_out_1_d0 = w_sum_1_fu_1281_p3;

assign f_fu_1119_p2 = (select_ln34_reg_1315 + 2'd1);

assign grp_fu_552_p1 = ((trunc_ln26_reg_1305[0:0] === 1'b1) ? input_1_q0 : input_0_q0);

assign grp_fu_557_p1 = ((trunc_ln26_reg_1305[0:0] === 1'b1) ? input_1_q1 : input_0_q1);

assign grp_fu_561_p1 = ((trunc_ln26_reg_1305[0:0] === 1'b1) ? input_2_q0 : input_1_q0);

assign grp_fu_565_p1 = ((trunc_ln26_reg_1305[0:0] === 1'b1) ? input_2_q1 : input_1_q1);

assign grp_fu_569_p1 = ((trunc_ln26_reg_1305[0:0] === 1'b1) ? input_3_q0 : input_2_q0);

assign grp_fu_573_p1 = ((trunc_ln26_reg_1305[0:0] === 1'b1) ? input_3_q1 : input_2_q1);

assign icmp_ln11_fu_721_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_482_p4 == 4'd6) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_753_p2 = ((ap_phi_mux_f_0_phi_fu_504_p4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln33_1_fu_1263_p2 = ((trunc_ln33_fu_1253_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_1257_p2 = ((tmp_22_fu_1243_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_703_p2 = ((ap_phi_mux_indvar_flatten45_phi_fu_460_p4 == 4'd12) ? 1'b1 : 1'b0);

assign or_ln26_1_fu_922_p3 = {{2'd0}, {or_ln26_fu_916_p2}};

assign or_ln26_2_fu_1031_p3 = {{2'd0}, {or_ln26_4_fu_1025_p2}};

assign or_ln26_3_fu_809_p2 = (tmp_1_fu_793_p3 | 3'd1);

assign or_ln26_4_fu_1025_p2 = (tmp_24_fu_1010_p3 | 3'd1);

assign or_ln26_fu_916_p2 = (tmp_2_fu_901_p3 | 3'd1);

assign or_ln33_fu_1269_p2 = (icmp_ln33_fu_1257_p2 | icmp_ln33_1_fu_1263_p2);

assign or_ln34_fu_771_p2 = (icmp_ln11_fu_721_p2 | and_ln26_fu_759_p2);

assign or_ln_fu_815_p3 = {{2'd0}, {or_ln26_3_fu_809_p2}};

assign p_shl_cast_fu_1211_p3 = {{select_ln34_1_reg_1340_pp0_iter6_reg}, {2'd0}};

assign r_fu_715_p2 = (2'd1 + ap_phi_mux_r_0_phi_fu_471_p4);

assign select_ln11_fu_893_p3 = ((icmp_ln11_fu_721_p2[0:0] === 1'b1) ? 4'd1 : add_ln11_fu_887_p2);

assign select_ln26_18_fu_727_p3 = ((icmp_ln11_fu_721_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_c_0_phi_fu_493_p4);

assign select_ln26_19_fu_735_p3 = ((icmp_ln11_fu_721_p2[0:0] === 1'b1) ? r_fu_715_p2 : ap_phi_mux_r_0_phi_fu_471_p4);

assign select_ln26_20_fu_843_p3 = ((icmp_ln11_fu_721_p2[0:0] === 1'b1) ? 2'd1 : add_ln26_2_fu_837_p2);

assign select_ln26_21_fu_871_p3 = ((icmp_ln11_fu_721_p2[0:0] === 1'b1) ? 2'd2 : xor_ln26_2_fu_865_p2);

assign select_ln34_1_fu_785_p3 = ((and_ln26_fu_759_p2[0:0] === 1'b1) ? add_ln26_fu_765_p2 : select_ln26_18_fu_727_p3);

assign select_ln34_2_fu_851_p3 = ((and_ln26_fu_759_p2[0:0] === 1'b1) ? xor_ln26_1_fu_831_p2 : select_ln26_20_fu_843_p3);

assign select_ln34_3_fu_879_p3 = ((and_ln26_fu_759_p2[0:0] === 1'b1) ? add_ln26_1_fu_859_p2 : select_ln26_21_fu_871_p3);

assign select_ln34_fu_777_p3 = ((or_ln34_fu_771_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_f_0_phi_fu_504_p4);

assign sub_ln34_fu_1218_p2 = (p_shl_cast_fu_1211_p3 - zext_ln34_fu_1208_p1);

assign tmp_1_fu_793_p3 = {{select_ln34_1_fu_785_p3}, {1'd0}};

assign tmp_22_fu_1243_p4 = {{bitcast_ln33_fu_1239_p1[30:23]}};

assign tmp_24_fu_1010_p3 = {{select_ln34_3_reg_1392}, {1'd0}};

assign tmp_2_fu_901_p3 = {{select_ln34_2_reg_1387}, {1'd0}};

assign trunc_ln26_fu_743_p1 = select_ln26_19_fu_735_p3[0:0];

assign trunc_ln33_fu_1253_p1 = bitcast_ln33_fu_1239_p1[22:0];

assign w_sum_1_fu_1281_p3 = ((and_ln33_fu_1275_p2[0:0] === 1'b1) ? grp_fu_547_p2 : 32'd0);

assign xor_ln26_1_fu_831_p2 = (select_ln26_18_fu_727_p3 ^ 2'd2);

assign xor_ln26_2_fu_865_p2 = (ap_phi_mux_c_0_phi_fu_493_p4 ^ 2'd2);

assign xor_ln26_fu_747_p2 = (icmp_ln11_fu_721_p2 ^ 1'd1);

assign zext_ln26_1_fu_823_p1 = or_ln_fu_815_p3;

assign zext_ln26_2_fu_908_p1 = tmp_2_fu_901_p3;

assign zext_ln26_3_fu_930_p1 = or_ln26_1_fu_922_p3;

assign zext_ln26_4_fu_1017_p1 = tmp_24_fu_1010_p3;

assign zext_ln26_5_fu_1039_p1 = or_ln26_2_fu_1031_p3;

assign zext_ln26_fu_801_p1 = tmp_1_fu_793_p3;

assign zext_ln34_1_fu_1224_p1 = select_ln34_reg_1315_pp0_iter6_reg;

assign zext_ln34_2_fu_1233_p1 = add_ln34_fu_1227_p2;

assign zext_ln34_fu_1208_p1 = select_ln34_1_reg_1340_pp0_iter6_reg;

endmodule //conv_1
