// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dense.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dense::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dense::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<23> dense::ap_ST_fsm_state1 = "1";
const sc_lv<23> dense::ap_ST_fsm_state2 = "10";
const sc_lv<23> dense::ap_ST_fsm_state3 = "100";
const sc_lv<23> dense::ap_ST_fsm_state4 = "1000";
const sc_lv<23> dense::ap_ST_fsm_state5 = "10000";
const sc_lv<23> dense::ap_ST_fsm_state6 = "100000";
const sc_lv<23> dense::ap_ST_fsm_state7 = "1000000";
const sc_lv<23> dense::ap_ST_fsm_state8 = "10000000";
const sc_lv<23> dense::ap_ST_fsm_state9 = "100000000";
const sc_lv<23> dense::ap_ST_fsm_state10 = "1000000000";
const sc_lv<23> dense::ap_ST_fsm_state11 = "10000000000";
const sc_lv<23> dense::ap_ST_fsm_state12 = "100000000000";
const sc_lv<23> dense::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<23> dense::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<23> dense::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<23> dense::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<23> dense::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<23> dense::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<23> dense::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<23> dense::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<23> dense::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<23> dense::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<23> dense::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<32> dense::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dense::ap_const_lv32_3 = "11";
const sc_lv<32> dense::ap_const_lv32_4 = "100";
const sc_lv<32> dense::ap_const_lv32_5 = "101";
const sc_lv<32> dense::ap_const_lv32_6 = "110";
const sc_lv<32> dense::ap_const_lv32_7 = "111";
const sc_lv<32> dense::ap_const_lv32_8 = "1000";
const sc_lv<32> dense::ap_const_lv32_9 = "1001";
const sc_lv<32> dense::ap_const_lv32_A = "1010";
const sc_lv<32> dense::ap_const_lv32_F = "1111";
const sc_lv<32> dense::ap_const_lv32_10 = "10000";
const sc_lv<32> dense::ap_const_lv32_11 = "10001";
const sc_lv<32> dense::ap_const_lv32_1 = "1";
const sc_lv<1> dense::ap_const_lv1_1 = "1";
const sc_lv<32> dense::ap_const_lv32_2 = "10";
const sc_lv<1> dense::ap_const_lv1_0 = "0";
const sc_lv<32> dense::ap_const_lv32_C = "1100";
const sc_lv<32> dense::ap_const_lv32_D = "1101";
const sc_lv<32> dense::ap_const_lv32_E = "1110";
const sc_lv<2> dense::ap_const_lv2_0 = "00";
const sc_lv<32> dense::ap_const_lv32_B = "1011";
const sc_lv<2> dense::ap_const_lv2_1 = "1";
const sc_lv<32> dense::ap_const_lv32_16 = "10110";
const sc_lv<32> dense::ap_const_lv32_12 = "10010";
const sc_lv<2> dense::ap_const_lv2_2 = "10";
const sc_lv<2> dense::ap_const_lv2_3 = "11";
const sc_lv<32> dense::ap_const_lv32_3F51D31D = "111111010100011101001100011101";
const sc_lv<32> dense::ap_const_lv32_BE89F10E = "10111110100010011111000100001110";
const sc_lv<32> dense::ap_const_lv32_3E846572 = "111110100001000110010101110010";
const sc_lv<32> dense::ap_const_lv32_BC4063BE = "10111100010000000110001110111110";
const sc_lv<32> dense::ap_const_lv32_BF3E370A = "10111111001111100011011100001010";
const sc_lv<32> dense::ap_const_lv32_BF4F13EE = "10111111010011110001001111101110";
const sc_lv<32> dense::ap_const_lv32_3F4D9893 = "111111010011011001100010010011";
const sc_lv<32> dense::ap_const_lv32_3D1C62CF = "111101000111000110001011001111";
const sc_lv<32> dense::ap_const_lv32_3F57E873 = "111111010101111110100001110011";
const sc_lv<32> dense::ap_const_lv32_BEE50E1E = "10111110111001010000111000011110";
const sc_lv<32> dense::ap_const_lv32_3ED7D03A = "111110110101111101000000111010";
const sc_lv<32> dense::ap_const_lv32_BEF0CFC6 = "10111110111100001100111111000110";
const sc_lv<32> dense::ap_const_lv32_3E267CA4 = "111110001001100111110010100100";
const sc_lv<32> dense::ap_const_lv32_BF2E109B = "10111111001011100001000010011011";
const sc_lv<32> dense::ap_const_lv32_BF189A92 = "10111111000110001001101010010010";
const sc_lv<32> dense::ap_const_lv32_BE94B39A = "10111110100101001011001110011010";
const sc_lv<32> dense::ap_const_lv32_BC7F8EA1 = "10111100011111111000111010100001";
const sc_lv<32> dense::ap_const_lv32_BE37171D = "10111110001101110001011100011101";
const bool dense::ap_const_boolean_1 = true;

dense::dense(sc_module_name name) : sc_module(name), mVcdFile(0) {
    dense_fadd_32ns_3bkb_U1 = new dense_fadd_32ns_3bkb<1,2,32,32,32>("dense_fadd_32ns_3bkb_U1");
    dense_fadd_32ns_3bkb_U1->clk(ap_clk);
    dense_fadd_32ns_3bkb_U1->reset(ap_rst);
    dense_fadd_32ns_3bkb_U1->din0(grp_fu_210_p0);
    dense_fadd_32ns_3bkb_U1->din1(grp_fu_210_p1);
    dense_fadd_32ns_3bkb_U1->ce(ap_var_for_const0);
    dense_fadd_32ns_3bkb_U1->dout(grp_fu_210_p2);
    dense_fmul_32ns_3cud_U2 = new dense_fmul_32ns_3cud<1,2,32,32,32>("dense_fmul_32ns_3cud_U2");
    dense_fmul_32ns_3cud_U2->clk(ap_clk);
    dense_fmul_32ns_3cud_U2->reset(ap_rst);
    dense_fmul_32ns_3cud_U2->din0(grp_fu_216_p0);
    dense_fmul_32ns_3cud_U2->din1(grp_fu_216_p1);
    dense_fmul_32ns_3cud_U2->ce(ap_var_for_const0);
    dense_fmul_32ns_3cud_U2->dout(grp_fu_216_p2);
    dense_fmul_32ns_3cud_U3 = new dense_fmul_32ns_3cud<1,2,32,32,32>("dense_fmul_32ns_3cud_U3");
    dense_fmul_32ns_3cud_U3->clk(ap_clk);
    dense_fmul_32ns_3cud_U3->reset(ap_rst);
    dense_fmul_32ns_3cud_U3->din0(grp_fu_222_p0);
    dense_fmul_32ns_3cud_U3->din1(grp_fu_222_p1);
    dense_fmul_32ns_3cud_U3->ce(ap_var_for_const0);
    dense_fmul_32ns_3cud_U3->dout(grp_fu_222_p2);
    dense_fdiv_32ns_3dEe_U4 = new dense_fdiv_32ns_3dEe<1,5,32,32,32>("dense_fdiv_32ns_3dEe_U4");
    dense_fdiv_32ns_3dEe_U4->clk(ap_clk);
    dense_fdiv_32ns_3dEe_U4->reset(ap_rst);
    dense_fdiv_32ns_3dEe_U4->din0(tmp_i_reg_634);
    dense_fdiv_32ns_3dEe_U4->din1(reg_252);
    dense_fdiv_32ns_3dEe_U4->ce(ap_var_for_const0);
    dense_fdiv_32ns_3dEe_U4->dout(grp_fu_226_p2);
    dense_fdiv_32ns_3dEe_U5 = new dense_fdiv_32ns_3dEe<1,5,32,32,32>("dense_fdiv_32ns_3dEe_U5");
    dense_fdiv_32ns_3dEe_U5->clk(ap_clk);
    dense_fdiv_32ns_3dEe_U5->reset(ap_rst);
    dense_fdiv_32ns_3dEe_U5->din0(tmp_1_i_reg_640);
    dense_fdiv_32ns_3dEe_U5->din1(reg_252);
    dense_fdiv_32ns_3dEe_U5->ce(ap_var_for_const0);
    dense_fdiv_32ns_3dEe_U5->dout(grp_fu_231_p2);
    dense_fdiv_32ns_3dEe_U6 = new dense_fdiv_32ns_3dEe<1,5,32,32,32>("dense_fdiv_32ns_3dEe_U6");
    dense_fdiv_32ns_3dEe_U6->clk(ap_clk);
    dense_fdiv_32ns_3dEe_U6->reset(ap_rst);
    dense_fdiv_32ns_3dEe_U6->din0(tmp_i_4_reg_646);
    dense_fdiv_32ns_3dEe_U6->din1(reg_252);
    dense_fdiv_32ns_3dEe_U6->ce(ap_var_for_const0);
    dense_fdiv_32ns_3dEe_U6->dout(grp_fu_236_p2);
    dense_fexp_32ns_3eOg_U7 = new dense_fexp_32ns_3eOg<1,3,32,32,32>("dense_fexp_32ns_3eOg_U7");
    dense_fexp_32ns_3eOg_U7->clk(ap_clk);
    dense_fexp_32ns_3eOg_U7->reset(ap_rst);
    dense_fexp_32ns_3eOg_U7->din0(ap_var_for_const1);
    dense_fexp_32ns_3eOg_U7->din1(grp_fu_241_p1);
    dense_fexp_32ns_3eOg_U7->ce(ap_var_for_const0);
    dense_fexp_32ns_3eOg_U7->dout(grp_fu_241_p2);
    dense_mux_32_32_1_1_U8 = new dense_mux_32_32_1_1<1,1,32,32,32,2,32>("dense_mux_32_32_1_1_U8");
    dense_mux_32_32_1_1_U8->din0(ap_var_for_const2);
    dense_mux_32_32_1_1_U8->din1(ap_var_for_const3);
    dense_mux_32_32_1_1_U8->din2(ap_var_for_const4);
    dense_mux_32_32_1_1_U8->din3(d_0_reg_198);
    dense_mux_32_32_1_1_U8->dout(tmp_fu_375_p5);
    dense_mux_32_32_1_1_U9 = new dense_mux_32_32_1_1<1,1,32,32,32,2,32>("dense_mux_32_32_1_1_U9");
    dense_mux_32_32_1_1_U9->din0(ap_var_for_const5);
    dense_mux_32_32_1_1_U9->din1(ap_var_for_const6);
    dense_mux_32_32_1_1_U9->din2(ap_var_for_const7);
    dense_mux_32_32_1_1_U9->din3(d_0_reg_198);
    dense_mux_32_32_1_1_U9->dout(tmp_8_fu_392_p5);
    dense_mux_32_32_1_1_U10 = new dense_mux_32_32_1_1<1,1,32,32,32,2,32>("dense_mux_32_32_1_1_U10");
    dense_mux_32_32_1_1_U10->din0(ap_var_for_const8);
    dense_mux_32_32_1_1_U10->din1(ap_var_for_const9);
    dense_mux_32_32_1_1_U10->din2(ap_var_for_const10);
    dense_mux_32_32_1_1_U10->din3(d_0_reg_198);
    dense_mux_32_32_1_1_U10->dout(tmp_9_fu_405_p5);
    dense_mux_32_32_1_1_U11 = new dense_mux_32_32_1_1<1,1,32,32,32,2,32>("dense_mux_32_32_1_1_U11");
    dense_mux_32_32_1_1_U11->din0(ap_var_for_const11);
    dense_mux_32_32_1_1_U11->din1(ap_var_for_const12);
    dense_mux_32_32_1_1_U11->din2(ap_var_for_const13);
    dense_mux_32_32_1_1_U11->din3(d_0_reg_198);
    dense_mux_32_32_1_1_U11->dout(tmp_s_fu_418_p5);
    dense_mux_32_32_1_1_U12 = new dense_mux_32_32_1_1<1,1,32,32,32,2,32>("dense_mux_32_32_1_1_U12");
    dense_mux_32_32_1_1_U12->din0(ap_var_for_const14);
    dense_mux_32_32_1_1_U12->din1(ap_var_for_const15);
    dense_mux_32_32_1_1_U12->din2(ap_var_for_const16);
    dense_mux_32_32_1_1_U12->din3(d_0_reg_198);
    dense_mux_32_32_1_1_U12->dout(tmp_10_fu_431_p5);
    dense_mux_32_32_1_1_U13 = new dense_mux_32_32_1_1<1,1,32,32,32,2,32>("dense_mux_32_32_1_1_U13");
    dense_mux_32_32_1_1_U13->din0(ap_var_for_const17);
    dense_mux_32_32_1_1_U13->din1(ap_var_for_const18);
    dense_mux_32_32_1_1_U13->din2(ap_var_for_const19);
    dense_mux_32_32_1_1_U13->din3(d_0_reg_198);
    dense_mux_32_32_1_1_U13->dout(tmp_11_fu_445_p5);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln26_fu_269_p2);
    sensitive << ( phi_ln26_reg_187 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_d_fu_369_p2);
    sensitive << ( d_0_reg_198 );

    SC_METHOD(thread_dense_array_0_1_fu_295_p3);
    sensitive << ( dense_array_0_0_fu_94 );
    sensitive << ( icmp_ln26_2_fu_289_p2 );
    sensitive << ( select_ln26_fu_281_p3 );

    SC_METHOD(thread_dense_array_1_1_fu_303_p3);
    sensitive << ( dense_array_1_0_fu_98 );
    sensitive << ( icmp_ln26_2_fu_289_p2 );

    SC_METHOD(thread_dense_array_2_1_fu_319_p3);
    sensitive << ( dense_array_2_0_fu_102 );
    sensitive << ( icmp_ln26_2_fu_289_p2 );
    sensitive << ( select_ln26_1_fu_311_p3 );

    SC_METHOD(thread_grp_fu_210_p0);
    sensitive << ( grp_fu_216_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_fu_210_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_i_reg_634 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_grp_fu_210_p1);
    sensitive << ( grp_fu_216_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_6_reg_614 );
    sensitive << ( tmp_7_reg_619 );
    sensitive << ( tmp_1_i_reg_640 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_i_4_reg_646 );

    SC_METHOD(thread_grp_fu_216_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_fu_375_p5 );
    sensitive << ( tmp_8_fu_392_p5 );
    sensitive << ( tmp_9_fu_405_p5 );
    sensitive << ( tmp_s_fu_418_p5 );
    sensitive << ( tmp_10_fu_431_p5 );
    sensitive << ( tmp_11_fu_445_p5 );

    SC_METHOD(thread_grp_fu_216_p1);
    sensitive << ( flat_array_0 );
    sensitive << ( flat_array_1 );
    sensitive << ( flat_array_2 );
    sensitive << ( flat_array_3 );
    sensitive << ( flat_array_4 );
    sensitive << ( flat_array_5 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_fu_222_p0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_10_fu_431_p5 );
    sensitive << ( tmp_11_fu_445_p5 );

    SC_METHOD(thread_grp_fu_222_p1);
    sensitive << ( flat_array_6 );
    sensitive << ( flat_array_7 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_grp_fu_241_p1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( dense_array_0_read_s_fu_106 );
    sensitive << ( dense_array_1_read_s_fu_110 );
    sensitive << ( dense_array_2_read_s_fu_114 );

    SC_METHOD(thread_icmp_ln26_1_fu_275_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( phi_ln26_reg_187 );

    SC_METHOD(thread_icmp_ln26_2_fu_289_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( phi_ln26_reg_187 );

    SC_METHOD(thread_icmp_ln26_fu_327_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( phi_ln26_reg_187 );

    SC_METHOD(thread_icmp_ln29_fu_363_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( d_0_reg_198 );

    SC_METHOD(thread_prediction_0);
    sensitive << ( grp_fu_226_p2 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_prediction_0_ap_vld);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_prediction_1);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( grp_fu_231_p2 );

    SC_METHOD(thread_prediction_1_ap_vld);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_prediction_2);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( grp_fu_236_p2 );

    SC_METHOD(thread_prediction_2_ap_vld);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_select_ln26_1_fu_311_p3);
    sensitive << ( dense_array_2_0_fu_102 );
    sensitive << ( icmp_ln26_1_fu_275_p2 );

    SC_METHOD(thread_select_ln26_fu_281_p3);
    sensitive << ( dense_array_0_0_fu_94 );
    sensitive << ( icmp_ln26_1_fu_275_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln26_fu_327_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln29_fu_363_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const8);

    SC_THREAD(thread_ap_var_for_const9);

    SC_THREAD(thread_ap_var_for_const10);

    SC_THREAD(thread_ap_var_for_const11);

    SC_THREAD(thread_ap_var_for_const12);

    SC_THREAD(thread_ap_var_for_const13);

    SC_THREAD(thread_ap_var_for_const14);

    SC_THREAD(thread_ap_var_for_const15);

    SC_THREAD(thread_ap_var_for_const16);

    SC_THREAD(thread_ap_var_for_const17);

    SC_THREAD(thread_ap_var_for_const18);

    SC_THREAD(thread_ap_var_for_const19);

    ap_CS_fsm = "00000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dense_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, flat_array_0, "(port)flat_array_0");
    sc_trace(mVcdFile, flat_array_1, "(port)flat_array_1");
    sc_trace(mVcdFile, flat_array_2, "(port)flat_array_2");
    sc_trace(mVcdFile, flat_array_3, "(port)flat_array_3");
    sc_trace(mVcdFile, flat_array_4, "(port)flat_array_4");
    sc_trace(mVcdFile, flat_array_5, "(port)flat_array_5");
    sc_trace(mVcdFile, flat_array_6, "(port)flat_array_6");
    sc_trace(mVcdFile, flat_array_7, "(port)flat_array_7");
    sc_trace(mVcdFile, prediction_0, "(port)prediction_0");
    sc_trace(mVcdFile, prediction_0_ap_vld, "(port)prediction_0_ap_vld");
    sc_trace(mVcdFile, prediction_1, "(port)prediction_1");
    sc_trace(mVcdFile, prediction_1_ap_vld, "(port)prediction_1_ap_vld");
    sc_trace(mVcdFile, prediction_2, "(port)prediction_2");
    sc_trace(mVcdFile, prediction_2_ap_vld, "(port)prediction_2_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_fu_216_p2, "grp_fu_216_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, grp_fu_210_p2, "grp_fu_210_p2");
    sc_trace(mVcdFile, reg_252, "reg_252");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, add_ln26_fu_269_p2, "add_ln26_fu_269_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln26_fu_327_p2, "icmp_ln26_fu_327_p2");
    sc_trace(mVcdFile, d_fu_369_p2, "d_fu_369_p2");
    sc_trace(mVcdFile, d_reg_572, "d_reg_572");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_fu_375_p5, "tmp_fu_375_p5");
    sc_trace(mVcdFile, icmp_ln29_fu_363_p2, "icmp_ln29_fu_363_p2");
    sc_trace(mVcdFile, tmp_8_fu_392_p5, "tmp_8_fu_392_p5");
    sc_trace(mVcdFile, tmp_9_fu_405_p5, "tmp_9_fu_405_p5");
    sc_trace(mVcdFile, tmp_s_fu_418_p5, "tmp_s_fu_418_p5");
    sc_trace(mVcdFile, tmp_10_fu_431_p5, "tmp_10_fu_431_p5");
    sc_trace(mVcdFile, tmp_11_fu_445_p5, "tmp_11_fu_445_p5");
    sc_trace(mVcdFile, grp_fu_222_p2, "grp_fu_222_p2");
    sc_trace(mVcdFile, tmp_6_reg_614, "tmp_6_reg_614");
    sc_trace(mVcdFile, tmp_7_reg_619, "tmp_7_reg_619");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, grp_fu_241_p2, "grp_fu_241_p2");
    sc_trace(mVcdFile, tmp_i_reg_634, "tmp_i_reg_634");
    sc_trace(mVcdFile, tmp_1_i_reg_640, "tmp_1_i_reg_640");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, tmp_i_4_reg_646, "tmp_i_4_reg_646");
    sc_trace(mVcdFile, phi_ln26_reg_187, "phi_ln26_reg_187");
    sc_trace(mVcdFile, d_0_reg_198, "d_0_reg_198");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, dense_array_0_0_fu_94, "dense_array_0_0_fu_94");
    sc_trace(mVcdFile, dense_array_0_1_fu_295_p3, "dense_array_0_1_fu_295_p3");
    sc_trace(mVcdFile, dense_array_1_0_fu_98, "dense_array_1_0_fu_98");
    sc_trace(mVcdFile, dense_array_1_1_fu_303_p3, "dense_array_1_1_fu_303_p3");
    sc_trace(mVcdFile, dense_array_2_0_fu_102, "dense_array_2_0_fu_102");
    sc_trace(mVcdFile, dense_array_2_1_fu_319_p3, "dense_array_2_1_fu_319_p3");
    sc_trace(mVcdFile, dense_array_0_read_s_fu_106, "dense_array_0_read_s_fu_106");
    sc_trace(mVcdFile, dense_array_1_read_s_fu_110, "dense_array_1_read_s_fu_110");
    sc_trace(mVcdFile, dense_array_2_read_s_fu_114, "dense_array_2_read_s_fu_114");
    sc_trace(mVcdFile, grp_fu_226_p2, "grp_fu_226_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, grp_fu_231_p2, "grp_fu_231_p2");
    sc_trace(mVcdFile, grp_fu_236_p2, "grp_fu_236_p2");
    sc_trace(mVcdFile, grp_fu_210_p0, "grp_fu_210_p0");
    sc_trace(mVcdFile, grp_fu_210_p1, "grp_fu_210_p1");
    sc_trace(mVcdFile, grp_fu_216_p0, "grp_fu_216_p0");
    sc_trace(mVcdFile, grp_fu_216_p1, "grp_fu_216_p1");
    sc_trace(mVcdFile, grp_fu_222_p0, "grp_fu_222_p0");
    sc_trace(mVcdFile, grp_fu_222_p1, "grp_fu_222_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, grp_fu_241_p1, "grp_fu_241_p1");
    sc_trace(mVcdFile, icmp_ln26_1_fu_275_p2, "icmp_ln26_1_fu_275_p2");
    sc_trace(mVcdFile, icmp_ln26_2_fu_289_p2, "icmp_ln26_2_fu_289_p2");
    sc_trace(mVcdFile, select_ln26_fu_281_p3, "select_ln26_fu_281_p3");
    sc_trace(mVcdFile, select_ln26_1_fu_311_p3, "select_ln26_1_fu_311_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("dense.hdltvin.dat");
    mHdltvoutHandle.open("dense.hdltvout.dat");
}

dense::~dense() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete dense_fadd_32ns_3bkb_U1;
    delete dense_fmul_32ns_3cud_U2;
    delete dense_fmul_32ns_3cud_U3;
    delete dense_fdiv_32ns_3dEe_U4;
    delete dense_fdiv_32ns_3dEe_U5;
    delete dense_fdiv_32ns_3dEe_U6;
    delete dense_fexp_32ns_3eOg_U7;
    delete dense_mux_32_32_1_1_U8;
    delete dense_mux_32_32_1_1_U9;
    delete dense_mux_32_32_1_1_U10;
    delete dense_mux_32_32_1_1_U11;
    delete dense_mux_32_32_1_1_U12;
    delete dense_mux_32_32_1_1_U13;
}

void dense::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void dense::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void dense::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_3F51D31D;
}

void dense::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv32_BE89F10E;
}

void dense::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv32_3E846572;
}

void dense::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv32_BC4063BE;
}

void dense::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_lv32_BF3E370A;
}

void dense::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv32_BF4F13EE;
}

void dense::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv32_3F4D9893;
}

void dense::thread_ap_var_for_const9() {
    ap_var_for_const9 = ap_const_lv32_3D1C62CF;
}

void dense::thread_ap_var_for_const10() {
    ap_var_for_const10 = ap_const_lv32_3F57E873;
}

void dense::thread_ap_var_for_const11() {
    ap_var_for_const11 = ap_const_lv32_BEE50E1E;
}

void dense::thread_ap_var_for_const12() {
    ap_var_for_const12 = ap_const_lv32_3ED7D03A;
}

void dense::thread_ap_var_for_const13() {
    ap_var_for_const13 = ap_const_lv32_BEF0CFC6;
}

void dense::thread_ap_var_for_const14() {
    ap_var_for_const14 = ap_const_lv32_3E267CA4;
}

void dense::thread_ap_var_for_const15() {
    ap_var_for_const15 = ap_const_lv32_BF2E109B;
}

void dense::thread_ap_var_for_const16() {
    ap_var_for_const16 = ap_const_lv32_BF189A92;
}

void dense::thread_ap_var_for_const17() {
    ap_var_for_const17 = ap_const_lv32_BE94B39A;
}

void dense::thread_ap_var_for_const18() {
    ap_var_for_const18 = ap_const_lv32_BC7F8EA1;
}

void dense::thread_ap_var_for_const19() {
    ap_var_for_const19 = ap_const_lv32_BE37171D;
}

void dense::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        d_0_reg_198 = d_reg_572.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln26_fu_327_p2.read(), ap_const_lv1_1))) {
        d_0_reg_198 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,2,2>(ap_const_lv2_0, d_0_reg_198.read()))) {
        dense_array_0_read_s_fu_106 = grp_fu_210_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln26_fu_327_p2.read(), ap_const_lv1_1))) {
        dense_array_0_read_s_fu_106 = dense_array_0_1_fu_295_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,2,2>(d_0_reg_198.read(), ap_const_lv2_1))) {
        dense_array_1_read_s_fu_110 = grp_fu_210_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln26_fu_327_p2.read(), ap_const_lv1_1))) {
        dense_array_1_read_s_fu_110 = dense_array_1_1_fu_303_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         !esl_seteq<1,2,2>(ap_const_lv2_0, d_0_reg_198.read()) && 
         !esl_seteq<1,2,2>(d_0_reg_198.read(), ap_const_lv2_1))) {
        dense_array_2_read_s_fu_114 = grp_fu_210_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln26_fu_327_p2.read(), ap_const_lv1_1))) {
        dense_array_2_read_s_fu_114 = dense_array_2_1_fu_319_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln26_fu_327_p2.read(), ap_const_lv1_0))) {
        phi_ln26_reg_187 = add_ln26_fu_269_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_ln26_reg_187 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        d_reg_572 = d_fu_369_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        dense_array_0_0_fu_94 = dense_array_0_1_fu_295_p3.read();
        dense_array_1_0_fu_98 = dense_array_1_1_fu_303_p3.read();
        dense_array_2_0_fu_102 = dense_array_2_1_fu_319_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        reg_252 = grp_fu_210_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        tmp_1_i_reg_640 = grp_fu_241_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp_6_reg_614 = grp_fu_222_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        tmp_7_reg_619 = grp_fu_222_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        tmp_i_4_reg_646 = grp_fu_241_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        tmp_i_reg_634 = grp_fu_241_p2.read();
    }
}

void dense::thread_add_ln26_fu_269_p2() {
    add_ln26_fu_269_p2 = (!phi_ln26_reg_187.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(phi_ln26_reg_187.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void dense::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dense::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void dense::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void dense::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void dense::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void dense::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void dense::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void dense::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void dense::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void dense::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void dense::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void dense::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void dense::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void dense::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void dense::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void dense::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void dense::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void dense::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void dense::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void dense::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void dense::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dense::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dense::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dense::thread_d_fu_369_p2() {
    d_fu_369_p2 = (!d_0_reg_198.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(d_0_reg_198.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void dense::thread_dense_array_0_1_fu_295_p3() {
    dense_array_0_1_fu_295_p3 = (!icmp_ln26_2_fu_289_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln26_2_fu_289_p2.read()[0].to_bool())? dense_array_0_0_fu_94.read(): select_ln26_fu_281_p3.read());
}

void dense::thread_dense_array_1_1_fu_303_p3() {
    dense_array_1_1_fu_303_p3 = (!icmp_ln26_2_fu_289_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln26_2_fu_289_p2.read()[0].to_bool())? ap_const_lv32_0: dense_array_1_0_fu_98.read());
}

void dense::thread_dense_array_2_1_fu_319_p3() {
    dense_array_2_1_fu_319_p3 = (!icmp_ln26_2_fu_289_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln26_2_fu_289_p2.read()[0].to_bool())? dense_array_2_0_fu_102.read(): select_ln26_1_fu_311_p3.read());
}

void dense::thread_grp_fu_210_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_fu_210_p0 = tmp_i_reg_634.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        grp_fu_210_p0 = grp_fu_210_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_210_p0 = grp_fu_216_p2.read();
    } else {
        grp_fu_210_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dense::thread_grp_fu_210_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        grp_fu_210_p1 = tmp_i_4_reg_646.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_210_p1 = tmp_1_i_reg_640.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_210_p1 = tmp_7_reg_619.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_fu_210_p1 = tmp_6_reg_614.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        grp_fu_210_p1 = grp_fu_216_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        grp_fu_210_p1 = ap_const_lv32_0;
    } else {
        grp_fu_210_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dense::thread_grp_fu_216_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_fu_216_p0 = tmp_11_fu_445_p5.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_216_p0 = tmp_10_fu_431_p5.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_216_p0 = tmp_s_fu_418_p5.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_216_p0 = tmp_9_fu_405_p5.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_216_p0 = tmp_8_fu_392_p5.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_216_p0 = tmp_fu_375_p5.read();
    } else {
        grp_fu_216_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dense::thread_grp_fu_216_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_fu_216_p1 = flat_array_5.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_216_p1 = flat_array_4.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_216_p1 = flat_array_3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_216_p1 = flat_array_2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_216_p1 = flat_array_1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_216_p1 = flat_array_0.read();
    } else {
        grp_fu_216_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dense::thread_grp_fu_222_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_fu_222_p0 = tmp_11_fu_445_p5.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_222_p0 = tmp_10_fu_431_p5.read();
    } else {
        grp_fu_222_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dense::thread_grp_fu_222_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_fu_222_p1 = flat_array_7.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_222_p1 = flat_array_6.read();
    } else {
        grp_fu_222_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dense::thread_grp_fu_241_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_fu_241_p1 = dense_array_2_read_s_fu_114.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_241_p1 = dense_array_1_read_s_fu_110.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_241_p1 = dense_array_0_read_s_fu_106.read();
    } else {
        grp_fu_241_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dense::thread_icmp_ln26_1_fu_275_p2() {
    icmp_ln26_1_fu_275_p2 = (!phi_ln26_reg_187.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln26_reg_187.read() == ap_const_lv2_0);
}

void dense::thread_icmp_ln26_2_fu_289_p2() {
    icmp_ln26_2_fu_289_p2 = (!phi_ln26_reg_187.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln26_reg_187.read() == ap_const_lv2_1);
}

void dense::thread_icmp_ln26_fu_327_p2() {
    icmp_ln26_fu_327_p2 = (!phi_ln26_reg_187.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln26_reg_187.read() == ap_const_lv2_2);
}

void dense::thread_icmp_ln29_fu_363_p2() {
    icmp_ln29_fu_363_p2 = (!d_0_reg_198.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(d_0_reg_198.read() == ap_const_lv2_3);
}

void dense::thread_prediction_0() {
    prediction_0 = grp_fu_226_p2.read();
}

void dense::thread_prediction_0_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        prediction_0_ap_vld = ap_const_logic_1;
    } else {
        prediction_0_ap_vld = ap_const_logic_0;
    }
}

void dense::thread_prediction_1() {
    prediction_1 = grp_fu_231_p2.read();
}

void dense::thread_prediction_1_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        prediction_1_ap_vld = ap_const_logic_1;
    } else {
        prediction_1_ap_vld = ap_const_logic_0;
    }
}

void dense::thread_prediction_2() {
    prediction_2 = grp_fu_236_p2.read();
}

void dense::thread_prediction_2_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        prediction_2_ap_vld = ap_const_logic_1;
    } else {
        prediction_2_ap_vld = ap_const_logic_0;
    }
}

void dense::thread_select_ln26_1_fu_311_p3() {
    select_ln26_1_fu_311_p3 = (!icmp_ln26_1_fu_275_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln26_1_fu_275_p2.read()[0].to_bool())? dense_array_2_0_fu_102.read(): ap_const_lv32_0);
}

void dense::thread_select_ln26_fu_281_p3() {
    select_ln26_fu_281_p3 = (!icmp_ln26_1_fu_275_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln26_1_fu_275_p2.read()[0].to_bool())? ap_const_lv32_0: dense_array_0_0_fu_94.read());
}

void dense::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln26_fu_327_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln29_fu_363_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<23>) ("XXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void dense::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"flat_array_0\" :  \"" << flat_array_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"flat_array_1\" :  \"" << flat_array_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"flat_array_2\" :  \"" << flat_array_2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"flat_array_3\" :  \"" << flat_array_3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"flat_array_4\" :  \"" << flat_array_4.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"flat_array_5\" :  \"" << flat_array_5.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"flat_array_6\" :  \"" << flat_array_6.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"flat_array_7\" :  \"" << flat_array_7.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_0\" :  \"" << prediction_0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_0_ap_vld\" :  \"" << prediction_0_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_1\" :  \"" << prediction_1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_1_ap_vld\" :  \"" << prediction_1_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_2\" :  \"" << prediction_2.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_2_ap_vld\" :  \"" << prediction_2_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

