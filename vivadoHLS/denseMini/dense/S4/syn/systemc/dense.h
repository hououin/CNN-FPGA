// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_HH_
#define _dense_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "soft_max.h"
#include "dense_fadd_32ns_3bkb.h"
#include "dense_fmul_32ns_3eOg.h"
#include "dense_mux_32_32_1_1.h"

namespace ap_rtl {

struct dense : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > flat_array_0;
    sc_in< sc_lv<32> > flat_array_1;
    sc_in< sc_lv<32> > flat_array_2;
    sc_in< sc_lv<32> > flat_array_3;
    sc_in< sc_lv<32> > flat_array_4;
    sc_in< sc_lv<32> > flat_array_5;
    sc_in< sc_lv<32> > flat_array_6;
    sc_in< sc_lv<32> > flat_array_7;
    sc_out< sc_lv<32> > prediction_0;
    sc_out< sc_logic > prediction_0_ap_vld;
    sc_out< sc_lv<32> > prediction_1;
    sc_out< sc_logic > prediction_1_ap_vld;
    sc_out< sc_lv<32> > prediction_2;
    sc_out< sc_logic > prediction_2_ap_vld;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<32> > ap_var_for_const3;
    sc_signal< sc_lv<32> > ap_var_for_const4;
    sc_signal< sc_lv<32> > ap_var_for_const5;
    sc_signal< sc_lv<32> > ap_var_for_const6;
    sc_signal< sc_lv<32> > ap_var_for_const7;
    sc_signal< sc_lv<32> > ap_var_for_const8;
    sc_signal< sc_lv<32> > ap_var_for_const9;
    sc_signal< sc_lv<32> > ap_var_for_const10;
    sc_signal< sc_lv<32> > ap_var_for_const11;
    sc_signal< sc_lv<32> > ap_var_for_const12;
    sc_signal< sc_lv<32> > ap_var_for_const13;
    sc_signal< sc_lv<32> > ap_var_for_const14;
    sc_signal< sc_lv<32> > ap_var_for_const15;
    sc_signal< sc_lv<32> > ap_var_for_const16;
    sc_signal< sc_lv<32> > ap_var_for_const17;
    sc_signal< sc_lv<32> > ap_var_for_const18;
    sc_signal< sc_lv<32> > ap_var_for_const19;


    // Module declarations
    dense(sc_module_name name);
    SC_HAS_PROCESS(dense);

    ~dense();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    soft_max* grp_soft_max_fu_199;
    dense_fadd_32ns_3bkb<1,2,32,32,32>* dense_fadd_32ns_3bkb_U16;
    dense_fadd_32ns_3bkb<1,2,32,32,32>* dense_fadd_32ns_3bkb_U17;
    dense_fadd_32ns_3bkb<1,2,32,32,32>* dense_fadd_32ns_3bkb_U18;
    dense_fadd_32ns_3bkb<1,2,32,32,32>* dense_fadd_32ns_3bkb_U19;
    dense_fadd_32ns_3bkb<1,2,32,32,32>* dense_fadd_32ns_3bkb_U20;
    dense_fadd_32ns_3bkb<1,2,32,32,32>* dense_fadd_32ns_3bkb_U21;
    dense_fadd_32ns_3bkb<1,2,32,32,32>* dense_fadd_32ns_3bkb_U22;
    dense_fadd_32ns_3bkb<1,2,32,32,32>* dense_fadd_32ns_3bkb_U23;
    dense_fmul_32ns_3eOg<1,2,32,32,32>* dense_fmul_32ns_3eOg_U24;
    dense_fmul_32ns_3eOg<1,2,32,32,32>* dense_fmul_32ns_3eOg_U25;
    dense_fmul_32ns_3eOg<1,2,32,32,32>* dense_fmul_32ns_3eOg_U26;
    dense_fmul_32ns_3eOg<1,2,32,32,32>* dense_fmul_32ns_3eOg_U27;
    dense_fmul_32ns_3eOg<1,2,32,32,32>* dense_fmul_32ns_3eOg_U28;
    dense_fmul_32ns_3eOg<1,2,32,32,32>* dense_fmul_32ns_3eOg_U29;
    dense_fmul_32ns_3eOg<1,2,32,32,32>* dense_fmul_32ns_3eOg_U30;
    dense_fmul_32ns_3eOg<1,2,32,32,32>* dense_fmul_32ns_3eOg_U31;
    dense_mux_32_32_1_1<1,1,32,32,32,2,32>* dense_mux_32_32_1_1_U32;
    dense_mux_32_32_1_1<1,1,32,32,32,2,32>* dense_mux_32_32_1_1_U33;
    dense_mux_32_32_1_1<1,1,32,32,32,2,32>* dense_mux_32_32_1_1_U34;
    dense_mux_32_32_1_1<1,1,32,32,32,2,32>* dense_mux_32_32_1_1_U35;
    dense_mux_32_32_1_1<1,1,32,32,32,2,32>* dense_mux_32_32_1_1_U36;
    dense_mux_32_32_1_1<1,1,32,32,32,2,32>* dense_mux_32_32_1_1_U37;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<2> > d_0_reg_187;
    sc_signal< sc_lv<2> > d_0_reg_187_pp0_iter1_reg;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter9;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<2> > d_0_reg_187_pp0_iter2_reg;
    sc_signal< sc_lv<2> > d_0_reg_187_pp0_iter3_reg;
    sc_signal< sc_lv<2> > d_0_reg_187_pp0_iter4_reg;
    sc_signal< sc_lv<2> > d_0_reg_187_pp0_iter5_reg;
    sc_signal< sc_lv<2> > d_0_reg_187_pp0_iter6_reg;
    sc_signal< sc_lv<2> > d_0_reg_187_pp0_iter7_reg;
    sc_signal< sc_lv<2> > d_0_reg_187_pp0_iter8_reg;
    sc_signal< sc_lv<2> > add_ln26_fu_299_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln26_fu_357_p2;
    sc_signal< sc_lv<1> > icmp_ln29_fu_393_p2;
    sc_signal< sc_lv<1> > icmp_ln29_reg_600;
    sc_signal< sc_lv<2> > d_fu_399_p2;
    sc_signal< sc_lv<2> > d_reg_604;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<32> > tmp_8_fu_405_p5;
    sc_signal< sc_lv<32> > grp_fu_252_p2;
    sc_signal< sc_lv<32> > tmp_9_fu_418_p5;
    sc_signal< sc_lv<32> > grp_fu_212_p2;
    sc_signal< sc_lv<32> > grp_fu_257_p2;
    sc_signal< sc_lv<32> > tmp_s_fu_431_p5;
    sc_signal< sc_lv<32> > grp_fu_217_p2;
    sc_signal< sc_lv<32> > grp_fu_262_p2;
    sc_signal< sc_lv<32> > tmp_10_fu_444_p5;
    sc_signal< sc_lv<32> > grp_fu_222_p2;
    sc_signal< sc_lv<32> > grp_fu_267_p2;
    sc_signal< sc_lv<32> > tmp_11_fu_457_p5;
    sc_signal< sc_lv<32> > grp_fu_227_p2;
    sc_signal< sc_lv<32> > grp_fu_272_p2;
    sc_signal< sc_lv<32> > tmp_12_fu_471_p5;
    sc_signal< sc_lv<32> > grp_fu_277_p2;
    sc_signal< sc_lv<32> > tmp_6_reg_686;
    sc_signal< sc_lv<32> > tmp_6_reg_686_pp0_iter6_reg;
    sc_signal< sc_lv<32> > grp_fu_232_p2;
    sc_signal< sc_lv<32> > grp_fu_281_p2;
    sc_signal< sc_lv<32> > grp_fu_286_p2;
    sc_signal< sc_lv<32> > tmp_7_reg_701;
    sc_signal< sc_lv<32> > tmp_7_reg_701_pp0_iter7_reg;
    sc_signal< sc_lv<32> > grp_fu_237_p2;
    sc_signal< sc_lv<32> > grp_fu_242_p2;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_logic > grp_soft_max_fu_199_ap_start;
    sc_signal< sc_logic > grp_soft_max_fu_199_ap_done;
    sc_signal< sc_logic > grp_soft_max_fu_199_ap_idle;
    sc_signal< sc_logic > grp_soft_max_fu_199_ap_ready;
    sc_signal< sc_lv<32> > grp_soft_max_fu_199_pred_0;
    sc_signal< sc_logic > grp_soft_max_fu_199_pred_0_ap_vld;
    sc_signal< sc_lv<32> > grp_soft_max_fu_199_pred_1;
    sc_signal< sc_logic > grp_soft_max_fu_199_pred_1_ap_vld;
    sc_signal< sc_lv<32> > grp_soft_max_fu_199_pred_2;
    sc_signal< sc_logic > grp_soft_max_fu_199_pred_2_ap_vld;
    sc_signal< sc_lv<2> > phi_ln26_reg_176;
    sc_signal< sc_lv<2> > ap_phi_mux_d_0_phi_fu_191_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > grp_soft_max_fu_199_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<32> > dense_array_0_0_fu_104;
    sc_signal< sc_lv<32> > dense_array_0_1_fu_325_p3;
    sc_signal< sc_lv<32> > dense_array_1_0_fu_108;
    sc_signal< sc_lv<32> > dense_array_1_1_fu_333_p3;
    sc_signal< sc_lv<32> > dense_array_2_0_fu_112;
    sc_signal< sc_lv<32> > dense_array_2_1_fu_349_p3;
    sc_signal< sc_lv<32> > dense_array_2_fu_116;
    sc_signal< sc_lv<32> > grp_fu_247_p2;
    sc_signal< sc_lv<32> > dense_array_2_3_fu_120;
    sc_signal< sc_lv<32> > dense_array_2_2_fu_124;
    sc_signal< sc_lv<1> > icmp_ln26_1_fu_305_p2;
    sc_signal< sc_lv<1> > icmp_ln26_2_fu_319_p2;
    sc_signal< sc_lv<32> > select_ln26_fu_311_p3;
    sc_signal< sc_lv<32> > select_ln26_1_fu_341_p3;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_pp0_stage0;
    static const sc_lv<5> ap_ST_fsm_state13;
    static const sc_lv<5> ap_ST_fsm_state14;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<32> ap_const_lv32_3F51D31D;
    static const sc_lv<32> ap_const_lv32_BE89F10E;
    static const sc_lv<32> ap_const_lv32_3E846572;
    static const sc_lv<32> ap_const_lv32_BC4063BE;
    static const sc_lv<32> ap_const_lv32_BF3E370A;
    static const sc_lv<32> ap_const_lv32_BF4F13EE;
    static const sc_lv<32> ap_const_lv32_3F4D9893;
    static const sc_lv<32> ap_const_lv32_3D1C62CF;
    static const sc_lv<32> ap_const_lv32_3F57E873;
    static const sc_lv<32> ap_const_lv32_BEE50E1E;
    static const sc_lv<32> ap_const_lv32_3ED7D03A;
    static const sc_lv<32> ap_const_lv32_BEF0CFC6;
    static const sc_lv<32> ap_const_lv32_3E267CA4;
    static const sc_lv<32> ap_const_lv32_BF2E109B;
    static const sc_lv<32> ap_const_lv32_BF189A92;
    static const sc_lv<32> ap_const_lv32_BE94B39A;
    static const sc_lv<32> ap_const_lv32_BC7F8EA1;
    static const sc_lv<32> ap_const_lv32_BE37171D;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const9();
    void thread_ap_var_for_const10();
    void thread_ap_var_for_const11();
    void thread_ap_var_for_const12();
    void thread_ap_var_for_const13();
    void thread_ap_var_for_const14();
    void thread_ap_var_for_const15();
    void thread_ap_var_for_const16();
    void thread_ap_var_for_const17();
    void thread_ap_var_for_const18();
    void thread_ap_var_for_const19();
    void thread_ap_clk_no_reset_();
    void thread_add_ln26_fu_299_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state2();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state10_pp0_stage0_iter7();
    void thread_ap_block_state11_pp0_stage0_iter8();
    void thread_ap_block_state12_pp0_stage0_iter9();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_block_state6_pp0_stage0_iter3();
    void thread_ap_block_state7_pp0_stage0_iter4();
    void thread_ap_block_state8_pp0_stage0_iter5();
    void thread_ap_block_state9_pp0_stage0_iter6();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_d_0_phi_fu_191_p4();
    void thread_ap_ready();
    void thread_d_fu_399_p2();
    void thread_dense_array_0_1_fu_325_p3();
    void thread_dense_array_1_1_fu_333_p3();
    void thread_dense_array_2_1_fu_349_p3();
    void thread_grp_soft_max_fu_199_ap_start();
    void thread_icmp_ln26_1_fu_305_p2();
    void thread_icmp_ln26_2_fu_319_p2();
    void thread_icmp_ln26_fu_357_p2();
    void thread_icmp_ln29_fu_393_p2();
    void thread_prediction_0();
    void thread_prediction_0_ap_vld();
    void thread_prediction_1();
    void thread_prediction_1_ap_vld();
    void thread_prediction_2();
    void thread_prediction_2_ap_vld();
    void thread_select_ln26_1_fu_341_p3();
    void thread_select_ln26_fu_311_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
