

================================================================
== Vivado HLS Report for 'soft_max'
================================================================
* Date:           Sun Aug 13 15:24:09 2023

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        dense
* Solution:       S4
* Product family: virtex7
* Target device:  xc7vx485t-ffg1157-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+-----------+------------+
    |  Clock |  Target  | Estimated | Uncertainty|
    +--------+----------+-----------+------------+
    |ap_clk  | 40.00 ns | 31.264 ns |   5.00 ns  |
    +--------+----------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       21|       21| 0.840 us | 0.840 us |   21|   21|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Sum_Loop         |        8|        8|         5|          2|          1|     3|    yes   |
        |- Prediction_Loop  |        9|        9|         8|          1|          1|     3|    yes   |
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 5
  * Pipeline-1: initiation interval (II) = 1, depth = 8


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 16
* Pipeline : 2
  Pipeline-0 : II = 2, D = 5, States = { 2 3 4 5 6 }
  Pipeline-1 : II = 1, D = 8, States = { 8 9 10 11 12 13 14 15 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 7 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 2 
7 --> 8 
8 --> 16 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 8 
16 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.18>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%dense_array_2_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %dense_array_2_read)" [dense.cpp:5]   --->   Operation 17 'read' 'dense_array_2_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%dense_array_1_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %dense_array_1_read)" [dense.cpp:5]   --->   Operation 18 'read' 'dense_array_1_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%dense_array_0_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %dense_array_0_read)" [dense.cpp:5]   --->   Operation 19 'read' 'dense_array_0_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (1.18ns)   --->   "br label %1" [dense.cpp:10]   --->   Operation 20 'br' <Predicate = true> <Delay = 1.18>

State 2 <SV = 1> <Delay = 31.2>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%sum_0 = phi float [ 0.000000e+00, %0 ], [ %sum, %Sum_Loop ]"   --->   Operation 21 'phi' 'sum_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%i_0 = phi i2 [ 0, %0 ], [ %i, %Sum_Loop ]"   --->   Operation 22 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.61ns)   --->   "%icmp_ln10 = icmp eq i2 %i_0, -1" [dense.cpp:10]   --->   Operation 23 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 24 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (1.00ns)   --->   "%i = add i2 %i_0, 1" [dense.cpp:10]   --->   Operation 25 'add' 'i' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "br i1 %icmp_ln10, label %.preheader.preheader, label %Sum_Loop" [dense.cpp:10]   --->   Operation 26 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (1.15ns)   --->   "%tmp_4 = call float @_ssdm_op_Mux.ap_auto.3float.i2(float %dense_array_0_read_1, float %dense_array_1_read_1, float %dense_array_2_read_1, i2 %i_0)" [dense.cpp:12]   --->   Operation 27 'mux' 'tmp_4' <Predicate = (!icmp_ln10)> <Delay = 1.15> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [3/3] (30.1ns)   --->   "%tmp = call float @llvm.exp.f32(float %tmp_4)" [dense.cpp:12]   --->   Operation 28 'fexp' 'tmp' <Predicate = (!icmp_ln10)> <Delay = 30.1> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 2> <II = 1> <Delay = 30.1> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 3 <SV = 2> <Delay = 30.1>
ST_3 : Operation 29 [2/3] (30.1ns)   --->   "%tmp = call float @llvm.exp.f32(float %tmp_4)" [dense.cpp:12]   --->   Operation 29 'fexp' 'tmp' <Predicate = (!icmp_ln10)> <Delay = 30.1> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 2> <II = 1> <Delay = 30.1> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 4 <SV = 3> <Delay = 30.1>
ST_4 : Operation 30 [1/3] (30.1ns)   --->   "%tmp = call float @llvm.exp.f32(float %tmp_4)" [dense.cpp:12]   --->   Operation 30 'fexp' 'tmp' <Predicate = (!icmp_ln10)> <Delay = 30.1> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 2> <II = 1> <Delay = 30.1> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 5 <SV = 4> <Delay = 15.9>
ST_5 : Operation 31 [2/2] (15.9ns)   --->   "%sum = fadd float %sum_0, %tmp" [dense.cpp:12]   --->   Operation 31 'fadd' 'sum' <Predicate = (!icmp_ln10)> <Delay = 15.9> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 1> <II = 1> <Delay = 15.9> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 15.9>
ST_6 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str) nounwind" [dense.cpp:11]   --->   Operation 32 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 33 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str)" [dense.cpp:11]   --->   Operation 33 'specregionbegin' 'tmp_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [dense.cpp:12]   --->   Operation 34 'specpipeline' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 35 [1/2] (15.9ns)   --->   "%sum = fadd float %sum_0, %tmp" [dense.cpp:12]   --->   Operation 35 'fadd' 'sum' <Predicate = (!icmp_ln10)> <Delay = 15.9> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 1> <II = 1> <Delay = 15.9> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 36 [1/1] (0.00ns)   --->   "%empty_3 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str, i32 %tmp_1)" [dense.cpp:13]   --->   Operation 36 'specregionend' 'empty_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 37 [1/1] (0.00ns)   --->   "br label %1" [dense.cpp:10]   --->   Operation 37 'br' <Predicate = (!icmp_ln10)> <Delay = 0.00>

State 7 <SV = 2> <Delay = 1.18>
ST_7 : Operation 38 [1/1] (1.18ns)   --->   "br label %.preheader" [dense.cpp:16]   --->   Operation 38 'br' <Predicate = true> <Delay = 1.18>

State 8 <SV = 3> <Delay = 31.2>
ST_8 : Operation 39 [1/1] (0.00ns)   --->   "%j_0 = phi i2 [ %j, %Prediction_Loop_end ], [ 0, %.preheader.preheader ]"   --->   Operation 39 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 40 [1/1] (0.61ns)   --->   "%icmp_ln16 = icmp eq i2 %j_0, -1" [dense.cpp:16]   --->   Operation 40 'icmp' 'icmp_ln16' <Predicate = true> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 41 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 41 'speclooptripcount' 'empty_4' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 42 [1/1] (1.00ns)   --->   "%j = add i2 %j_0, 1" [dense.cpp:16]   --->   Operation 42 'add' 'j' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 43 [1/1] (0.00ns)   --->   "br i1 %icmp_ln16, label %2, label %Prediction_Loop_begin" [dense.cpp:16]   --->   Operation 43 'br' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 44 [1/1] (1.15ns)   --->   "%tmp_6 = call float @_ssdm_op_Mux.ap_auto.3float.i2(float %dense_array_0_read_1, float %dense_array_1_read_1, float %dense_array_2_read_1, i2 %j_0)" [dense.cpp:18]   --->   Operation 44 'mux' 'tmp_6' <Predicate = (!icmp_ln16)> <Delay = 1.15> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 45 [3/3] (30.1ns)   --->   "%tmp_2 = call float @llvm.exp.f32(float %tmp_6)" [dense.cpp:18]   --->   Operation 45 'fexp' 'tmp_2' <Predicate = (!icmp_ln16)> <Delay = 30.1> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 2> <II = 1> <Delay = 30.1> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>
ST_8 : Operation 46 [1/1] (0.86ns)   --->   "switch i2 %j_0, label %branch2 [
    i2 0, label %branch0
    i2 1, label %branch1
  ]" [dense.cpp:18]   --->   Operation 46 'switch' <Predicate = (!icmp_ln16)> <Delay = 0.86>

State 9 <SV = 4> <Delay = 30.1>
ST_9 : Operation 47 [2/3] (30.1ns)   --->   "%tmp_2 = call float @llvm.exp.f32(float %tmp_6)" [dense.cpp:18]   --->   Operation 47 'fexp' 'tmp_2' <Predicate = true> <Delay = 30.1> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 2> <II = 1> <Delay = 30.1> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 10 <SV = 5> <Delay = 30.1>
ST_10 : Operation 48 [1/3] (30.1ns)   --->   "%tmp_2 = call float @llvm.exp.f32(float %tmp_6)" [dense.cpp:18]   --->   Operation 48 'fexp' 'tmp_2' <Predicate = true> <Delay = 30.1> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 2> <II = 1> <Delay = 30.1> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 11 <SV = 6> <Delay = 22.0>
ST_11 : Operation 49 [5/5] (22.0ns)   --->   "%tmp_3 = fdiv float %tmp_2, %sum_0" [dense.cpp:18]   --->   Operation 49 'fdiv' 'tmp_3' <Predicate = true> <Delay = 22.0> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 4> <II = 1> <Delay = 22.0> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 7> <Delay = 22.0>
ST_12 : Operation 50 [4/5] (22.0ns)   --->   "%tmp_3 = fdiv float %tmp_2, %sum_0" [dense.cpp:18]   --->   Operation 50 'fdiv' 'tmp_3' <Predicate = true> <Delay = 22.0> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 4> <II = 1> <Delay = 22.0> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 8> <Delay = 22.0>
ST_13 : Operation 51 [3/5] (22.0ns)   --->   "%tmp_3 = fdiv float %tmp_2, %sum_0" [dense.cpp:18]   --->   Operation 51 'fdiv' 'tmp_3' <Predicate = true> <Delay = 22.0> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 4> <II = 1> <Delay = 22.0> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 9> <Delay = 22.0>
ST_14 : Operation 52 [2/5] (22.0ns)   --->   "%tmp_3 = fdiv float %tmp_2, %sum_0" [dense.cpp:18]   --->   Operation 52 'fdiv' 'tmp_3' <Predicate = true> <Delay = 22.0> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 4> <II = 1> <Delay = 22.0> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 10> <Delay = 22.0>
ST_15 : Operation 53 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([16 x i8]* @p_str2) nounwind" [dense.cpp:17]   --->   Operation 53 'specloopname' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_5 = call i32 (...)* @_ssdm_op_SpecRegionBegin([16 x i8]* @p_str2)" [dense.cpp:17]   --->   Operation 54 'specregionbegin' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 55 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [dense.cpp:18]   --->   Operation 55 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 56 [1/5] (22.0ns)   --->   "%tmp_3 = fdiv float %tmp_2, %sum_0" [dense.cpp:18]   --->   Operation 56 'fdiv' 'tmp_3' <Predicate = true> <Delay = 22.0> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 4> <II = 1> <Delay = 22.0> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 57 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.floatP(float* %pred_1, float %tmp_3)" [dense.cpp:18]   --->   Operation 57 'write' <Predicate = (j_0 == 1)> <Delay = 0.00>
ST_15 : Operation 58 [1/1] (0.00ns)   --->   "br label %Prediction_Loop_end" [dense.cpp:18]   --->   Operation 58 'br' <Predicate = (j_0 == 1)> <Delay = 0.00>
ST_15 : Operation 59 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.floatP(float* %pred_0, float %tmp_3)" [dense.cpp:18]   --->   Operation 59 'write' <Predicate = (j_0 == 0)> <Delay = 0.00>
ST_15 : Operation 60 [1/1] (0.00ns)   --->   "br label %Prediction_Loop_end" [dense.cpp:18]   --->   Operation 60 'br' <Predicate = (j_0 == 0)> <Delay = 0.00>
ST_15 : Operation 61 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.floatP(float* %pred_2, float %tmp_3)" [dense.cpp:18]   --->   Operation 61 'write' <Predicate = (j_0 != 0 & j_0 != 1)> <Delay = 0.00>
ST_15 : Operation 62 [1/1] (0.00ns)   --->   "br label %Prediction_Loop_end" [dense.cpp:18]   --->   Operation 62 'br' <Predicate = (j_0 != 0 & j_0 != 1)> <Delay = 0.00>
ST_15 : Operation 63 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecRegionEnd([16 x i8]* @p_str2, i32 %tmp_5)" [dense.cpp:19]   --->   Operation 63 'specregionend' 'empty_5' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_15 : Operation 64 [1/1] (0.00ns)   --->   "br label %.preheader" [dense.cpp:16]   --->   Operation 64 'br' <Predicate = (!icmp_ln16)> <Delay = 0.00>

State 16 <SV = 4> <Delay = 0.00>
ST_16 : Operation 65 [1/1] (0.00ns)   --->   "ret void" [dense.cpp:21]   --->   Operation 65 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 40ns, clock uncertainty: 5ns.

 <State 1>: 1.18ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('sum') with incoming values : ('sum', dense.cpp:12) [12]  (1.18 ns)

 <State 2>: 31.3ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', dense.cpp:10) [13]  (0 ns)
	'mux' operation ('tmp_4', dense.cpp:12) [22]  (1.15 ns)
	'fexp' operation ('tmp', dense.cpp:12) [23]  (30.1 ns)

 <State 3>: 30.1ns
The critical path consists of the following:
	'fexp' operation ('tmp', dense.cpp:12) [23]  (30.1 ns)

 <State 4>: 30.1ns
The critical path consists of the following:
	'fexp' operation ('tmp', dense.cpp:12) [23]  (30.1 ns)

 <State 5>: 16ns
The critical path consists of the following:
	'fadd' operation ('sum', dense.cpp:12) [24]  (16 ns)

 <State 6>: 16ns
The critical path consists of the following:
	'fadd' operation ('sum', dense.cpp:12) [24]  (16 ns)

 <State 7>: 1.18ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('j', dense.cpp:16) [30]  (1.18 ns)

 <State 8>: 31.3ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', dense.cpp:16) [30]  (0 ns)
	'mux' operation ('tmp_6', dense.cpp:18) [39]  (1.15 ns)
	'fexp' operation ('tmp_2', dense.cpp:18) [40]  (30.1 ns)

 <State 9>: 30.1ns
The critical path consists of the following:
	'fexp' operation ('tmp_2', dense.cpp:18) [40]  (30.1 ns)

 <State 10>: 30.1ns
The critical path consists of the following:
	'fexp' operation ('tmp_2', dense.cpp:18) [40]  (30.1 ns)

 <State 11>: 22ns
The critical path consists of the following:
	'fdiv' operation ('tmp_3', dense.cpp:18) [41]  (22 ns)

 <State 12>: 22ns
The critical path consists of the following:
	'fdiv' operation ('tmp_3', dense.cpp:18) [41]  (22 ns)

 <State 13>: 22ns
The critical path consists of the following:
	'fdiv' operation ('tmp_3', dense.cpp:18) [41]  (22 ns)

 <State 14>: 22ns
The critical path consists of the following:
	'fdiv' operation ('tmp_3', dense.cpp:18) [41]  (22 ns)

 <State 15>: 22ns
The critical path consists of the following:
	'fdiv' operation ('tmp_3', dense.cpp:18) [41]  (22 ns)
	wire write on port 'pred_1' (dense.cpp:18) [44]  (0 ns)

 <State 16>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
