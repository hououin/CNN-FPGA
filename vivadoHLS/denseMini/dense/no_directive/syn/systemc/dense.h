// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_HH_
#define _dense_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dense_fadd_32ns_3bkb.h"
#include "dense_fmul_32ns_3cud.h"
#include "dense_fdiv_32ns_3dEe.h"
#include "dense_fexp_32ns_3eOg.h"
#include "dense_mux_32_32_1_1.h"
#include "dense_dense_weights.h"

namespace ap_rtl {

struct dense : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<3> > flat_array_address0;
    sc_out< sc_logic > flat_array_ce0;
    sc_in< sc_lv<32> > flat_array_q0;
    sc_out< sc_lv<2> > prediction_address0;
    sc_out< sc_logic > prediction_ce0;
    sc_out< sc_logic > prediction_we0;
    sc_out< sc_lv<32> > prediction_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;


    // Module declarations
    dense(sc_module_name name);
    SC_HAS_PROCESS(dense);

    ~dense();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    dense_dense_weights* dense_weights_U;
    dense_fadd_32ns_3bkb<1,2,32,32,32>* dense_fadd_32ns_3bkb_U1;
    dense_fmul_32ns_3cud<1,2,32,32,32>* dense_fmul_32ns_3cud_U2;
    dense_fdiv_32ns_3dEe<1,5,32,32,32>* dense_fdiv_32ns_3dEe_U3;
    dense_fexp_32ns_3eOg<1,3,32,32,32>* dense_fexp_32ns_3eOg_U4;
    dense_mux_32_32_1_1<1,1,32,32,32,2,32>* dense_mux_32_32_1_1_U5;
    dense_mux_32_32_1_1<1,1,32,32,32,2,32>* dense_mux_32_32_1_1_U6;
    sc_signal< sc_lv<20> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > dense_weights_address0;
    sc_signal< sc_logic > dense_weights_ce0;
    sc_signal< sc_lv<32> > dense_weights_q0;
    sc_signal< sc_lv<32> > grp_fu_223_p2;
    sc_signal< sc_lv<32> > reg_237;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<2> > add_ln26_fu_252_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<2> > d_fu_352_p2;
    sc_signal< sc_lv<2> > d_reg_527;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<6> > zext_ln34_fu_358_p1;
    sc_signal< sc_lv<6> > zext_ln34_reg_532;
    sc_signal< sc_lv<1> > icmp_ln29_fu_346_p2;
    sc_signal< sc_lv<4> > f_fu_368_p2;
    sc_signal< sc_lv<4> > f_reg_540;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln34_fu_362_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > grp_fu_210_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > grp_fu_204_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<2> > i_fu_428_p2;
    sc_signal< sc_lv<2> > i_reg_578;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > tmp_1_fu_434_p5;
    sc_signal< sc_lv<1> > icmp_ln10_fu_422_p2;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<2> > j_fu_453_p2;
    sc_signal< sc_lv<2> > j_reg_596;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<32> > tmp_2_fu_459_p5;
    sc_signal< sc_lv<1> > icmp_ln16_fu_447_p2;
    sc_signal< sc_lv<2> > phi_ln26_reg_123;
    sc_signal< sc_lv<1> > icmp_ln26_fu_310_p2;
    sc_signal< sc_lv<2> > d_0_reg_134;
    sc_signal< sc_lv<32> > dense_array_0_reg_146;
    sc_signal< sc_lv<4> > f_0_reg_158;
    sc_signal< sc_lv<32> > sum_0_i_reg_169;
    sc_signal< sc_lv<2> > i_0_i_reg_181;
    sc_signal< sc_lv<2> > j_0_i_reg_192;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<64> > sext_ln36_fu_402_p1;
    sc_signal< sc_lv<64> > zext_ln36_fu_374_p1;
    sc_signal< sc_lv<64> > zext_ln18_fu_472_p1;
    sc_signal< sc_lv<32> > dense_array_0_0_fu_60;
    sc_signal< sc_lv<32> > select_ln26_4_fu_302_p3;
    sc_signal< sc_lv<32> > dense_array_1_0_fu_64;
    sc_signal< sc_lv<32> > select_ln26_3_fu_294_p3;
    sc_signal< sc_lv<32> > dense_array_2_0_fu_68;
    sc_signal< sc_lv<32> > select_ln26_1_fu_278_p3;
    sc_signal< sc_lv<32> > dense_array_2_fu_72;
    sc_signal< sc_lv<32> > dense_array_2_1_fu_76;
    sc_signal< sc_lv<32> > dense_array_2_2_fu_80;
    sc_signal< sc_lv<32> > grp_fu_217_p2;
    sc_signal< sc_lv<32> > grp_fu_204_p0;
    sc_signal< sc_lv<32> > grp_fu_204_p1;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<32> > grp_fu_223_p1;
    sc_signal< sc_lv<1> > icmp_ln26_1_fu_258_p2;
    sc_signal< sc_lv<1> > icmp_ln26_2_fu_272_p2;
    sc_signal< sc_lv<32> > select_ln26_fu_264_p3;
    sc_signal< sc_lv<32> > select_ln26_2_fu_286_p3;
    sc_signal< sc_lv<6> > tmp_3_fu_383_p3;
    sc_signal< sc_lv<6> > zext_ln36_1_fu_379_p1;
    sc_signal< sc_lv<6> > sub_ln36_fu_391_p2;
    sc_signal< sc_lv<6> > add_ln36_fu_397_p2;
    sc_signal< sc_lv<20> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<20> ap_ST_fsm_state1;
    static const sc_lv<20> ap_ST_fsm_state2;
    static const sc_lv<20> ap_ST_fsm_state3;
    static const sc_lv<20> ap_ST_fsm_state4;
    static const sc_lv<20> ap_ST_fsm_state5;
    static const sc_lv<20> ap_ST_fsm_state6;
    static const sc_lv<20> ap_ST_fsm_state7;
    static const sc_lv<20> ap_ST_fsm_state8;
    static const sc_lv<20> ap_ST_fsm_state9;
    static const sc_lv<20> ap_ST_fsm_state10;
    static const sc_lv<20> ap_ST_fsm_state11;
    static const sc_lv<20> ap_ST_fsm_state12;
    static const sc_lv<20> ap_ST_fsm_state13;
    static const sc_lv<20> ap_ST_fsm_state14;
    static const sc_lv<20> ap_ST_fsm_state15;
    static const sc_lv<20> ap_ST_fsm_state16;
    static const sc_lv<20> ap_ST_fsm_state17;
    static const sc_lv<20> ap_ST_fsm_state18;
    static const sc_lv<20> ap_ST_fsm_state19;
    static const sc_lv<20> ap_ST_fsm_state20;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln26_fu_252_p2();
    void thread_add_ln36_fu_397_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_d_fu_352_p2();
    void thread_dense_weights_address0();
    void thread_dense_weights_ce0();
    void thread_f_fu_368_p2();
    void thread_flat_array_address0();
    void thread_flat_array_ce0();
    void thread_grp_fu_204_p0();
    void thread_grp_fu_204_p1();
    void thread_grp_fu_223_p1();
    void thread_i_fu_428_p2();
    void thread_icmp_ln10_fu_422_p2();
    void thread_icmp_ln16_fu_447_p2();
    void thread_icmp_ln26_1_fu_258_p2();
    void thread_icmp_ln26_2_fu_272_p2();
    void thread_icmp_ln26_fu_310_p2();
    void thread_icmp_ln29_fu_346_p2();
    void thread_icmp_ln34_fu_362_p2();
    void thread_j_fu_453_p2();
    void thread_prediction_address0();
    void thread_prediction_ce0();
    void thread_prediction_d0();
    void thread_prediction_we0();
    void thread_select_ln26_1_fu_278_p3();
    void thread_select_ln26_2_fu_286_p3();
    void thread_select_ln26_3_fu_294_p3();
    void thread_select_ln26_4_fu_302_p3();
    void thread_select_ln26_fu_264_p3();
    void thread_sext_ln36_fu_402_p1();
    void thread_sub_ln36_fu_391_p2();
    void thread_tmp_3_fu_383_p3();
    void thread_zext_ln18_fu_472_p1();
    void thread_zext_ln34_fu_358_p1();
    void thread_zext_ln36_1_fu_379_p1();
    void thread_zext_ln36_fu_374_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
